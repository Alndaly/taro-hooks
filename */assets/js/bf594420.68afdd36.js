"use strict";(self.webpackChunk_taro_hooks_website=self.webpackChunk_taro_hooks_website||[]).push([[2382],{3:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});t(3262);var o=t(5318),a=t(2984),r=t(9018);function s(){return s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},s.apply(this,arguments)}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}const l={title:"Ready",sidebar_position:5},u=void 0,d={unversionedId:"useRequest/ready",id:"useRequest/ready",title:"Ready",description:"useRequest \u63d0\u4f9b\u4e86\u4e00\u4e2a options.ready \u53c2\u6570\uff0c\u5f53\u5176\u503c\u4e3a false \u65f6\uff0c\u8bf7\u6c42\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u53d1\u51fa\u3002",source:"@site/../packages/hooks/src/useRequest/ready.mdx",sourceDirName:"useRequest",slug:"/useRequest/ready",permalink:"/taro-hooks/hooks/useRequest/ready",draft:!1,editUrl:"https://github.com/innocces/taro-hooks/edit/next/src/../packages/hooks/src/useRequest/ready.mdx",tags:[],version:"current",lastUpdatedBy:"innocces",lastUpdatedAt:1669533966,formattedLastUpdatedAt:"2022\u5e7411\u670827\u65e5",sidebarPosition:5,frontMatter:{title:"Ready",sidebar_position:5},sidebar:"hooks",previous:{title:"\u8f6e\u8be2",permalink:"/taro-hooks/hooks/useRequest/polling"},next:{title:"\u4f9d\u8d56\u5237\u65b0",permalink:"/taro-hooks/hooks/useRequest/refreshDeps"}},m={},p=[{value:"\u81ea\u52a8\u6a21\u5f0f",id:"\u81ea\u52a8\u6a21\u5f0f",level:3},{value:"\u624b\u52a8\u6a21\u5f0f",id:"\u624b\u52a8\u6a21\u5f0f",level:3},{value:"API",id:"api",level:3},{value:"Options",id:"options",level:4}],c={toc:p};function k(e){var{components:n}=e,t=i(e,["components"]);return(0,o.kt)("wrapper",s({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"useRequest \u63d0\u4f9b\u4e86\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"options.ready")," \u53c2\u6570\uff0c\u5f53\u5176\u503c\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," \u65f6\uff0c\u8bf7\u6c42\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u53d1\u51fa\u3002"),(0,o.kt)("p",null,"\u5176\u5177\u4f53\u884c\u4e3a\u5982\u4e0b\uff1a"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u5f53 ",(0,o.kt)("inlineCode",{parentName:"li"},"manual=false")," \u81ea\u52a8\u8bf7\u6c42\u6a21\u5f0f\u65f6\uff0c\u6bcf\u6b21 ",(0,o.kt)("inlineCode",{parentName:"li"},"ready")," \u4ece ",(0,o.kt)("inlineCode",{parentName:"li"},"false")," \u53d8\u4e3a ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," \u65f6\uff0c\u90fd\u4f1a\u81ea\u52a8\u53d1\u8d77\u8bf7\u6c42\uff0c\u4f1a\u5e26\u4e0a\u53c2\u6570 ",(0,o.kt)("inlineCode",{parentName:"li"},"options.defaultParams"),"\u3002"),(0,o.kt)("li",{parentName:"ol"},"\u5f53 ",(0,o.kt)("inlineCode",{parentName:"li"},"manual=true")," \u624b\u52a8\u8bf7\u6c42\u6a21\u5f0f\u65f6\uff0c\u53ea\u8981 ",(0,o.kt)("inlineCode",{parentName:"li"},"ready=false"),"\uff0c\u5219\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"li"},"run/runAsync")," \u89e6\u53d1\u7684\u8bf7\u6c42\u90fd\u4e0d\u4f1a\u6267\u884c\u3002")),(0,o.kt)("h3",s({},{id:"\u81ea\u52a8\u6a21\u5f0f"}),"\u81ea\u52a8\u6a21\u5f0f"),(0,o.kt)("p",null,"\u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u4e86\u81ea\u52a8\u6a21\u5f0f\u4e0b ",(0,o.kt)("inlineCode",{parentName:"p"},"ready")," \u7684\u884c\u4e3a\u3002\u6bcf\u6b21 ",(0,o.kt)("inlineCode",{parentName:"p"},"ready")," \u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," \u53d8\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," \u65f6\uff0c\u90fd\u4f1a\u91cd\u65b0\u53d1\u8d77\u8bf7\u6c42\u3002"),(0,o.kt)(r.ZP,{VueTab:(0,o.kt)(a.Z,{language:"html",title:"network/useRequest/ready/index",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/ready/index.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/ready/index",mdxType:"CodeDisplay"},'<template>\n  <block>\n    <demo-content title="Ready - \u81ea\u52a8\u6a21\u5f0f">\n      <view>Ready: {{ JSON.stringify(ready) }}</view>\n      <nut-row justify="center">\n        <nut-button\n          :loading="request.loading"\n          size="small"\n          type="primary"\n          shape="square"\n          block\n          @click="action.toggle()"\n        >\n          Toggle Ready\n        </nut-button>\n      </nut-row>\n      <view>Username: {{ request.loading ? \'Loading...\' : request.data }}</view>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useRequest } from \'taro-hooks\';\nimport { useToggle } from \'@taro-hooks/ahooks\';\n\nimport Mock from \'mockjs\';\n\nfunction getUsername() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock(\'@name()\'));\n    }, 1000);\n  });\n}\nexport default {\n  setup() {\n    const [ready, action] = useToggle(false);\n\n    const request = useRequest(getUsername, {\n      ready,\n    });\n\n    return { request, ready, action };\n  },\n};\n<\/script>\n'),ReactTab:(0,o.kt)(a.Z,{language:"tsx",title:"network/useRequest/ready/index",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/ready/index.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/ready/index",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Field } from '@taroify/core';\n\nimport { useRequest } from 'taro-hooks';\nimport { useToggle } from '@taro-hooks/ahooks';\nimport Mock from 'mockjs';\n\nfunction getUsername(): Promise<string> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock('@name()'));\n    }, 1000);\n  });\n}\n\nexport default () => {\n  const [ready, { toggle }] = useToggle(false);\n\n  const { data, loading } = useRequest(getUsername, {\n    ready,\n  });\n\n  return (\n    <DemoContent title=\"Ready - \u81ea\u52a8\u6a21\u5f0f\">\n      <Field align=\"start\">Ready: {JSON.stringify(ready)}</Field>\n      <Field align=\"center\">\n        <Button\n          loading={loading}\n          color=\"primary\"\n          size=\"small\"\n          block\n          onClick={toggle}\n        >\n          Toggle Ready\n        </Button>\n      </Field>\n      <Field align=\"start\">Username: {loading ? 'Loading' : data}</Field>\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,o.kt)("h3",s({},{id:"\u624b\u52a8\u6a21\u5f0f"}),"\u624b\u52a8\u6a21\u5f0f"),(0,o.kt)("p",null,"\u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u4e86\u624b\u52a8\u6a21\u5f0f\u4e0b ",(0,o.kt)("inlineCode",{parentName:"p"},"ready")," \u7684\u884c\u4e3a\u3002\u53ea\u6709\u5f53 ",(0,o.kt)("inlineCode",{parentName:"p"},"ready")," \u7b49\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," \u65f6\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"run")," \u624d\u4f1a\u6267\u884c\u3002"),(0,o.kt)(r.ZP,{VueTab:(0,o.kt)(a.Z,{language:"html",title:"network/useRequest/ready/manualReady",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/ready/manualReady.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/ready/manualReady",mdxType:"CodeDisplay"},'<template>\n  <block>\n    <demo-content title="Ready - \u624b\u52a8\u6a21\u5f0f">\n      <view>Ready: {{ JSON.stringify(ready) }}</view>\n      <nut-row justify="center">\n        <nut-button\n          :loading="request.loading"\n          size="small"\n          type="primary"\n          shape="square"\n          block\n          @click="action.toggle()"\n        >\n          Toggle Ready\n        </nut-button>\n      </nut-row>\n      <view>Username: {{ request.loading ? \'Loading...\' : request.data }}</view>\n      <nut-row justify="center">\n        <nut-button\n          :loading="request.loading"\n          size="small"\n          type="primary"\n          shape="square"\n          block\n          @click="request.run()"\n        >\n          run\n        </nut-button>\n      </nut-row>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useRequest } from \'taro-hooks\';\nimport { useToggle } from \'@taro-hooks/ahooks\';\n\nimport Mock from \'mockjs\';\n\nfunction getUsername() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock(\'@name()\'));\n    }, 1000);\n  });\n}\nexport default {\n  setup() {\n    const [ready, action] = useToggle(false);\n\n    const request = useRequest(getUsername, {\n      ready,\n      manual: true,\n    });\n\n    return { request, ready, action };\n  },\n};\n<\/script>\n'),ReactTab:(0,o.kt)(a.Z,{language:"tsx",title:"network/useRequest/ready/manualReady",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/ready/manualReady.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/ready/manualReady",mdxType:"CodeDisplay"},'import React from \'react\';\nimport DemoContent from \'@src/components/DemoContent\';\nimport { Button, Field } from \'@taroify/core\';\n\nimport { useRequest } from \'taro-hooks\';\nimport { useToggle } from \'@taro-hooks/ahooks\';\nimport Mock from \'mockjs\';\n\nfunction getUsername(): Promise<string> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock(\'@name()\'));\n    }, 1000);\n  });\n}\n\nexport default () => {\n  const [ready, { toggle }] = useToggle(false);\n\n  const { data, loading, run } = useRequest(getUsername, {\n    ready,\n    manual: true,\n  });\n\n  return (\n    <DemoContent title="Ready - \u624b\u52a8\u6a21\u5f0f">\n      <Field align="start">Ready: {JSON.stringify(ready)}</Field>\n      <Field align="center">\n        <Button\n          loading={loading}\n          color="primary"\n          size="small"\n          block\n          onClick={toggle}\n        >\n          Toggle Ready\n        </Button>\n      </Field>\n      <Field align="start">Username: {loading ? \'Loading\' : data}</Field>\n      <Field align="center">\n        <Button\n          loading={loading}\n          color="primary"\n          size="small"\n          block\n          onClick={run}\n        >\n          run\n        </Button>\n      </Field>\n    </DemoContent>\n  );\n};\n'),mdxType:"CombineTabs"}),(0,o.kt)("h3",s({},{id:"api"}),"API"),(0,o.kt)("h4",s({},{id:"options"}),"Options"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",s({parentName:"tr"},{align:null}),"\u53c2\u6570"),(0,o.kt)("th",s({parentName:"tr"},{align:null}),"\u8bf4\u660e"),(0,o.kt)("th",s({parentName:"tr"},{align:null}),"\u7c7b\u578b"),(0,o.kt)("th",s({parentName:"tr"},{align:null}),"\u9ed8\u8ba4\u503c"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",s({parentName:"tr"},{align:null}),"ready"),(0,o.kt)("td",s({parentName:"tr"},{align:null}),"\u5f53\u524d\u8bf7\u6c42\u662f\u5426\u51c6\u5907\u597d\u4e86"),(0,o.kt)("td",s({parentName:"tr"},{align:null}),(0,o.kt)("inlineCode",{parentName:"td"},"boolean")),(0,o.kt)("td",s({parentName:"tr"},{align:null}),(0,o.kt)("inlineCode",{parentName:"td"},"true"))))))}k.isMDXComponent=!0}}]);