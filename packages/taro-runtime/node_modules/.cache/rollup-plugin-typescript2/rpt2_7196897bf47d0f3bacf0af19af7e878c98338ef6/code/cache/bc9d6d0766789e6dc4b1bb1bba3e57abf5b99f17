{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { inject, injectable } from 'inversify';\r\nimport { ensure } from '@tarojs/shared';\r\nimport SERVICE_IDENTIFIER from '../constants/identifiers';\r\nimport { incrementId, isComment } from '../utils';\r\nimport { TaroEventTarget } from './event-target';\r\nimport { hydrate } from '../hydrate';\r\nimport { eventSource } from './event-source';\r\nimport { ElementNames } from '../interface';\r\nimport { STYLE, DATASET, PROPS, OBJECT } from '../constants';\r\nconst nodeId = incrementId();\r\nlet TaroNode = class TaroNode extends TaroEventTarget {\r\n    constructor(// eslint-disable-next-line @typescript-eslint/indent\r\n    impl, getElement, hooks) {\r\n        super(hooks);\r\n        this.parentNode = null;\r\n        this.childNodes = [];\r\n        this.hydrate = (node) => () => hydrate(node);\r\n        impl.bind(this);\r\n        this._getElement = getElement;\r\n        this.uid = `_n_${nodeId()}`;\r\n        eventSource.set(this.uid, this);\r\n    }\r\n    /**\r\n     * like jQuery's $.empty()\r\n     */\r\n    _empty() {\r\n        while (this.childNodes.length > 0) {\r\n            const child = this.childNodes[0];\r\n            child.parentNode = null;\r\n            eventSource.delete(child.uid);\r\n            this.childNodes.shift();\r\n        }\r\n    }\r\n    get _root() {\r\n        var _a;\r\n        return ((_a = this.parentNode) === null || _a === void 0 ? void 0 : _a._root) || null;\r\n    }\r\n    findIndex(refChild) {\r\n        const index = this.childNodes.indexOf(refChild);\r\n        ensure(index !== -1, 'The node to be replaced is not a child of this node.');\r\n        return index;\r\n    }\r\n    get _path() {\r\n        const parentNode = this.parentNode;\r\n        if (parentNode) {\r\n            // 计算路径时，先过滤掉 comment 节点\r\n            const list = parentNode.childNodes.filter(node => !isComment(node));\r\n            const indexOfNode = list.indexOf(this);\r\n            const index = this.hooks.getPathIndex(indexOfNode);\r\n            return `${parentNode._path}.${\"cn\" /* Childnodes */}.${index}`;\r\n        }\r\n        return '';\r\n    }\r\n    get nextSibling() {\r\n        const parentNode = this.parentNode;\r\n        return (parentNode === null || parentNode === void 0 ? void 0 : parentNode.childNodes[parentNode.findIndex(this) + 1]) || null;\r\n    }\r\n    get previousSibling() {\r\n        const parentNode = this.parentNode;\r\n        return (parentNode === null || parentNode === void 0 ? void 0 : parentNode.childNodes[parentNode.findIndex(this) - 1]) || null;\r\n    }\r\n    get parentElement() {\r\n        const parentNode = this.parentNode;\r\n        if ((parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeType) === 1 /* ELEMENT_NODE */) {\r\n            return parentNode;\r\n        }\r\n        return null;\r\n    }\r\n    get firstChild() {\r\n        return this.childNodes[0] || null;\r\n    }\r\n    get lastChild() {\r\n        const childNodes = this.childNodes;\r\n        return childNodes[childNodes.length - 1] || null;\r\n    }\r\n    /**\r\n     * @textContent 目前只能置空子元素\r\n     * @TODO 等待完整 innerHTML 实现\r\n     */\r\n    set textContent(text) {\r\n        this._empty();\r\n        if (text === '') {\r\n            this.enqueueUpdate({\r\n                path: `${this._path}.${\"cn\" /* Childnodes */}`,\r\n                value: () => []\r\n            });\r\n        }\r\n        else {\r\n            const document = this._getElement(ElementNames.Document)();\r\n            this.appendChild(document.createTextNode(text));\r\n        }\r\n    }\r\n    insertBefore(newChild, refChild, isReplace) {\r\n        newChild.remove();\r\n        newChild.parentNode = this;\r\n        let payload;\r\n        if (refChild) {\r\n            const index = this.findIndex(refChild);\r\n            this.childNodes.splice(index, 0, newChild);\r\n            if (isReplace) {\r\n                payload = {\r\n                    path: newChild._path,\r\n                    value: this.hydrate(newChild)\r\n                };\r\n            }\r\n            else {\r\n                payload = {\r\n                    path: `${this._path}.${\"cn\" /* Childnodes */}`,\r\n                    value: () => this.childNodes.map(hydrate)\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            this.childNodes.push(newChild);\r\n            payload = {\r\n                path: newChild._path,\r\n                value: this.hydrate(newChild)\r\n            };\r\n        }\r\n        this.enqueueUpdate(payload);\r\n        if (!eventSource.has(newChild.uid)) {\r\n            eventSource.set(newChild.uid, newChild);\r\n        }\r\n        return newChild;\r\n    }\r\n    appendChild(child) {\r\n        this.insertBefore(child);\r\n    }\r\n    replaceChild(newChild, oldChild) {\r\n        if (oldChild.parentNode === this) {\r\n            this.insertBefore(newChild, oldChild, true);\r\n            oldChild.remove(true);\r\n            return oldChild;\r\n        }\r\n    }\r\n    removeChild(child, isReplace) {\r\n        const index = this.findIndex(child);\r\n        this.childNodes.splice(index, 1);\r\n        if (!isReplace) {\r\n            this.enqueueUpdate({\r\n                path: `${this._path}.${\"cn\" /* Childnodes */}`,\r\n                value: () => this.childNodes.map(hydrate)\r\n            });\r\n        }\r\n        child.parentNode = null;\r\n        eventSource.delete(child.uid);\r\n        // @TODO: eventSource memory overflow\r\n        // child._empty()\r\n        return child;\r\n    }\r\n    remove(isReplace) {\r\n        var _a;\r\n        (_a = this.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this, isReplace);\r\n    }\r\n    hasChildNodes() {\r\n        return this.childNodes.length > 0;\r\n    }\r\n    enqueueUpdate(payload) {\r\n        var _a;\r\n        (_a = this._root) === null || _a === void 0 ? void 0 : _a.enqueueUpdate(payload);\r\n    }\r\n    cloneNode(isDeep = false) {\r\n        const document = this._getElement(ElementNames.Document)();\r\n        let newNode;\r\n        if (this.nodeType === 1 /* ELEMENT_NODE */) {\r\n            newNode = document.createElement(this.nodeName);\r\n        }\r\n        else if (this.nodeType === 3 /* TEXT_NODE */) {\r\n            newNode = document.createTextNode('');\r\n        }\r\n        for (const key in this) {\r\n            const value = this[key];\r\n            if ([PROPS, DATASET].includes(key) && typeof value === OBJECT) {\r\n                newNode[key] = Object.assign({}, value);\r\n            }\r\n            else if (key === '_value') {\r\n                newNode[key] = value;\r\n            }\r\n            else if (key === STYLE) {\r\n                newNode.style._value = Object.assign({}, value._value);\r\n                newNode.style._usedStyleProp = new Set(Array.from(value._usedStyleProp));\r\n            }\r\n        }\r\n        if (isDeep) {\r\n            newNode.childNodes = this.childNodes.map(node => node.cloneNode(true));\r\n        }\r\n        return newNode;\r\n    }\r\n    contains(node) {\r\n        let isContains = false;\r\n        this.childNodes.some(childNode => {\r\n            const { uid } = childNode;\r\n            if (uid === node.uid || uid === node.id || childNode.contains(node)) {\r\n                isContains = true;\r\n                return true;\r\n            }\r\n        });\r\n        return isContains;\r\n    }\r\n};\r\nTaroNode = __decorate([\r\n    injectable(),\r\n    __param(0, inject(SERVICE_IDENTIFIER.TaroNodeImpl)),\r\n    __param(1, inject(SERVICE_IDENTIFIER.TaroElementFactory)),\r\n    __param(2, inject(SERVICE_IDENTIFIER.Hooks)),\r\n    __metadata(\"design:paramtypes\", [Function, Function, Function])\r\n], TaroNode);\r\nexport { TaroNode };\r\n//# sourceMappingURL=node.js.map","references":["/Users/inoccent/github/taro-hooks/node_modules/inversify/lib/inversify.d.ts","/Users/inoccent/github/taro-hooks/node_modules/@tarojs/shared/dist/index.d.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/identifiers.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/node_types.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/utils/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/event-target.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/hydrate.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/event-source.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/document.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/root.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/node-impl.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/hooks.ts"],"map":"{\"version\":3,\"file\":\"node.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/dom/node.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/dom/node.d.ts","writeByteOrderMark":false,"text":"import { NodeType } from './node_types';\r\nimport { TaroEventTarget } from './event-target';\r\nimport type { UpdatePayload, InstanceNamedFactory } from '../interface';\r\nimport type { TaroRootElement } from './root';\r\nimport type { TaroElement } from './element';\r\nimport type { TaroNodeImpl } from '../dom-external/node-impl';\r\nimport type { Hooks } from '../hooks';\r\nexport declare class TaroNode extends TaroEventTarget {\r\n    uid: string;\r\n    nodeType: NodeType;\r\n    nodeName: string;\r\n    parentNode: TaroNode | null;\r\n    childNodes: TaroNode[];\r\n    protected _getElement: InstanceNamedFactory;\r\n    constructor(// eslint-disable-next-line @typescript-eslint/indent\r\n    impl: TaroNodeImpl, getElement: InstanceNamedFactory, hooks: Hooks);\r\n    private hydrate;\r\n    /**\r\n     * like jQuery's $.empty()\r\n     */\r\n    private _empty;\r\n    protected get _root(): TaroRootElement | null;\r\n    protected findIndex(refChild: TaroNode): number;\r\n    get _path(): string;\r\n    get nextSibling(): TaroNode | null;\r\n    get previousSibling(): TaroNode | null;\r\n    get parentElement(): TaroElement | null;\r\n    get firstChild(): TaroNode | null;\r\n    get lastChild(): TaroNode | null;\r\n    /**\r\n     * @textContent 目前只能置空子元素\r\n     * @TODO 等待完整 innerHTML 实现\r\n     */\r\n    set textContent(text: string);\r\n    insertBefore<T extends TaroNode>(newChild: T, refChild?: TaroNode | null, isReplace?: boolean): T;\r\n    appendChild(child: TaroNode): void;\r\n    replaceChild(newChild: TaroNode, oldChild: TaroNode): TaroNode | undefined;\r\n    removeChild<T extends TaroNode>(child: T, isReplace?: boolean): T;\r\n    remove(isReplace?: boolean): void;\r\n    hasChildNodes(): boolean;\r\n    enqueueUpdate(payload: UpdatePayload): void;\r\n    cloneNode(isDeep?: boolean): any;\r\n    contains(node: TaroNode & {\r\n        id?: string;\r\n    }): boolean;\r\n}\r\n"}}
