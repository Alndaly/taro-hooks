{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { isFunction, warn } from '@tarojs/shared';\r\nimport { inject, injectable, optional } from 'inversify';\r\nimport SERVICE_IDENTIFIER from '../constants/identifiers';\r\nlet TaroElementImpl = class TaroElementImpl {\r\n    constructor(// eslint-disable-next-line @typescript-eslint/indent\r\n    rectImpl) {\r\n        this.rectImpl = rectImpl;\r\n    }\r\n    bind(ctx) {\r\n        this.bindRect(ctx);\r\n    }\r\n    bindRect(ctx) {\r\n        const impl = this.rectImpl;\r\n        ctx.getBoundingClientRect = async function (...args) {\r\n            if (isFunction(impl)) {\r\n                return await impl.apply(ctx, args);\r\n            }\r\n            process.env.NODE_ENV !== 'production' && warn(true, '请实现 element.getBoundingClientRect');\r\n            return Promise.resolve(null);\r\n        };\r\n    }\r\n};\r\nTaroElementImpl = __decorate([\r\n    injectable(),\r\n    __param(0, inject(SERVICE_IDENTIFIER.getBoundingClientRectImpl)), __param(0, optional()),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], TaroElementImpl);\r\nexport { TaroElementImpl };\r\n//# sourceMappingURL=element-impl.js.map","references":["/Users/inoccent/github/taro-hooks/node_modules/@tarojs/shared/dist/index.d.ts","/Users/inoccent/github/taro-hooks/node_modules/inversify/lib/inversify.d.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/identifiers.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/element.ts"],"map":"{\"version\":3,\"file\":\"element-impl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/dom-external/element-impl.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAA;AACjD,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAA;AACxD,OAAO,kBAAkB,MAAM,0BAA0B,CAAA;AAMzD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAG1B,YAAa,qDAAqD;IACE,QAA0C;QAE5G,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;IAC1B,CAAC;IAED,IAAI,CAAE,GAAQ;QACZ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;IACpB,CAAC;IAED,QAAQ,CAAE,GAAQ;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC1B,GAAG,CAAC,qBAAqB,GAAG,KAAK,WAAW,GAAG,IAAW;YACxD,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;gBACpB,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;aACnC;YAED,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,IAAI,IAAI,CAAC,IAAI,EAAE,mCAAmC,CAAC,CAAA;YACxF,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAC9B,CAAC,CAAA;IACH,CAAC;CACF,CAAA;AAxBY,eAAe;IAD3B,UAAU,EAAE;IAKR,WAAA,MAAM,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,CAAA,EAAE,WAAA,QAAQ,EAAE,CAAA;;GAJxD,eAAe,CAwB3B;SAxBY,eAAe\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/dom-external/element-impl.d.ts","writeByteOrderMark":false,"text":"import type { Ctx } from '../interface';\r\nimport type { getBoundingClientRectImpl } from './element';\r\nexport declare class TaroElementImpl {\r\n    rectImpl: typeof getBoundingClientRectImpl;\r\n    constructor(// eslint-disable-next-line @typescript-eslint/indent\r\n    rectImpl: typeof getBoundingClientRectImpl);\r\n    bind(ctx: Ctx): void;\r\n    bindRect(ctx: Ctx): void;\r\n}\r\n"}}
