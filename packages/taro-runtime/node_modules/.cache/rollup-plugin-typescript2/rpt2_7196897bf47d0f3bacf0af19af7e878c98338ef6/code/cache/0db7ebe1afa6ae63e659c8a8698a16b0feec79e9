{"code":"function returnTrue() {\r\n    return true;\r\n}\r\nexport function treeToArray(root, predict) {\r\n    const array = [];\r\n    const filter = predict !== null && predict !== void 0 ? predict : returnTrue;\r\n    let object = root;\r\n    while (object) {\r\n        if (object.nodeType === 1 /* ELEMENT_NODE */ && filter(object)) {\r\n            array.push(object);\r\n        }\r\n        object = following(object, root);\r\n    }\r\n    return array;\r\n}\r\nfunction following(el, root) {\r\n    const firstChild = el.firstChild;\r\n    if (firstChild) {\r\n        return firstChild;\r\n    }\r\n    let current = el;\r\n    do {\r\n        if (current === root) {\r\n            return null;\r\n        }\r\n        const nextSibling = current.nextSibling;\r\n        if (nextSibling) {\r\n            return nextSibling;\r\n        }\r\n        current = current.parentElement;\r\n    } while (current);\r\n    return null;\r\n}\r\n//# sourceMappingURL=tree.js.map","references":["/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/node_types.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts"],"map":"{\"version\":3,\"file\":\"tree.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/dom/tree.ts\"],\"names\":[],\"mappings\":\"AAMA,SAAS,UAAU;IACjB,OAAO,IAAI,CAAA;AACb,CAAC;AAED,MAAM,UAAU,WAAW,CAAE,IAAiB,EAAE,OAAgB;IAC9D,MAAM,KAAK,GAAkB,EAAE,CAAA;IAC/B,MAAM,MAAM,GAAG,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,UAAU,CAAA;IAEpC,IAAI,MAAM,GAAuB,IAAI,CAAA;IAErC,OAAO,MAAM,EAAE;QACb,IAAI,MAAM,CAAC,QAAQ,yBAA0B,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;YAC/D,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SACnB;QAED,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;KACjC;IAED,OAAO,KAAK,CAAA;AACd,CAAC;AAED,SAAS,SAAS,CAAE,EAAe,EAAE,IAAiB;IACpD,MAAM,UAAU,GAAG,EAAE,CAAC,UAAU,CAAA;IAEhC,IAAI,UAAU,EAAE;QACd,OAAO,UAAyB,CAAA;KACjC;IAED,IAAI,OAAO,GAAuB,EAAE,CAAA;IAEpC,GAAG;QACD,IAAI,OAAO,KAAK,IAAI,EAAE;YACpB,OAAO,IAAI,CAAA;SACZ;QAED,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAA;QAEvC,IAAI,WAAW,EAAE;YACf,OAAO,WAA0B,CAAA;SAClC;QACD,OAAO,GAAG,OAAO,CAAC,aAAa,CAAA;KAChC,QAAQ,OAAO,EAAC;IAEjB,OAAO,IAAI,CAAA;AACb,CAAC\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/dom/tree.d.ts","writeByteOrderMark":false,"text":"import type { TaroElement } from './element';\r\ndeclare type Filter = (element: TaroElement) => boolean;\r\nexport declare function treeToArray(root: TaroElement, predict?: Filter): TaroElement[];\r\nexport {};\r\n"}}
