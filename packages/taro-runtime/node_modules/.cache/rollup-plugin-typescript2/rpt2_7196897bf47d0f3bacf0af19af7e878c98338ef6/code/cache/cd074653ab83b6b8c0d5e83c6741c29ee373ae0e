{"code":"export {};\r\n//# sourceMappingURL=options.js.map","references":["/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/text.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/inner-html/parser.ts"],"map":"{\"version\":3,\"file\":\"options.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/interface/options.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/interface/options.d.ts","writeByteOrderMark":false,"text":"import type { TaroText } from '../dom/text';\r\nimport type { TaroElement } from '../dom/element';\r\nimport type { Text, Element } from '../dom-external/inner-html/parser';\r\nexport interface Options {\r\n    prerender: boolean;\r\n    debug: boolean;\r\n    html?: {\r\n        skipElements: Set<string>;\r\n        voidElements: Set<string>;\r\n        closingElements: Set<string>;\r\n        transformText?: (taroText: TaroText, text: Text) => TaroText;\r\n        transformElement?: (taroElement: TaroElement, element: Element) => TaroElement;\r\n        renderHTMLTag: boolean;\r\n    };\r\n    miniGlobal?: any;\r\n}\r\n"}}
