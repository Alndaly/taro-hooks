{"code":"import container from '../container';\r\nimport SERVICE_IDENTIFIER from '../constants/identifiers';\r\nexport class Events {\r\n    constructor(opts) {\r\n        if (typeof opts !== 'undefined' && opts.callbacks) {\r\n            this.callbacks = opts.callbacks;\r\n        }\r\n        else {\r\n            this.callbacks = {};\r\n        }\r\n    }\r\n    on(eventName, callback, context) {\r\n        let event, node, tail, list;\r\n        if (!callback) {\r\n            return this;\r\n        }\r\n        eventName = eventName.split(Events.eventSplitter);\r\n        this.callbacks || (this.callbacks = {});\r\n        const calls = this.callbacks;\r\n        while ((event = eventName.shift())) {\r\n            list = calls[event];\r\n            node = list ? list.tail : {};\r\n            node.next = tail = {};\r\n            node.context = context;\r\n            node.callback = callback;\r\n            calls[event] = {\r\n                tail,\r\n                next: list ? list.next : node\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    once(events, callback, context) {\r\n        const wrapper = (...args) => {\r\n            callback.apply(this, args);\r\n            this.off(events, wrapper, context);\r\n        };\r\n        this.on(events, wrapper, context);\r\n        return this;\r\n    }\r\n    off(events, callback, context) {\r\n        let event, calls, node, tail, cb, ctx;\r\n        if (!(calls = this.callbacks)) {\r\n            return this;\r\n        }\r\n        if (!(events || callback || context)) {\r\n            delete this.callbacks;\r\n            return this;\r\n        }\r\n        events = events ? events.split(Events.eventSplitter) : Object.keys(calls);\r\n        while ((event = events.shift())) {\r\n            node = calls[event];\r\n            delete calls[event];\r\n            if (!node || !(callback || context)) {\r\n                continue;\r\n            }\r\n            tail = node.tail;\r\n            while ((node = node.next) !== tail) {\r\n                cb = node.callback;\r\n                ctx = node.context;\r\n                if ((callback && cb !== callback) || (context && ctx !== context)) {\r\n                    this.on(event, cb, ctx);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    trigger(events) {\r\n        let event, node, calls, tail;\r\n        if (!(calls = this.callbacks)) {\r\n            return this;\r\n        }\r\n        events = events.split(Events.eventSplitter);\r\n        const rest = [].slice.call(arguments, 1);\r\n        while ((event = events.shift())) {\r\n            if ((node = calls[event])) {\r\n                tail = node.tail;\r\n                while ((node = node.next) !== tail) {\r\n                    node.callback.apply(node.context || this, rest);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\nEvents.eventSplitter = /\\s+/;\r\nconst hooks = container.get(SERVICE_IDENTIFIER.Hooks);\r\nconst eventCenter = hooks.getEventCenter(Events);\r\ncontainer.bind(SERVICE_IDENTIFIER.eventCenter).toConstantValue(eventCenter);\r\nexport { eventCenter };\r\n//# sourceMappingURL=emitter.js.map","references":["/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/container/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/identifiers.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts"],"map":"{\"version\":3,\"file\":\"emitter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/emitter/emitter.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/emitter/emitter.d.ts","writeByteOrderMark":false,"text":"declare type Callback1<T1> = (arg1: T1) => any;\r\ndeclare type Callback2<T1, T2> = (arg1: T1, arg2: T2) => any;\r\ndeclare type Callback3<T1, T2, T3> = (arg1: T1, arg2: T2, arg3: T3) => any;\r\ndeclare type Callback4<T1, T2, T3, T4> = (arg1: T1, arg2: T2, arg3: T3, arg4: T4) => any;\r\ndeclare type Callback5<T1, T2, T3, T4, T5> = (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5) => any;\r\ndeclare type Callback6Rest<T1, T2, T3, T4, T5, T6> = (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, ...rest: any[]) => any;\r\nexport declare class Events {\r\n    private callbacks?;\r\n    static eventSplitter: RegExp;\r\n    constructor(opts?: any);\r\n    on<T>(event: string, callback: Callback1<T>, context: any): this;\r\n    on<T1, T2>(event: string, callback: Callback2<T1, T2>, context: any): this;\r\n    on<T1, T2, T3>(event: string, callback: Callback3<T1, T2, T3>, context: any): this;\r\n    on<T1, T2, T3, T4>(event: string, callback: Callback4<T1, T2, T3, T4>, comtext: any): this;\r\n    on<T1, T2, T3, T4, T5>(event: string, callback: Callback5<T1, T2, T3, T4, T5>, context: any): this;\r\n    on<T1, T2, T3, T4, T5, T6>(event: string, callback: Callback6Rest<T1, T2, T3, T4, T5, T6>, context: any): this;\r\n    once(events: any, callback: any, context: any): this;\r\n    off(events: any, callback: any, context: any): this;\r\n    trigger(event: string): any;\r\n    trigger<T1>(event: string, arg: T1): any;\r\n    trigger<T1, T2>(event: string, arg1: T1, arg2: T2): any;\r\n    trigger<T1, T2, T3>(event: string, arg1: T1, arg2: T2, arg3: T3): any;\r\n    trigger<T1, T2, T3, T4>(event: string, arg1: T1, arg2: T2, arg3: T3, arg4: T4): any;\r\n    trigger<T1, T2, T3, T4, T5>(event: string, arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5): any;\r\n    trigger<T1, T2, T3, T4, T5, T6>(event: string, arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6, ...rest: any[]): any;\r\n}\r\nexport declare type EventsType = typeof Events;\r\ndeclare const eventCenter: Events;\r\nexport { eventCenter };\r\n"}}
