{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { isFunction, warn } from '@tarojs/shared';\r\nimport { inject, injectable, optional } from 'inversify';\r\nimport SERVICE_IDENTIFIER from '../constants/identifiers';\r\nimport { ElementNames } from '../interface';\r\nlet TaroNodeImpl = class TaroNodeImpl {\r\n    constructor(// eslint-disable-next-line @typescript-eslint/indent\r\n    getElement, innerHTMLImpl, adjacentImpl) {\r\n        this.getDoc = () => getElement(ElementNames.Document)();\r\n        this.innerHTMLImpl = innerHTMLImpl;\r\n        this.adjacentImpl = adjacentImpl;\r\n    }\r\n    bind(ctx) {\r\n        this.ctx = ctx;\r\n        this.bindInnerHTML();\r\n        this.bindAdjacentHTML();\r\n    }\r\n    bindInnerHTML() {\r\n        const { ctx, innerHTMLImpl: impl, getDoc } = this;\r\n        Object.defineProperty(ctx, 'innerHTML', {\r\n            configurable: true,\r\n            enumerable: true,\r\n            set(html) {\r\n                if (isFunction(impl)) {\r\n                    impl.call(ctx, ctx, html, getDoc);\r\n                }\r\n                else {\r\n                    process.env.NODE_ENV !== 'production' && warn(true, '请实现 node.innerHTML');\r\n                }\r\n            },\r\n            get() {\r\n                return '';\r\n            }\r\n        });\r\n    }\r\n    bindAdjacentHTML() {\r\n        const { ctx, adjacentImpl: impl, getDoc } = this;\r\n        ctx.insertAdjacentHTML = function (position, html) {\r\n            if (isFunction(impl)) {\r\n                impl.call(ctx, position, html, getDoc);\r\n            }\r\n            else {\r\n                process.env.NODE_ENV !== 'production' && warn(true, '请实现 node.insertAdjacentHTML');\r\n            }\r\n        };\r\n    }\r\n};\r\nTaroNodeImpl = __decorate([\r\n    injectable(),\r\n    __param(0, inject(SERVICE_IDENTIFIER.TaroElementFactory)),\r\n    __param(1, inject(SERVICE_IDENTIFIER.InnerHTMLImpl)), __param(1, optional()),\r\n    __param(2, inject(SERVICE_IDENTIFIER.insertAdjacentHTMLImpl)), __param(2, optional()),\r\n    __metadata(\"design:paramtypes\", [Function, Function, Function])\r\n], TaroNodeImpl);\r\nexport { TaroNodeImpl };\r\n//# sourceMappingURL=node-impl.js.map","references":["/Users/inoccent/github/taro-hooks/node_modules/@tarojs/shared/dist/index.d.ts","/Users/inoccent/github/taro-hooks/node_modules/inversify/lib/inversify.d.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/identifiers.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/inner-html/html.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/document.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/node.ts"],"map":"{\"version\":3,\"file\":\"node-impl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/dom-external/node-impl.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAA;AACjD,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAA;AACxD,OAAO,kBAAkB,MAAM,0BAA0B,CAAA;AACzD,OAAO,EAAE,YAAY,EAAwB,MAAM,cAAc,CAAA;AAWjE,IAAa,YAAY,GAAzB,MAAa,YAAY;IAMvB,YAAa,qDAAqD;IACjB,UAAgC,EACzB,aAA2B,EAClB,YAAoC;QAEnG,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,UAAU,CAAe,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAA;QACrE,IAAI,CAAC,aAAa,GAAG,aAAa,CAAA;QAClC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAA;IAClC,CAAC;IAEM,IAAI,CAAE,GAAQ;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;QACd,IAAI,CAAC,aAAa,EAAE,CAAA;QACpB,IAAI,CAAC,gBAAgB,EAAE,CAAA;IACzB,CAAC;IAEO,aAAa;QACnB,MAAM,EAAE,GAAG,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAA;QACjD,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,WAAW,EAAE;YACtC,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,IAAI;YAChB,GAAG,CAAE,IAAY;gBACf,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;oBACpB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;iBAClC;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,IAAI,IAAI,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAA;iBAC1E;YACH,CAAC;YACD,GAAG;gBACD,OAAO,EAAE,CAAA;YACX,CAAC;SACF,CAAC,CAAA;IACJ,CAAC;IAEO,gBAAgB;QACtB,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAA;QAChD,GAAG,CAAC,kBAAkB,GAAG,UAAU,QAAmB,EAAE,IAAY;YAClE,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;gBACpB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;aACvC;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,IAAI,IAAI,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAA;aACnF;QACH,CAAC,CAAA;IACH,CAAC;CACF,CAAA;AAlDY,YAAY;IADxB,UAAU,EAAE;IAQR,WAAA,MAAM,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAA;IAC7C,WAAA,MAAM,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAA,EAAE,WAAA,QAAQ,EAAE,CAAA;IACpD,WAAA,MAAM,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,CAAA,EAAE,WAAA,QAAQ,EAAE,CAAA;;GATrD,YAAY,CAkDxB;SAlDY,YAAY\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/dom-external/node-impl.d.ts","writeByteOrderMark":false,"text":"import { InstanceNamedFactory } from '../interface';\r\nimport type { Ctx, GetDoc } from '../interface';\r\nimport type { setInnerHTML } from '../dom-external/inner-html/html';\r\nimport type { insertAdjacentHTMLImpl } from './node';\r\ndeclare type SetInnerHTML = typeof setInnerHTML;\r\ndeclare type InsertAdjacentHTMLImpl = typeof insertAdjacentHTMLImpl;\r\nexport declare class TaroNodeImpl {\r\n    ctx: Ctx;\r\n    getDoc: GetDoc;\r\n    innerHTMLImpl: SetInnerHTML;\r\n    adjacentImpl: InsertAdjacentHTMLImpl;\r\n    constructor(// eslint-disable-next-line @typescript-eslint/indent\r\n    getElement: InstanceNamedFactory, innerHTMLImpl: SetInnerHTML, adjacentImpl: InsertAdjacentHTMLImpl);\r\n    bind(ctx: Ctx): void;\r\n    private bindInnerHTML;\r\n    private bindAdjacentHTML;\r\n}\r\nexport {};\r\n"}}
