{"code":"export {};\r\n//# sourceMappingURL=hooks.js.map","references":["/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dsl/instance.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/emitter/emitter.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/event.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/event-target.ts"],"map":"{\"version\":3,\"file\":\"hooks.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/interface/hooks.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/interface/hooks.d.ts","writeByteOrderMark":false,"text":"import type { TaroElement } from '../dom/element';\r\nimport type { PageInstance, Instance, PageProps } from '../dsl/instance';\r\nimport type { Func, MpEvent, EventHandler, UpdatePayload } from '../interface';\r\nimport type { EventsType } from '../emitter/emitter';\r\nimport type { TaroEvent } from '../dom/event';\r\nimport type { TaroEventTarget } from '../dom/event-target';\r\nexport interface GetLifecycle<Instance = any> {\r\n    (instance: Instance, lifecyle: keyof PageInstance): Func | Array<Func> | undefined;\r\n}\r\nexport interface GetPathIndex {\r\n    (indexOfNode: number): string;\r\n}\r\nexport interface GetEventCenter {\r\n    (Events: EventsType): InstanceType<EventsType>;\r\n}\r\nexport interface IsBubbleEvents {\r\n    (eventName: string): boolean;\r\n}\r\nexport interface GetSpecialNodes {\r\n    (): string[];\r\n}\r\nexport interface OnRemoveAttribute {\r\n    (element: TaroElement, qualifiedName: string): void;\r\n}\r\nexport interface ModifyMpEvent {\r\n    (event: MpEvent): void;\r\n}\r\nexport interface ModifyTaroEvent {\r\n    (event: TaroEvent, element: TaroElement): void;\r\n}\r\nexport interface BatchedEventUpdates {\r\n    (cb: Func): void;\r\n}\r\ndeclare type Inst = Instance<PageProps>;\r\nexport interface MergePageInstance {\r\n    (prev: Inst | undefined, next: Inst): void;\r\n}\r\nexport interface CreatePullDownComponent<Instance = any> {\r\n    (el: Instance, path: string, framework: any, customWrapper?: any): void;\r\n}\r\nexport interface GetDOMNode<Instance = any, DOMElement = TaroElement> {\r\n    (instance: Instance): DOMElement | undefined;\r\n}\r\nexport interface InitNativeApi {\r\n    (taro: Record<string, any>): void;\r\n}\r\nexport interface ModifyHydrateData {\r\n    (data: Record<string, any>): void;\r\n}\r\nexport interface ModifySetAttrPayload {\r\n    (element: TaroElement, key: string, payload: UpdatePayload): void;\r\n}\r\nexport interface ModifyRmAttrPayload {\r\n    (element: TaroElement, key: string, payload: UpdatePayload): void;\r\n}\r\nexport interface OnAddEvent<T extends TaroEventTarget = TaroEventTarget> {\r\n    (type: string, handler: EventHandler, options: any, node: T): void;\r\n}\r\nexport interface IHooks {\r\n    /** 解决 React 生命周期名称的兼容问题 */\r\n    getLifecycle: GetLifecycle;\r\n    /** 解决百度小程序的模版语法问题 */\r\n    getPathIndex: GetPathIndex;\r\n    /** 解决支付宝小程序分包时全局作用域不一致的问题 */\r\n    getEventCenter: GetEventCenter;\r\n    isBubbleEvents: IsBubbleEvents;\r\n    getSpecialNodes: GetSpecialNodes;\r\n    /** 解决 Vue2 布尔值属性值的设置问题 */\r\n    onRemoveAttribute?: OnRemoveAttribute;\r\n    /**\r\n     * @multi-inject\r\n     * 用于修改小程序原生事件对象\r\n     **/\r\n    modifyMpEvent: ModifyMpEvent;\r\n    /**\r\n     * @multi-inject\r\n     * 用于修改 Taro DOM 事件对象\r\n     **/\r\n    modifyTaroEvent: ModifyTaroEvent;\r\n    /** 用于把 React 同一事件回调中的所有 setState 合并到同一个更新处理中 */\r\n    batchedEventUpdates?: BatchedEventUpdates;\r\n    /** 用于处理 React 中的小程序生命周期 hooks */\r\n    mergePageInstance?: MergePageInstance;\r\n    /** H5 下拉刷新 wrapper */\r\n    createPullDownComponent?: CreatePullDownComponent;\r\n    /** H5 获取原生 DOM 对象 */\r\n    getDOMNode?: GetDOMNode;\r\n    /** 挂载属性或 API 到 Taro 对象上 */\r\n    initNativeApi?: InitNativeApi;\r\n    /**\r\n     * @todo: mutiInject\r\n     * 修改 Taro DOM 序列化数据\r\n     **/\r\n    modifyHydrateData?: ModifyHydrateData;\r\n    /**\r\n     * @todo: mutiInject\r\n     * 修改 Taro DOM 序列化数据\r\n     **/\r\n    modifySetAttrPayload?: ModifySetAttrPayload;\r\n    /**\r\n     * @todo: mutiInject\r\n     * 修改 Taro DOM 序列化数据\r\n     **/\r\n    modifyRmAttrPayload?: ModifyRmAttrPayload;\r\n    /**\r\n     * @todo: mutiInject\r\n     * 调用 addEventListener 时触发\r\n     **/\r\n    onAddEvent?: OnAddEvent;\r\n}\r\nexport {};\r\n"}}
