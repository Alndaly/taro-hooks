{"code":"import { toCamelCase } from '@tarojs/shared';\r\nimport { isText, isHasExtractProp, isComment } from './utils';\r\nimport { VIEW, CLASS, STYLE, ID, PURE_VIEW, CATCHMOVE, CATCH_VIEW } from './constants';\r\n/**\r\n * React also has a fancy function's name for this: `hydrate()`.\r\n * You may have been heard `hydrate` as a SSR-related function,\r\n * actually, `hydrate` basicly do the `render()` thing, but ignore some properties,\r\n * it's a vnode traverser and modifier: that's exactly what Taro's doing in here.\r\n */\r\nexport function hydrate(node) {\r\n    var _a, _b;\r\n    const nodeName = node.nodeName;\r\n    if (isText(node)) {\r\n        return {\r\n            [\"v\" /* Text */]: node.nodeValue,\r\n            [\"nn\" /* NodeName */]: nodeName\r\n        };\r\n    }\r\n    const data = {\r\n        [\"nn\" /* NodeName */]: nodeName,\r\n        uid: node.uid\r\n    };\r\n    const { props } = node;\r\n    const SPECIAL_NODES = node.hooks.getSpecialNodes();\r\n    if (!node.isAnyEventBinded() && SPECIAL_NODES.indexOf(nodeName) > -1) {\r\n        data[\"nn\" /* NodeName */] = `static-${nodeName}`;\r\n        if (nodeName === VIEW && !isHasExtractProp(node)) {\r\n            data[\"nn\" /* NodeName */] = PURE_VIEW;\r\n        }\r\n    }\r\n    for (const prop in props) {\r\n        const propInCamelCase = toCamelCase(prop);\r\n        if (!prop.startsWith('data-') && // 在 node.dataset 的数据\r\n            prop !== CLASS &&\r\n            prop !== STYLE &&\r\n            prop !== ID &&\r\n            propInCamelCase !== CATCHMOVE) {\r\n            data[propInCamelCase] = props[prop];\r\n        }\r\n        if (nodeName === VIEW && propInCamelCase === CATCHMOVE && props[prop] !== 'false') {\r\n            data[\"nn\" /* NodeName */] = CATCH_VIEW;\r\n        }\r\n    }\r\n    let { childNodes } = node;\r\n    // 过滤 comment 节点\r\n    childNodes = childNodes.filter(node => !isComment(node));\r\n    if (childNodes.length > 0) {\r\n        data[\"cn\" /* Childnodes */] = childNodes.map(hydrate);\r\n    }\r\n    else {\r\n        data[\"cn\" /* Childnodes */] = [];\r\n    }\r\n    if (node.className !== '') {\r\n        data[\"cl\" /* Class */] = node.className;\r\n    }\r\n    if (node.cssText !== '' && nodeName !== 'swiper-item') {\r\n        data[\"st\" /* Style */] = node.cssText;\r\n    }\r\n    (_b = (_a = node.hooks).modifyHydrateData) === null || _b === void 0 ? void 0 : _b.call(_a, data);\r\n    return data;\r\n}\r\n//# sourceMappingURL=hydrate.js.map","references":["/Users/inoccent/github/taro-hooks/node_modules/@tarojs/shared/dist/index.d.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/utils/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/text.ts"],"map":"{\"version\":3,\"file\":\"hydrate.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/hydrate.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAa,WAAW,EAAE,MAAM,gBAAgB,CAAA;AACvD,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,SAAS,CAAA;AAC7D,OAAO,EACL,IAAI,EACJ,KAAK,EACL,KAAK,EACL,EAAE,EACF,SAAS,EACT,SAAS,EACT,UAAU,EACX,MAAM,aAAa,CAAA;AAMpB;;;;;GAKG;AACH,MAAM,UAAU,OAAO,CAAE,IAA4B;;IACnD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;IAE9B,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;QAChB,OAAO;YACL,gBAAgB,EAAE,IAAI,CAAC,SAAS;YAChC,qBAAoB,EAAE,QAAQ;SAC/B,CAAA;KACF;IAED,MAAM,IAAI,GAAoB;QAC5B,qBAAoB,EAAE,QAAQ;QAC9B,GAAG,EAAE,IAAI,CAAC,GAAG;KACd,CAAA;IACD,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;IACtB,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAA;IAElD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;QACpE,IAAI,qBAAoB,GAAG,UAAU,QAAQ,EAAE,CAAA;QAC/C,IAAI,QAAQ,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;YAChD,IAAI,qBAAoB,GAAG,SAAS,CAAA;SACrC;KACF;IAED,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;QACxB,MAAM,eAAe,GAAG,WAAW,CAAC,IAAI,CAAC,CAAA;QACzC,IACE,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,qBAAqB;YAClD,IAAI,KAAK,KAAK;YACd,IAAI,KAAK,KAAK;YACd,IAAI,KAAK,EAAE;YACX,eAAe,KAAK,SAAS,EAC7B;YACA,IAAI,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAA;SACpC;QACD,IAAI,QAAQ,KAAK,IAAI,IAAI,eAAe,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE;YACjF,IAAI,qBAAoB,GAAG,UAAU,CAAA;SACtC;KACF;IAED,IAAI,EAAE,UAAU,EAAE,GAAG,IAAI,CAAA;IAEzB,gBAAgB;IAChB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA;IAExD,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,IAAI,uBAAsB,GAAG,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;KACrD;SAAM;QACL,IAAI,uBAAsB,GAAG,EAAE,CAAA;KAChC;IAED,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;QACzB,IAAI,kBAAiB,GAAG,IAAI,CAAC,SAAS,CAAA;KACvC;IAED,IAAI,IAAI,CAAC,OAAO,KAAK,EAAE,IAAI,QAAQ,KAAK,aAAa,EAAE;QACrD,IAAI,kBAAiB,GAAG,IAAI,CAAC,OAAO,CAAA;KACrC;IAED,MAAA,MAAA,IAAI,CAAC,KAAK,EAAC,iBAAiB,mDAAG,IAAI,CAAC,CAAA;IAEpC,OAAO,IAAI,CAAA;AACb,CAAC\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/hydrate.d.ts","writeByteOrderMark":false,"text":"import type { MiniData } from './interface';\r\nimport type { TaroElement } from './dom/element';\r\nimport type { TaroText } from './dom/text';\r\n/**\r\n * React also has a fancy function's name for this: `hydrate()`.\r\n * You may have been heard `hydrate` as a SSR-related function,\r\n * actually, `hydrate` basicly do the `render()` thing, but ignore some properties,\r\n * it's a vnode traverser and modifier: that's exactly what Taro's doing in here.\r\n */\r\nexport declare function hydrate(node: TaroElement | TaroText): MiniData;\r\n"}}
