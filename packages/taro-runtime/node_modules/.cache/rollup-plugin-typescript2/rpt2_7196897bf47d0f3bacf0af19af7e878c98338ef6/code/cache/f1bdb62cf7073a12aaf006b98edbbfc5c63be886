{"code":"import { Container } from 'inversify';\r\nimport SERVICE_IDENTIFIER from '../constants/identifiers';\r\nimport { TaroNodeImpl } from '../dom-external/node-impl';\r\nimport { TaroElementImpl } from '../dom-external/element-impl';\r\nimport { TaroElement } from '../dom/element';\r\nimport { TaroText } from '../dom/text';\r\nimport { TaroDocument } from '../dom/document';\r\nimport { TaroRootElement } from '../dom/root';\r\nimport { FormElement } from '../dom/form';\r\nimport { ElementNames } from '../interface';\r\nimport domExternal from '../dom-external';\r\nimport { Hooks } from '../hooks';\r\nimport { DefaultHooksContainer } from './default-hooks';\r\nimport processPluginHooks from './plugin-hooks';\r\nconst container = new Container();\r\ncontainer.bind(SERVICE_IDENTIFIER.TaroElement).to(TaroElement).whenTargetNamed(ElementNames.Element);\r\ncontainer.bind(SERVICE_IDENTIFIER.TaroElement).to(TaroDocument).inSingletonScope().whenTargetNamed(ElementNames.Document);\r\ncontainer.bind(SERVICE_IDENTIFIER.TaroElement).to(TaroRootElement).whenTargetNamed(ElementNames.RootElement);\r\ncontainer.bind(SERVICE_IDENTIFIER.TaroElement).to(FormElement).whenTargetNamed(ElementNames.FormElement);\r\ncontainer.bind(SERVICE_IDENTIFIER.TaroElementFactory).toFactory((context) => {\r\n    return (named) => (nodeName) => {\r\n        const el = context.container.getNamed(SERVICE_IDENTIFIER.TaroElement, named);\r\n        if (nodeName) {\r\n            el.nodeName = nodeName;\r\n        }\r\n        el.tagName = el.nodeName.toUpperCase();\r\n        return el;\r\n    };\r\n});\r\ncontainer.bind(SERVICE_IDENTIFIER.TaroText).to(TaroText);\r\ncontainer.bind(SERVICE_IDENTIFIER.TaroTextFactory).toFactory((context) => {\r\n    return (text) => {\r\n        const textNode = context.container.get(SERVICE_IDENTIFIER.TaroText);\r\n        textNode._value = text;\r\n        return textNode;\r\n    };\r\n});\r\ncontainer.bind(SERVICE_IDENTIFIER.TaroNodeImpl).to(TaroNodeImpl).inSingletonScope();\r\ncontainer.bind(SERVICE_IDENTIFIER.TaroElementImpl).to(TaroElementImpl).inSingletonScope();\r\ncontainer.bind(SERVICE_IDENTIFIER.Hooks).to(Hooks).inSingletonScope();\r\ncontainer.load(domExternal, DefaultHooksContainer);\r\nprocessPluginHooks(container);\r\nexport default container;\r\n//# sourceMappingURL=index.js.map","references":["/Users/inoccent/github/taro-hooks/node_modules/inversify/lib/inversify.d.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/identifiers.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/node-impl.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/element-impl.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/text.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/document.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/root.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/form.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/hooks.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/container/default-hooks.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/container/plugin-hooks.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/container/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/container/index.d.ts","writeByteOrderMark":false,"text":"import { Container } from 'inversify';\r\ndeclare const container: Container;\r\nexport default container;\r\n"}}
