{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { inject, injectable } from 'inversify';\r\nimport { controlledComponent, isUndefined } from '@tarojs/shared';\r\nimport SERVICE_IDENTIFIER from '../constants/identifiers';\r\nimport { TaroElement } from '../dom/element';\r\nimport { eventSource } from '../dom/event-source';\r\nimport { ElementNames } from '../interface';\r\nimport { ROOT_STR, DOCUMENT_ELEMENT_NAME, COMMENT } from '../constants';\r\nlet TaroDocument = class TaroDocument extends TaroElement {\r\n    constructor(// eslint-disable-next-line @typescript-eslint/indent\r\n    nodeImpl, getElement, hooks, elementImpl, getText) {\r\n        super(nodeImpl, getElement, hooks, elementImpl);\r\n        this._getText = getText;\r\n        this.nodeType = 9 /* DOCUMENT_NODE */;\r\n        this.nodeName = DOCUMENT_ELEMENT_NAME;\r\n    }\r\n    createElement(type) {\r\n        if (type === ROOT_STR) {\r\n            return this._getElement(ElementNames.RootElement)();\r\n        }\r\n        if (controlledComponent.has(type)) {\r\n            return this._getElement(ElementNames.FormElement)(type);\r\n        }\r\n        return this._getElement(ElementNames.Element)(type);\r\n    }\r\n    // an ugly fake createElementNS to deal with @vue/runtime-dom's\r\n    // support mounting app to svg container since vue@3.0.8\r\n    createElementNS(_svgNS, type) {\r\n        return this.createElement(type);\r\n    }\r\n    createTextNode(text) {\r\n        return this._getText(text);\r\n    }\r\n    getElementById(id) {\r\n        const el = eventSource.get(id);\r\n        return isUndefined(el) ? null : el;\r\n    }\r\n    querySelector(query) {\r\n        // 为了 Vue3 的乞丐版实现\r\n        if (/^#/.test(query)) {\r\n            return this.getElementById(query.slice(1));\r\n        }\r\n        return null;\r\n    }\r\n    // @TODO: @PERF: 在 hydrate 移除掉空的 node\r\n    createComment() {\r\n        const textnode = this._getText('');\r\n        textnode.nodeName = COMMENT;\r\n        return textnode;\r\n    }\r\n};\r\nTaroDocument = __decorate([\r\n    injectable(),\r\n    __param(0, inject(SERVICE_IDENTIFIER.TaroNodeImpl)),\r\n    __param(1, inject(SERVICE_IDENTIFIER.TaroElementFactory)),\r\n    __param(2, inject(SERVICE_IDENTIFIER.Hooks)),\r\n    __param(3, inject(SERVICE_IDENTIFIER.TaroElementImpl)),\r\n    __param(4, inject(SERVICE_IDENTIFIER.TaroTextFactory)),\r\n    __metadata(\"design:paramtypes\", [Function, Function, Function, Function, Function])\r\n], TaroDocument);\r\nexport { TaroDocument };\r\n//# sourceMappingURL=document.js.map","references":["/Users/inoccent/github/taro-hooks/node_modules/inversify/lib/inversify.d.ts","/Users/inoccent/github/taro-hooks/node_modules/@tarojs/shared/dist/index.d.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/identifiers.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/node_types.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/event-source.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/form.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/root.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/text.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/node-impl.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/element-impl.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/hooks.ts"],"map":"{\"version\":3,\"file\":\"document.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/dom/document.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,WAAW,CAAA;AAC9C,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AACjE,OAAO,kBAAkB,MAAM,0BAA0B,CAAA;AACzD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AAE5C,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAA;AACjD,OAAO,EAAE,YAAY,EAAyC,MAAM,cAAc,CAAA;AAClF,OAAO,EACL,QAAQ,EACR,qBAAqB,EACrB,OAAO,EACR,MAAM,cAAc,CAAA;AAUrB,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,WAAW;IAG3C,YAAoB,qDAAqD;IAC9B,QAAsB,EAChB,UAAgC,EAC7C,KAAY,EACF,WAA4B,EAC5B,OAAkC;QAE9E,KAAK,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,CAAA;QAC/C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;QACvB,IAAI,CAAC,QAAQ,wBAAyB,CAAA;QACtC,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAA;IACvC,CAAC;IAEM,aAAa,CAAE,IAAY;QAChC,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,OAAO,IAAI,CAAC,WAAW,CAAkB,YAAY,CAAC,WAAW,CAAC,EAAE,CAAA;SACrE;QAED,IAAI,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACjC,OAAO,IAAI,CAAC,WAAW,CAAc,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAA;SACrE;QAED,OAAO,IAAI,CAAC,WAAW,CAAc,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAA;IAClE,CAAC;IAED,+DAA+D;IAC/D,wDAAwD;IACjD,eAAe,CAAE,MAAc,EAAE,IAAY;QAClD,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;IACjC,CAAC;IAEM,cAAc,CAAE,IAAY;QACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAC5B,CAAC;IAEM,cAAc,CAAyB,EAA6B;QACzE,MAAM,EAAE,GAAG,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;QAC9B,OAAO,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAO,CAAA;IACzC,CAAC;IAEM,aAAa,CAAyB,KAAa;QACxD,iBAAiB;QACjB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC,cAAc,CAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;SAC9C;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IAED,qCAAqC;IAC9B,aAAa;QAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;QAClC,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAA;QAC3B,OAAO,QAAQ,CAAA;IACjB,CAAC;CACF,CAAA;AAzDY,YAAY;IADxB,UAAU,EAAE;IAKR,WAAA,MAAM,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAA;IACvC,WAAA,MAAM,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAA;IAC7C,WAAA,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAA;IAChC,WAAA,MAAM,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAA;IAC1C,WAAA,MAAM,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAA;;GARlC,YAAY,CAyDxB;SAzDY,YAAY\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/dom/document.d.ts","writeByteOrderMark":false,"text":"import { TaroElement } from '../dom/element';\r\nimport { InstanceFactory, InstanceNamedFactory } from '../interface';\r\nimport type { FormElement } from '../dom/form';\r\nimport type { TaroRootElement } from '../dom/root';\r\nimport type { TaroText } from '../dom/text';\r\nimport type { TaroNodeImpl } from '../dom-external/node-impl';\r\nimport type { TaroElementImpl } from '../dom-external/element-impl';\r\nimport type { Hooks } from '../hooks';\r\nexport declare class TaroDocument extends TaroElement {\r\n    private _getText;\r\n    constructor(// eslint-disable-next-line @typescript-eslint/indent\r\n    nodeImpl: TaroNodeImpl, getElement: InstanceNamedFactory, hooks: Hooks, elementImpl: TaroElementImpl, getText: InstanceFactory<TaroText>);\r\n    createElement(type: string): TaroElement | TaroRootElement | FormElement;\r\n    createElementNS(_svgNS: string, type: string): TaroElement | TaroRootElement | FormElement;\r\n    createTextNode(text: string): TaroText;\r\n    getElementById<T extends TaroElement>(id: string | undefined | null): T | null;\r\n    querySelector<T extends TaroElement>(query: string): T | null;\r\n    createComment(): TaroText;\r\n}\r\n"}}
