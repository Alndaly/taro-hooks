{"code":"import { isFunction } from '@tarojs/shared';\r\nimport { Scaner } from './scaner';\r\nimport { options } from '../../options';\r\nimport { specialMiniElements, isMiniElements, isBlockElements, isInlineElements } from './tags';\r\nimport StyleTagParser from './style';\r\nimport { unquote } from './utils';\r\nconst closingTagAncestorBreakers = {\r\n    li: ['ul', 'ol', 'menu'],\r\n    dt: ['dl'],\r\n    dd: ['dl'],\r\n    tbody: ['table'],\r\n    thead: ['table'],\r\n    tfoot: ['table'],\r\n    tr: ['table'],\r\n    td: ['table']\r\n};\r\nfunction hasTerminalParent(tagName, stack) {\r\n    const tagParents = closingTagAncestorBreakers[tagName];\r\n    if (tagParents) {\r\n        let currentIndex = stack.length - 1;\r\n        while (currentIndex >= 0) {\r\n            const parentTagName = stack[currentIndex].tagName;\r\n            if (parentTagName === tagName) {\r\n                break;\r\n            }\r\n            if (tagParents && tagParents.includes(parentTagName)) {\r\n                return true;\r\n            }\r\n            currentIndex--;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction getTagName(tag) {\r\n    if (options.html.renderHTMLTag) {\r\n        return tag;\r\n    }\r\n    if (specialMiniElements[tag]) {\r\n        return specialMiniElements[tag];\r\n    }\r\n    else if (isMiniElements(tag)) {\r\n        return tag;\r\n    }\r\n    else if (isBlockElements(tag)) {\r\n        return 'view';\r\n    }\r\n    else if (isInlineElements(tag)) {\r\n        return 'text';\r\n    }\r\n    return 'view';\r\n}\r\nfunction splitEqual(str) {\r\n    const sep = '=';\r\n    const idx = str.indexOf(sep);\r\n    if (idx === -1)\r\n        return [str];\r\n    const key = str.slice(0, idx).trim();\r\n    const value = str.slice(idx + sep.length).trim();\r\n    return [key, value];\r\n}\r\nfunction format(children, document, styleOptions, parent) {\r\n    return children\r\n        .filter(child => {\r\n        // 过滤注释和空文本节点\r\n        if (child.type === 'comment') {\r\n            return false;\r\n        }\r\n        else if (child.type === 'text') {\r\n            return child.content !== '';\r\n        }\r\n        return true;\r\n    })\r\n        .map((child) => {\r\n        // 文本节点\r\n        if (child.type === 'text') {\r\n            const text = document.createTextNode(child.content);\r\n            if (isFunction(options.html.transformText)) {\r\n                return options.html.transformText(text, child);\r\n            }\r\n            parent === null || parent === void 0 ? void 0 : parent.appendChild(text);\r\n            return text;\r\n        }\r\n        const el = document.createElement(getTagName(child.tagName));\r\n        el.h5tagName = child.tagName;\r\n        parent === null || parent === void 0 ? void 0 : parent.appendChild(el);\r\n        if (!options.html.renderHTMLTag) {\r\n            el.className = `h5-${child.tagName}`;\r\n        }\r\n        for (let i = 0; i < child.attributes.length; i++) {\r\n            const attr = child.attributes[i];\r\n            const [key, value] = splitEqual(attr);\r\n            if (key === 'class') {\r\n                el.className += ' ' + unquote(value);\r\n            }\r\n            else if (key[0] === 'o' && key[1] === 'n') {\r\n                continue;\r\n            }\r\n            else {\r\n                el.setAttribute(key, value == null ? true : unquote(value));\r\n            }\r\n        }\r\n        const { styleTagParser, descendantList } = styleOptions;\r\n        const list = descendantList.slice();\r\n        const style = styleTagParser.matchStyle(child.tagName, el, list);\r\n        el.setAttribute('style', style + el.style.cssText);\r\n        // console.log('style, ', style)\r\n        format(child.children, document, {\r\n            styleTagParser,\r\n            descendantList: list\r\n        }, el);\r\n        if (isFunction(options.html.transformElement)) {\r\n            return options.html.transformElement(el, child);\r\n        }\r\n        return el;\r\n    });\r\n}\r\nexport function parser(html, document) {\r\n    const styleTagParser = new StyleTagParser();\r\n    html = styleTagParser.extractStyle(html);\r\n    const tokens = new Scaner(html).scan();\r\n    const root = { tagName: '', children: [], type: 'element', attributes: [] };\r\n    const state = { tokens, options, cursor: 0, stack: [root] };\r\n    parse(state);\r\n    return format(root.children, document, {\r\n        styleTagParser,\r\n        descendantList: Array(styleTagParser.styles.length).fill(0)\r\n    });\r\n}\r\nfunction parse(state) {\r\n    const { tokens, stack } = state;\r\n    let { cursor } = state;\r\n    const len = tokens.length;\r\n    let nodes = stack[stack.length - 1].children;\r\n    while (cursor < len) {\r\n        const token = tokens[cursor];\r\n        if (token.type !== 'tag-start') {\r\n            // comment or text\r\n            nodes.push(token);\r\n            cursor++;\r\n            continue;\r\n        }\r\n        const tagToken = tokens[++cursor];\r\n        cursor++;\r\n        const tagName = tagToken.content.toLowerCase();\r\n        if (token.close) {\r\n            let index = stack.length;\r\n            let shouldRewind = false;\r\n            while (--index > -1) {\r\n                if (stack[index].tagName === tagName) {\r\n                    shouldRewind = true;\r\n                    break;\r\n                }\r\n            }\r\n            while (cursor < len) {\r\n                const endToken = tokens[cursor];\r\n                if (endToken.type !== 'tag-end')\r\n                    break;\r\n                cursor++;\r\n            }\r\n            if (shouldRewind) {\r\n                stack.splice(index);\r\n                break;\r\n            }\r\n            else {\r\n                continue;\r\n            }\r\n        }\r\n        const isClosingTag = options.html.closingElements.has(tagName);\r\n        let shouldRewindToAutoClose = isClosingTag;\r\n        if (shouldRewindToAutoClose) {\r\n            shouldRewindToAutoClose = !hasTerminalParent(tagName, stack);\r\n        }\r\n        if (shouldRewindToAutoClose) {\r\n            let currentIndex = stack.length - 1;\r\n            while (currentIndex > 0) {\r\n                if (tagName === stack[currentIndex].tagName) {\r\n                    stack.splice(currentIndex);\r\n                    const previousIndex = currentIndex - 1;\r\n                    nodes = stack[previousIndex].children;\r\n                    break;\r\n                }\r\n                currentIndex = currentIndex - 1;\r\n            }\r\n        }\r\n        const attributes = [];\r\n        let attrToken;\r\n        while (cursor < len) {\r\n            attrToken = tokens[cursor];\r\n            if (attrToken.type === 'tag-end')\r\n                break;\r\n            attributes.push(attrToken.content);\r\n            cursor++;\r\n        }\r\n        cursor++;\r\n        const children = [];\r\n        const element = {\r\n            type: 'element',\r\n            tagName: tagToken.content,\r\n            attributes,\r\n            children\r\n        };\r\n        nodes.push(element);\r\n        const hasChildren = !(attrToken.close || options.html.voidElements.has(tagName));\r\n        if (hasChildren) {\r\n            stack.push({ tagName, children });\r\n            const innerState = { tokens, cursor, stack };\r\n            parse(innerState);\r\n            cursor = innerState.cursor;\r\n        }\r\n    }\r\n    state.cursor = cursor;\r\n}\r\n//# sourceMappingURL=parser.js.map","references":["/Users/inoccent/github/taro-hooks/node_modules/@tarojs/shared/dist/index.d.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/inner-html/scaner.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/options.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/inner-html/tags.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/inner-html/style.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/inner-html/utils.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/document.ts"],"map":"{\"version\":3,\"file\":\"parser.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/dom-external/inner-html/parser.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/dom-external/inner-html/parser.d.ts","writeByteOrderMark":false,"text":"import type { TaroElement } from '../../dom/element';\r\nimport type { TaroDocument } from '../../dom/document';\r\ninterface Node {\r\n    type: string;\r\n}\r\ninterface Comment extends Node {\r\n    type: 'comment';\r\n    content: string;\r\n}\r\nexport interface Text extends Node {\r\n    type: 'text';\r\n    content: string;\r\n}\r\nexport interface Element extends Node {\r\n    type: 'element';\r\n    tagName: string;\r\n    children: ChildNode[];\r\n    attributes: string[];\r\n}\r\nexport interface ParsedTaroElement extends TaroElement {\r\n    h5tagName?: string;\r\n}\r\ndeclare type ChildNode = Comment | Text | Element;\r\nexport declare function parser(html: string, document: TaroDocument): (TaroElement | import(\"../..\").TaroText)[];\r\nexport {};\r\n"}}
