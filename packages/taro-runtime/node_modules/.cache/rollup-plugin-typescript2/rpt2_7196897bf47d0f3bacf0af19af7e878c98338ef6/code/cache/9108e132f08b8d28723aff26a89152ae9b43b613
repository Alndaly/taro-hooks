{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { inject, injectable } from 'inversify';\r\nimport { isFunction } from '@tarojs/shared';\r\nimport get from 'lodash-es/get';\r\nimport SERVICE_IDENTIFIER from '../constants/identifiers';\r\nimport { TaroElement } from './element';\r\nimport { incrementId } from '../utils';\r\nimport { perf } from '../perf';\r\nimport { options } from '../options';\r\nimport { SET_DATA, PAGE_INIT, ROOT_STR, CUSTOM_WRAPPER } from '../constants';\r\nconst eventIncrementId = incrementId();\r\nlet TaroRootElement = class TaroRootElement extends TaroElement {\r\n    constructor(// eslint-disable-next-line @typescript-eslint/indent\r\n    nodeImpl, getElement, hooks, elementImpl, eventCenter) {\r\n        super(nodeImpl, getElement, hooks, elementImpl);\r\n        this.pendingUpdate = false;\r\n        this.pendingFlush = false;\r\n        this.updatePayloads = [];\r\n        this.updateCallbacks = [];\r\n        this.ctx = null;\r\n        this.nodeName = ROOT_STR;\r\n        this.eventCenter = eventCenter;\r\n    }\r\n    get _path() {\r\n        return ROOT_STR;\r\n    }\r\n    get _root() {\r\n        return this;\r\n    }\r\n    enqueueUpdate(payload) {\r\n        this.updatePayloads.push(payload);\r\n        if (!this.pendingUpdate && this.ctx !== null) {\r\n            this.performUpdate();\r\n        }\r\n    }\r\n    performUpdate(initRender = false, prerender) {\r\n        this.pendingUpdate = true;\r\n        const ctx = this.ctx;\r\n        setTimeout(() => {\r\n            perf.start(SET_DATA);\r\n            const data = Object.create(null);\r\n            const resetPaths = new Set(initRender\r\n                ? ['root.cn.[0]', 'root.cn[0]']\r\n                : []);\r\n            while (this.updatePayloads.length > 0) {\r\n                const { path, value } = this.updatePayloads.shift();\r\n                if (path.endsWith(\"cn\" /* Childnodes */)) {\r\n                    resetPaths.add(path);\r\n                }\r\n                data[path] = value;\r\n            }\r\n            for (const path in data) {\r\n                resetPaths.forEach(p => {\r\n                    // 已经重置了数组，就不需要分别再设置了\r\n                    if (path.includes(p) && path !== p) {\r\n                        delete data[path];\r\n                    }\r\n                });\r\n                const value = data[path];\r\n                if (isFunction(value)) {\r\n                    data[path] = value();\r\n                }\r\n            }\r\n            if (isFunction(prerender)) {\r\n                prerender(data);\r\n            }\r\n            else {\r\n                this.pendingUpdate = false;\r\n                const customWrapperUpdate = [];\r\n                const normalUpdate = {};\r\n                if (!initRender) {\r\n                    for (const p in data) {\r\n                        const dataPathArr = p.split('.');\r\n                        let hasCustomWrapper = false;\r\n                        for (let i = dataPathArr.length; i > 0; i--) {\r\n                            const allPath = dataPathArr.slice(0, i).join('.');\r\n                            const getData = get(ctx.__data__ || ctx.data, allPath);\r\n                            if (getData && getData.nn && getData.nn === CUSTOM_WRAPPER) {\r\n                                const customWrapperId = getData.uid;\r\n                                const customWrapper = ctx.selectComponent(`#${customWrapperId}`);\r\n                                const splitedPath = dataPathArr.slice(i).join('.');\r\n                                if (customWrapper) {\r\n                                    hasCustomWrapper = true;\r\n                                    customWrapperUpdate.push({\r\n                                        ctx: ctx.selectComponent(`#${customWrapperId}`),\r\n                                        data: {\r\n                                            [`i.${splitedPath}`]: data[p]\r\n                                        }\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!hasCustomWrapper) {\r\n                            normalUpdate[p] = data[p];\r\n                        }\r\n                    }\r\n                }\r\n                const updateArrLen = customWrapperUpdate.length;\r\n                if (updateArrLen) {\r\n                    const eventId = `${this._path}_update_${eventIncrementId()}`;\r\n                    const eventCenter = this.eventCenter;\r\n                    let executeTime = 0;\r\n                    eventCenter.once(eventId, () => {\r\n                        executeTime++;\r\n                        if (executeTime === updateArrLen + 1) {\r\n                            perf.stop(SET_DATA);\r\n                            if (!this.pendingFlush) {\r\n                                this.flushUpdateCallback();\r\n                            }\r\n                            if (initRender) {\r\n                                perf.stop(PAGE_INIT);\r\n                            }\r\n                        }\r\n                    }, eventCenter);\r\n                    customWrapperUpdate.forEach(item => {\r\n                        if (process.env.NODE_ENV !== 'production' && options.debug) {\r\n                            // eslint-disable-next-line no-console\r\n                            console.log('custom wrapper setData: ', item.data);\r\n                        }\r\n                        item.ctx.setData(item.data, () => {\r\n                            eventCenter.trigger(eventId);\r\n                        });\r\n                    });\r\n                    if (Object.keys(normalUpdate).length) {\r\n                        if (process.env.NODE_ENV !== 'production' && options.debug) {\r\n                            // eslint-disable-next-line no-console\r\n                            console.log('setData:', normalUpdate);\r\n                        }\r\n                        ctx.setData(normalUpdate, () => {\r\n                            eventCenter.trigger(eventId);\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    if (process.env.NODE_ENV !== 'production' && options.debug) {\r\n                        // eslint-disable-next-line no-console\r\n                        console.log('setData:', data);\r\n                    }\r\n                    ctx.setData(data, () => {\r\n                        perf.stop(SET_DATA);\r\n                        if (!this.pendingFlush) {\r\n                            this.flushUpdateCallback();\r\n                        }\r\n                        if (initRender) {\r\n                            perf.stop(PAGE_INIT);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }, 0);\r\n    }\r\n    enqueueUpdateCallback(cb, ctx) {\r\n        this.updateCallbacks.push(() => {\r\n            ctx ? cb.call(ctx) : cb();\r\n        });\r\n    }\r\n    flushUpdateCallback() {\r\n        this.pendingFlush = false;\r\n        const copies = this.updateCallbacks.slice(0);\r\n        this.updateCallbacks.length = 0;\r\n        for (let i = 0; i < copies.length; i++) {\r\n            copies[i]();\r\n        }\r\n    }\r\n};\r\nTaroRootElement = __decorate([\r\n    injectable(),\r\n    __param(0, inject(SERVICE_IDENTIFIER.TaroNodeImpl)),\r\n    __param(1, inject(SERVICE_IDENTIFIER.TaroElementFactory)),\r\n    __param(2, inject(SERVICE_IDENTIFIER.Hooks)),\r\n    __param(3, inject(SERVICE_IDENTIFIER.TaroElementImpl)),\r\n    __param(4, inject(SERVICE_IDENTIFIER.eventCenter)),\r\n    __metadata(\"design:paramtypes\", [Function, Function, Function, Function, Function])\r\n], TaroRootElement);\r\nexport { TaroRootElement };\r\n//# sourceMappingURL=root.js.map","references":["/Users/inoccent/github/taro-hooks/node_modules/inversify/lib/inversify.d.ts","/Users/inoccent/github/taro-hooks/node_modules/@tarojs/shared/dist/index.d.ts","/Users/inoccent/github/taro-hooks/node_modules/lodash-es/get.js","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/identifiers.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/utils/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/perf.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/options.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/node-impl.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom-external/element-impl.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/hooks.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/emitter/emitter.ts"],"map":"{\"version\":3,\"file\":\"root.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/dom/root.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/dom/root.d.ts","writeByteOrderMark":false,"text":"import { TaroElement } from './element';\r\nimport type { Func, UpdatePayload, InstanceNamedFactory, MpInstance } from '../interface';\r\nimport type { TaroNodeImpl } from '../dom-external/node-impl';\r\nimport type { TaroElementImpl } from '../dom-external/element-impl';\r\nimport type { Hooks } from '../hooks';\r\nimport type { Events } from '../emitter/emitter';\r\nexport declare class TaroRootElement extends TaroElement {\r\n    private pendingUpdate;\r\n    private pendingFlush;\r\n    private updatePayloads;\r\n    private updateCallbacks;\r\n    private eventCenter;\r\n    ctx: null | MpInstance;\r\n    constructor(// eslint-disable-next-line @typescript-eslint/indent\r\n    nodeImpl: TaroNodeImpl, getElement: InstanceNamedFactory, hooks: Hooks, elementImpl: TaroElementImpl, eventCenter: Events);\r\n    get _path(): string;\r\n    protected get _root(): TaroRootElement;\r\n    enqueueUpdate(payload: UpdatePayload): void;\r\n    performUpdate(initRender?: boolean, prerender?: Func): void;\r\n    enqueueUpdateCallback(cb: Func, ctx?: Record<string, any>): void;\r\n    flushUpdateCallback(): void;\r\n}\r\n"}}
