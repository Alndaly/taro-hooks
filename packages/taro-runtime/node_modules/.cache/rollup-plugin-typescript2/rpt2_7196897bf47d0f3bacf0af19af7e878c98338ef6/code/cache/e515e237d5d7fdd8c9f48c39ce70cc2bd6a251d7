{"code":"import { isUndefined, toCamelCase, toDashed, warn, isString } from '@tarojs/shared';\r\nimport { styleProperties } from './style_properties';\r\nimport { PROPERTY_THRESHOLD } from '../constants';\r\nfunction setStyle(newVal, styleKey) {\r\n    const old = this[styleKey];\r\n    if (newVal) {\r\n        this._usedStyleProp.add(styleKey);\r\n    }\r\n    process.env.NODE_ENV !== 'production' && warn(isString(newVal) && newVal.length > PROPERTY_THRESHOLD, `Style 属性 ${styleKey} 的值数据量过大，可能会影响渲染性能，考虑使用 CSS 类或其它方案替代。`);\r\n    if (old !== newVal) {\r\n        this._value[styleKey] = newVal;\r\n        this._element.enqueueUpdate({\r\n            path: `${this._element._path}.${\"st\" /* Style */}`,\r\n            value: this.cssText\r\n        });\r\n    }\r\n}\r\nfunction initStyle(ctor) {\r\n    const properties = {};\r\n    for (let i = 0; i < styleProperties.length; i++) {\r\n        const styleKey = styleProperties[i];\r\n        properties[styleKey] = {\r\n            get() {\r\n                return this._value[styleKey] || '';\r\n            },\r\n            set(newVal) {\r\n                setStyle.call(this, newVal, styleKey);\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperties(ctor.prototype, properties);\r\n}\r\nfunction isCssVariable(propertyName) {\r\n    return /^--/.test(propertyName);\r\n}\r\nexport class Style {\r\n    constructor(element) {\r\n        this._element = element;\r\n        this._usedStyleProp = new Set();\r\n        this._value = {};\r\n    }\r\n    setCssVariables(styleKey) {\r\n        this.hasOwnProperty(styleKey) || Object.defineProperty(this, styleKey, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => {\r\n                return this._value[styleKey] || '';\r\n            },\r\n            set: (newVal) => {\r\n                setStyle.call(this, newVal, styleKey);\r\n            }\r\n        });\r\n    }\r\n    get cssText() {\r\n        let text = '';\r\n        this._usedStyleProp.forEach(key => {\r\n            const val = this[key];\r\n            if (!val)\r\n                return;\r\n            const styleName = isCssVariable(key) ? key : toDashed(key);\r\n            text += `${styleName}: ${val};`;\r\n        });\r\n        return text;\r\n    }\r\n    set cssText(str) {\r\n        if (str == null) {\r\n            str = '';\r\n        }\r\n        this._usedStyleProp.forEach(prop => {\r\n            this.removeProperty(prop);\r\n        });\r\n        if (str === '') {\r\n            return;\r\n        }\r\n        const rules = str.split(';');\r\n        for (let i = 0; i < rules.length; i++) {\r\n            const rule = rules[i].trim();\r\n            if (rule === '') {\r\n                continue;\r\n            }\r\n            // 可能存在 'background: url(http:x/y/z)' 的情况\r\n            const [propName, ...valList] = rule.split(':');\r\n            const val = valList.join(':');\r\n            if (isUndefined(val)) {\r\n                continue;\r\n            }\r\n            this.setProperty(propName.trim(), val.trim());\r\n        }\r\n    }\r\n    setProperty(propertyName, value) {\r\n        if (propertyName[0] === '-') {\r\n            // 支持 webkit 属性或 css 变量\r\n            this.setCssVariables(propertyName);\r\n        }\r\n        else {\r\n            propertyName = toCamelCase(propertyName);\r\n        }\r\n        if (isUndefined(value)) {\r\n            return;\r\n        }\r\n        if (value === null || value === '') {\r\n            this.removeProperty(propertyName);\r\n        }\r\n        else {\r\n            this[propertyName] = value;\r\n        }\r\n    }\r\n    removeProperty(propertyName) {\r\n        propertyName = toCamelCase(propertyName);\r\n        if (!this._usedStyleProp.has(propertyName)) {\r\n            return '';\r\n        }\r\n        const value = this[propertyName];\r\n        this[propertyName] = '';\r\n        this._usedStyleProp.delete(propertyName);\r\n        return value;\r\n    }\r\n    getPropertyValue(propertyName) {\r\n        propertyName = toCamelCase(propertyName);\r\n        const value = this[propertyName];\r\n        if (!value) {\r\n            return '';\r\n        }\r\n        return value;\r\n    }\r\n}\r\ninitStyle(Style);\r\n//# sourceMappingURL=style.js.map","references":["/Users/inoccent/github/taro-hooks/node_modules/@tarojs/shared/dist/index.d.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/style_properties.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/constants/index.ts"],"map":"{\"version\":3,\"file\":\"style.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/dom/style.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/dom/style.d.ts","writeByteOrderMark":false,"text":"import { TaroElement } from './element';\r\nexport declare class Style {\r\n    _usedStyleProp: Set<string>;\r\n    _value: Partial<CSSStyleDeclaration>;\r\n    _element: TaroElement;\r\n    constructor(element: TaroElement);\r\n    private setCssVariables;\r\n    get cssText(): string;\r\n    set cssText(str: string);\r\n    setProperty(propertyName: string, value?: string | null): void;\r\n    removeProperty(propertyName: string): string;\r\n    getPropertyValue(propertyName: string): any;\r\n}\r\n"}}
