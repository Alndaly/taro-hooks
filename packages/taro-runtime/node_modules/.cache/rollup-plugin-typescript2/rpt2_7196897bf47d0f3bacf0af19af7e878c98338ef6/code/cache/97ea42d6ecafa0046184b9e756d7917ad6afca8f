{"code":"export {};\r\n//# sourceMappingURL=instance.js.map","references":["/Users/inoccent/github/taro-hooks/node_modules/@types/react/index.d.ts","/Users/inoccent/github/taro-hooks/node_modules/vue/types/index.d.ts","/Users/inoccent/github/taro-hooks/node_modules/@vue/runtime-core/dist/runtime-core.d.ts","/Users/inoccent/github/taro-hooks/node_modules/vue/types/vue.d.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/interface/index.ts","/Users/inoccent/github/taro-hooks/packages/taro-runtime/src/dom/element.ts"],"map":"{\"version\":3,\"file\":\"instance.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/dsl/instance.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/inoccent/github/taro-hooks/packages/taro-runtime/node_modules/.cache/rollup-plugin-typescript2/placeholder/dsl/instance.d.ts","writeByteOrderMark":false,"text":"import type { Component, ComponentClass } from 'react';\r\nimport VueCtor, { ComponentOptions, VNode } from 'vue';\r\nimport type { Component as Vue3Component } from '@vue/runtime-core';\r\nimport type { CombinedVueInstance } from 'vue/types/vue';\r\nimport type { MpEvent } from '../interface';\r\nimport type { TaroElement } from '../dom/element';\r\nexport interface Instance<T = Record<string, any>> extends Component<T>, Show, PageInstance {\r\n    tid?: string;\r\n    $forceUpdate?(): void;\r\n    $nextTick?(cb: () => void): void;\r\n    $options: Instance;\r\n}\r\nexport interface VueAppInstance extends ComponentOptions<VueCtor> {\r\n    $options: AppInstance;\r\n}\r\nexport declare type VueInstance<M = Record<string, any>, P = Record<string, any>> = CombinedVueInstance<VueCtor, Record<string, any>, M, P, Record<never, any>> & VueInternal;\r\ninterface VueInternal {\r\n    _render(): VNode;\r\n    _update(vnode: VNode, hyrate: boolean): void;\r\n}\r\nexport interface PageProps {\r\n    tid?: string;\r\n}\r\nexport interface ReactPageComponent<T = PageProps> extends ComponentClass<T>, Show, PageInstance {\r\n}\r\nexport interface ReactPageInstance<T = PageProps> extends Component<T>, Show, PageInstance {\r\n    componentDidShow?(): void;\r\n    componentDidHide?(): void;\r\n}\r\nexport interface ReactAppInstance<T = AppInstance> extends Component<T>, Show, AppInstance {\r\n}\r\nexport interface PageLifeCycle extends Show {\r\n    onPullDownRefresh?(): void;\r\n    onReachBottom?(): void;\r\n    onPageScroll?(obj: {\r\n        scrollTop: number;\r\n    }): void;\r\n    onShareAppMessage?(obj: {\r\n        from: string;\r\n        target?: TaroElement;\r\n        webViewUrl: string;\r\n    }): void;\r\n    onResize?(options: unknown): void;\r\n    onTabItemTap?(obj: {\r\n        index: string;\r\n        pagePath: string;\r\n        text: string;\r\n    }): void;\r\n    onTitleClick?(): void;\r\n    onOptionMenuClick?(): void;\r\n    onPopMenuClick?(): void;\r\n    onReady?(): void;\r\n    onPullIntercept?(): void;\r\n    onShareTimeline?(): void;\r\n    onAddToFavorites?(): void;\r\n    eh?(event: MpEvent): void;\r\n    onLoad(options: Record<string, unknown>): void;\r\n    onUnload(): void;\r\n}\r\nexport interface PageInstance extends PageLifeCycle {\r\n    data?: Record<string, unknown>;\r\n    path?: string;\r\n    options?: Record<string, unknown>;\r\n}\r\ninterface Show {\r\n    componentDidShow?(options?: unknown): void;\r\n    componentDidHide?(options?: unknown): void;\r\n    onShow?(options?: unknown): void;\r\n    onHide?(options?: unknown): void;\r\n}\r\nexport interface AppInstance extends Show {\r\n    onLaunch?(options?: string): void;\r\n    mount?(component: React.ComponentClass | ComponentOptions<VueCtor> | Vue3Component, id: string, cb: (...args: any[]) => void): void;\r\n    mount?(component: React.ComponentClass | ComponentOptions<VueCtor> | Vue3Component, id: string, cb: () => void): void;\r\n    unmount?(id: string): void;\r\n    unmount?(id: string, cb: () => void): void;\r\n    onPageNotFound?(res: any): void;\r\n    taroGlobalData?: Record<any, any>;\r\n}\r\nexport {};\r\n"}}
