(self["webpackChunk"]=self["webpackChunk"]||[]).push([[7377],{1422:function(e){"use strict";e.exports={}},73602:function(e,n,t){"use strict";t.d(n,{m:function(){return o.m}});var o=t(67624);t(93142)},83979:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return Ve}});var o=t(68699),r=t(94043),s=t.n(r),a=t(60535),i="import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  AtButton,\n  AtActionSheet,\n  AtActionSheetItem,\n  AtNoticebar,\n} from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nimport { useEnv, useAPICheck } from 'taro-hooks';\nimport { ENV_TYPE } from '@tarojs/taro';\n\nimport 'taro-ui/dist/style/components/icon.scss';\nimport 'taro-ui/dist/style/components/article.scss';\n\nconst selection = [\n  'openBluetoothAdapter',\n  'getSystemInfoSync.return.screenWidth',\n  'showToast.object.image',\n  'onCompassChange.callback.direction',\n  'request.object.method.GET',\n  'live-player',\n  'text.selectable',\n  'button.open-type.contact',\n];\n\nexport default () => {\n  const [sheetVisible, changeSheetVisible] = useState(false);\n  const [selectionChecked, setSelectionChecked] = useState(selection[0]);\n\n  const env = useEnv();\n  const [canIUse, setAPI] = useAPICheck(selectionChecked);\n\n  const handleAcionSheetChange = useCallback(\n    (value) => {\n      setSelectionChecked(value);\n      setAPI(value);\n      changeSheetVisible(false);\n    },\n    [setAPI],\n  );\n\n  return (\n    <>\n      {env !== ENV_TYPE.WEAPP && (\n        <AtNoticebar>useAPICheck \u4ec5\u53ef\u4ee5\u5728\u5c0f\u7a0b\u5e8f\u73af\u5883\u4e2d\u4f7f\u7528</AtNoticebar>\n      )}\n      <DocPage title=\"useAPICheck \u5224\u65ad\u662f\u5426\u53ef\u7528\" panelTitle=\"useAPICheck\">\n        <AtButton onClick={() => changeSheetVisible(!sheetVisible)}>\n          \u9009\u62e9\u793a\u4f8bAPI\u6d4b\u8bd5\n        </AtButton>\n        <View className=\"at-article__h3\" style={{ margin: '10px 0' }}>\n          \u5f53\u524d\u9009\u62e9API\u4e3a:\n        </View>\n        <View className=\"at-article__p\">{selectionChecked}</View>\n        <View className=\"at-article__h3\" style={{ margin: '10px 0' }}>\n          \u5f53\u524d\u9009\u62e9API\u73af\u5883\u662f\u5426\u53ef\u7528\u7ed3\u679c:\n        </View>\n        <View className=\"at-article__p\">{canIUse.toString()}</View>\n      </DocPage>\n      <AtActionSheet\n        isOpened={sheetVisible}\n        title=\"\u66f4\u6539\u9009\u9879\u4ee5\u8c03\u8bd5\"\n        cancelText=\"\u53d6\u6d88\"\n        onCancel={() => changeSheetVisible(false)}\n      >\n        {selection.map((value) => (\n          <AtActionSheetItem\n            key={value}\n            onClick={() => handleAcionSheetChange(value)}\n          >\n            {value}\n          </AtActionSheetItem>\n        ))}\n      </AtActionSheet>\n    </>\n  );\n};",c='import React from \'react\';\nimport { AtNoticebar, AtList, AtListItem } from \'taro-ui\';\nimport DocPage from \'@components/DocPage\';\n\nimport { useAccountInfo } from \'taro-hooks\';\n\nexport default () => {\n  const { miniProgram = {}, plugin = {} } = useAccountInfo();\n\n  return (\n    <>\n      <AtNoticebar marquee>\u8be5hook\u4ec5\u5c0f\u7a0b\u5e8f\u4f7f\u7528</AtNoticebar>\n      <DocPage title="useAccountInfo \u8d26\u53f7\u4fe1\u606f" panelTitle="useAccountInfo">\n        <AtList>\n          <AtListItem title="\u5c0f\u7a0b\u5e8fappId" note={miniProgram?.appId} />\n          <AtListItem title="\u5c0f\u7a0b\u5e8fenvVersion" note={miniProgram?.envVersion} />\n          <AtListItem title="\u5c0f\u7a0b\u5e8fversion" note={miniProgram?.version} />\n          <AtListItem title="\u63d2\u4ef6appId" note={plugin?.appId} />\n          <AtListItem title="\u63d2\u4ef6version" note={plugin?.version} />\n        </AtList>\n      </DocPage>\n    </>\n  );\n};',u="import React, { useCallback } from 'react';\nimport { AtButton } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useActionSheet, useToast } from 'taro-hooks';\nimport { showActionSheet } from '@tarojs/taro';\n\nexport default () => {\n  const [showToast] = useToast({ mask: true });\n\n  const onActionItemTap = useCallback(\n    (tapIndex, tapItem) => {\n      showToast({\n        title: tapIndex + ': ' + tapItem,\n      });\n    },\n    [showToast],\n  );\n\n  const [show] = useActionSheet({\n    itemList: ['A', 'B', 'C'],\n    onActionItemTap,\n  });\n\n  const showCustomActionSheet = useCallback(() => {\n    show({\n      itemColor: '#C5D9E8',\n      itemList: ['taro', 'hooks', 'taro-hooks'],\n    }).then((res: showActionSheet.SuccessCallbackResult) => {\n      showToast({\n        title: String(res.tapIndex),\n      });\n    });\n  }, [show, showToast]);\n\n  return (\n    <>\n      <DocPage title=\"useActionSheet \u64cd\u4f5c\u83dc\u5355\" panelTitle=\"useActionSheet\">\n        <AtButton onClick={show}>\u5c55\u793a\u5e26\u521d\u59cb\u914d\u7f6eActionSheet</AtButton>\n        <AtButton className=\"gap\" onClick={showCustomActionSheet}>\n          \u5c55\u793a\u65b0\u914d\u7f6eActionSheet\n        </AtButton>\n      </DocPage>\n    </>\n  );\n};",l="import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { useArrayBufferToBase64 } from 'taro-hooks';\n\nimport 'taro-ui/dist/style/components/article.scss';\n\nimport { View } from '@tarojs/components';\nimport { AtButton } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport './index.less';\n\nexport default () => {\n  const [buffer, setBuffer] = useState<ArrayBuffer>(\n    new Uint8Array([11, 22, 33]),\n  );\n  const [base64, setArrayBuffer] = useArrayBufferToBase64(buffer);\n\n  useEffect(() => {\n    setArrayBuffer(buffer);\n  }, [buffer, setArrayBuffer]);\n  const handleClick = useCallback(() => {\n    setBuffer(new Uint8Array([99, 10, 88]));\n  }, []);\n\n  return (\n    <>\n      <DocPage\n        title=\"useArrayBufferToBase64\"\n        panelTitle=\"useArrayBufferToBase64\"\n      >\n        <AtButton onClick={handleClick}>\u66f4\u6539\u8f6c\u6362ArrayBuffer</AtButton>\n        <View className=\"at-article__p\">\u5f53\u524d\u8f6c\u6362\u503carrayBuffer\u4e3a: </View>\n        <View className=\"at-article__p use-base64-to-array-buffer\">\n          Uint8Array({buffer.byteLength})[{buffer.toString()}]\n        </View>\n        <View className=\"at-article__p\">\u5f53\u524d\u8f6c\u6362\u503cbase64\u4e3a: </View>\n        <View className=\"at-article__p use-base64-to-array-buffer\">\n          {base64}\n        </View>\n      </DocPage>\n    </>\n  );\n};",p=".use-base64-to-array-buffer {\n  word-break: break-all;\n}",m="import React, { useEffect, useState } from 'react';\nimport { AtNoticebar, AtButton, AtTag, AtFloatLayout } from 'taro-ui';\n\nimport DocPage from '@components/DocPage';\n\nimport { useRecord, useAudio, useEnv, useToast } from 'taro-hooks';\nimport { ENV_TYPE, RecorderManager } from '@tarojs/taro';\n\nimport './index.less';\n\nconst defaultStartOption = {\n  duration: 60000,\n};\n\nexport default () => {\n  const env = useEnv();\n  const [show] = useToast({ mask: true });\n  const [\n    recorderManager,\n    recorderManagerStatus,\n    {\n      onError,\n      onFrameRecorded,\n      onInterruptionBegin,\n      onInterruptionEnd,\n      onPause,\n      onResume,\n      onStart,\n      onStop,\n      startRecord,\n      stopRecord,\n      pauseRecord,\n      resumeRecord,\n    },\n  ] = useRecord();\n  const [audioContext, audioSource, { play, stop, pause, setOption }] =\n    useAudio({\n      autoplay: true,\n      loop: true,\n      obeyMuteSwitch: false,\n    });\n  const [open, setOpen] = useState<boolean>(false);\n  const [recordInfo, setRecordInfo] = useState<\n    RecorderManager.OnStopCallbackResult | undefined\n  >();\n\n  useEffect(() => {\n    if (recorderManager) {\n      onError(({ errMsg }: RecorderManager.OnErrorCallbackResult) =>\n        show({ title: errMsg, icon: 'fail' }),\n      );\n      onFrameRecorded(console.log);\n      onInterruptionBegin(() => {\n        show({ title: '\u5f55\u97f3\u56e0\u4e3a\u53d7\u5230\u7cfb\u7edf\u5360\u7528\u800c\u88ab\u4e2d\u65ad' });\n      });\n      onInterruptionEnd(() => {\n        show({ title: '\u5f55\u97f3\u4e2d\u65ad\u7ed3\u675f' });\n      });\n      onPause(() => {\n        show({ title: '\u5f55\u97f3\u6682\u505c' });\n      });\n      onResume(() => {\n        show({ title: '\u5f55\u97f3\u7ee7\u7eed' });\n      });\n      onStart(() => {\n        show({ title: '\u5f55\u97f3\u5f00\u59cb, \u8bf7\u8bb0\u5f97\u8bf4\u8bdd' });\n      });\n      onStop((res: RecorderManager.OnStopCallbackResult) => {\n        show({ title: '\u5f55\u97f3\u7ed3\u675f, \u8bf7\u786e\u4fdd\u975e\u9759\u97f3\u6a21\u5f0f' });\n        console.log(res);\n        setOption({ obeyMuteSwitch: false });\n        play(res.tempFilePath);\n        setRecordInfo(res);\n        setOpen(true);\n      });\n\n      return () => {\n        stop();\n      };\n    }\n  }, [\n    recorderManager,\n    onError,\n    show,\n    onFrameRecorded,\n    onInterruptionBegin,\n    onInterruptionEnd,\n    onPause,\n    onResume,\n    onStart,\n    onStop,\n    startRecord,\n    stopRecord,\n    pauseRecord,\n    resumeRecord,\n    play,\n    stop,\n    setOption,\n  ]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\n        \u5f53\u524dhook\u4e0d\u652f\u6301h5, \u8bf7\u79fb\u6b65\u5c0f\u7a0b\u5e8f\u4f53\u9a8c\u3002\u4e14\u5f55\u97f3\u548c\u97f3\u9891\u5171\u7528.\n        \u9759\u97f3\u4f1a\u5bfc\u81f4\u97f3\u9891\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\n      </AtNoticebar>\n      <DocPage\n        title=\"useAudio&useRecord \u97f3\u9891\u76f8\u5173\"\n        panelTitle=\"useAudio&useRecord\"\n      >\n        <AtTag circle active type=\"primary\">\n          \u5f53\u524d\u72b6\u6001: {recorderManagerStatus || '\u65e0'}\n        </AtTag>\n        <AtButton\n          disabled={!recorderManager || env === ENV_TYPE.WEB}\n          className=\"gap\"\n          onClick={() => startRecord(defaultStartOption)}\n        >\n          \u5f00\u59cb\u5f55\u5236\n        </AtButton>\n        <AtButton\n          disabled={!recorderManager && env === ENV_TYPE.WEB}\n          onClick={() => stopRecord()}\n        >\n          \u505c\u6b62\u5f55\u5236\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={!recorderManager || env === ENV_TYPE.WEB}\n          onClick={() => pauseRecord()}\n        >\n          \u6682\u505c\u5f55\u5236\n        </AtButton>\n        <AtButton\n          disabled={!recorderManager || env === ENV_TYPE.WEB}\n          onClick={() => resumeRecord()}\n        >\n          \u7ee7\u7eed\u5f55\u5236\n        </AtButton>\n        <AtFloatLayout isOpened={open} onClose={() => setOpen(false)}>\n          <AtTag circle active type=\"primary\">\n            \u5f55\u97f3\u65f6\u957f\u4e3a: {recordInfo?.duration}ms\n          </AtTag>\n          <AtButton\n            disabled={!audioContext || env === ENV_TYPE.WEB}\n            onClick={() => play()}\n            className=\"gap\"\n          >\n            \u64ad\u653e\u97f3\u9891\n          </AtButton>\n          <AtButton\n            disabled={!audioContext && env === ENV_TYPE.WEB}\n            onClick={() => stop()}\n          >\n            \u505c\u6b62\u64ad\u653e\n          </AtButton>\n          <AtButton\n            className=\"gap\"\n            disabled={!audioContext || env === ENV_TYPE.WEB}\n            onClick={() => pause()}\n          >\n            \u6682\u505c\u64ad\u653e\n          </AtButton>\n        </AtFloatLayout>\n      </DocPage>\n    </>\n  );\n};",d=".record-tag {\n  position: absolute;\n  right: 25px;\n  top: 20px;\n  z-index: 999;\n}",f="import React, { useCallback } from 'react';\nimport { AtCheckbox, AtButton, AtNoticebar } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useModal, useAuthorize, useEnv } from 'taro-hooks';\nimport { AuthSetting, ENV_TYPE } from '@tarojs/taro';\n\nimport 'taro-ui/dist/style/components/icon.scss';\n\nconst transferOptions = (setting: AuthSetting) =>\n  Object.entries(setting).map(([key, value]) => ({\n    label: key,\n    value: key,\n    disabled: typeof value === 'boolean' ? !value : value !== 'accept',\n  }));\n\nexport default () => {\n  const env = useEnv();\n  const [show] = useModal({ mask: true, title: '\u64cd\u4f5c\u7ed3\u679c', showCancel: false });\n  const [{ authSetting, subscriptionsSetting }, { openSetting, authorize }] =\n    useAuthorize({ withSubscriptions: true });\n\n  const options = transferOptions({ ...authSetting, ...subscriptionsSetting });\n\n  const handleAuth = useCallback(() => {\n    authorize('scope.invoice').then(() => show({ content: '\u6388\u6743\u8c03\u7528\u6210\u529f!' }));\n  }, [authorize, show]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\u5c0f\u7a0b\u5e8f\u4e13\u7528hook</AtNoticebar>\n      <DocPage title=\"useAuthorize \u7528\u6237\u6388\u6743\" panelTitle=\"useAuthorize\">\n        <AtButton\n          disabled={env !== ENV_TYPE.WEAPP}\n          onClick={() => openSetting()}\n        >\n          \u6253\u5f00\u8bbe\u7f6e\u9762\u677f\n        </AtButton>\n        <AtButton\n          disabled={env !== ENV_TYPE.WEAPP}\n          className=\"gap\"\n          onClick={handleAuth}\n        >\n          \u6388\u6743\n        </AtButton>\n        {env === ENV_TYPE.WEAPP && (\n          <AtCheckbox\n            options={options}\n            selectedList={options\n              .filter((v) => !v.disabled)\n              .map((v) => v.value)}\n            onChange={console.log}\n          />\n        )}\n      </DocPage>\n    </>\n  );\n};",h="import React, { useCallback, useEffect } from 'react';\nimport { AtButton, AtNoticebar } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useBackground, useManualPullDownRefresh } from 'taro-hooks';\nimport mock from 'mockjs';\n\nexport default () => {\n  const [start] = useManualPullDownRefresh();\n  const [setBackgroundColor, setBackgroundTextStyle] = useBackground({\n    textStyle: 'light',\n    backgroundColor: '#bd5fff',\n  });\n\n  useEffect(() => {\n    start(3000);\n  }, [start]);\n\n  const handleSetBackgroundColor = useCallback(() => {\n    setBackgroundColor({\n      backgroundColor: mock.mock('@color()'),\n      backgroundColorTop: mock.mock('@color()'),\n      backgroundColorBottom: mock.mock('@color()'),\n    }).then(() => start(3000));\n  }, [setBackgroundColor, start]);\n\n  const handleSetBackgroundTextStyle = useCallback(\n    (textStyle) => {\n      setBackgroundTextStyle(textStyle).then(() => start(3000));\n    },\n    [setBackgroundTextStyle, start],\n  );\n\n  return (\n    <>\n      <AtNoticebar marquee>\u8be5hook\u4e0d\u652f\u6301h5\u9884\u89c8</AtNoticebar>\n      <DocPage title=\"useBackground \u7a97\u53e3\u8bbe\u7f6e\" panelTitle=\"useAccountInfo\">\n        <AtButton onClick={handleSetBackgroundColor}>\u8bbe\u7f6e\u7a97\u53e3\u80cc\u666f\u8272</AtButton>\n        <AtButton\n          className=\"gap\"\n          onClick={() => handleSetBackgroundTextStyle('dark')}\n        >\n          \u8bbe\u7f6e\u4e0b\u62c9\u80cc\u666floading(dark)\n        </AtButton>\n        <AtButton onClick={() => handleSetBackgroundTextStyle('light')}>\n          \u8bbe\u7f6e\u4e0b\u62c9\u80cc\u666floading(light)\n        </AtButton>\n      </DocPage>\n    </>\n  );\n};",g="import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { useBase64ToArrayBuffer } from 'taro-hooks';\nimport { encode } from 'base-64';\n\nimport 'taro-ui/dist/style/components/article.scss';\n\nimport { View } from '@tarojs/components';\nimport { AtInput } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport './index.less';\n\nexport default () => {\n  const [base64, changeBase64] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [buffer, setBase64] = useBase64ToArrayBuffer(base64);\n\n  const translateArrayBuffer = useCallback(\n    (value) => {\n      const arrayBuffer = encode(value);\n      changeBase64(arrayBuffer);\n      setBase64(arrayBuffer);\n      setInputValue(value);\n      return value;\n    },\n    [setBase64],\n  );\n\n  return (\n    <>\n      <DocPage\n        title=\"useBase64ToArrayBuffer\"\n        panelTitle=\"useBase64ToArrayBuffer\"\n      >\n        <AtInput\n          title=\"\u5f85\u8f6c\u6362\u6587\u672c\"\n          type=\"text\"\n          value={inputValue}\n          placeholder=\"\u6b64\u5904\u8f93\u5165\u6587\u672c\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3abase64\"\n          onChange={translateArrayBuffer}\n        />\n        <View className=\"at-article__p\">\u5f53\u524d\u8f6c\u6362\u503cbase64\u4e3a: </View>\n        <View className=\"at-article__p use-base64-to-array-buffer\">\n          {base64}\n        </View>\n        <View className=\"at-article__p\">\u5f53\u524d\u8f6c\u6362\u503carrayBuffer\u4e3a: </View>\n        <View className=\"at-article__p use-base64-to-array-buffer\">\n          Uint8Array({buffer && buffer.byteLength})[{buffer.toString()}]\n        </View>\n      </DocPage>\n    </>\n  );\n};",v=".use-base64-to-array-buffer {\n  word-break: break-all;\n}",k="import React, { useCallback } from 'react';\nimport { AtSwitch, AtProgress } from 'taro-ui';\nimport DocPage from '@components/DocPage';\nimport { View } from '@tarojs/components';\n\nimport { useBattery } from 'taro-hooks';\nimport 'taro-ui/dist/style/components/icon.scss';\n\nexport default () => {\n  const batteryInfo = useBattery();\n\n  return (\n    <DocPage title=\"useBattery \u7535\u91cf\" panelTitle=\"useBattery\">\n      <AtSwitch title=\"\u5145\u7535\u4e0e\u5426\" checked={batteryInfo.isCharging} disabled />\n      <View className=\"at-article__h3 margin\">\u5f53\u524d\u7535\u91cf:</View>\n      <View className=\"at-article__p\">\n        <AtProgress percent={batteryInfo.level} />\n      </View>\n    </DocPage>\n  );\n};",w="import React from 'react';\nimport { AtProgress, AtSlider } from 'taro-ui';\nimport DocPage from '@components/DocPage';\nimport { View } from '@tarojs/components';\nimport { ENV_TYPE } from '@tarojs/taro';\n\nimport { useBrightness, useEnv } from 'taro-hooks';\n\nimport './index.less';\n\nexport default () => {\n  const [brightness, setBrightness] = useBrightness(true);\n  const env = useEnv();\n\n  return (\n    <DocPage title=\"useBrightness \u5c4f\u5e55\u4eae\u5ea6\" panelTitle=\"useBrightness\">\n      <View className=\"at-article__h3\">\u5f53\u524d\u4eae\u5ea6</View>\n      <AtProgress\n        percent={Math.round(brightness * 100)}\n        className=\"taro-hooks-bri-padding\"\n      />\n      <View className=\"at-article__h3\">\u8bbe\u7f6e\u4eae\u5ea6</View>\n      <AtSlider\n        min={0}\n        max={1}\n        step={0.1}\n        value={brightness}\n        customStyle={env && env === ENV_TYPE.WEB ? { padding: '0.1rem' } : {}}\n        onChange={(value) => setBrightness(value.toFixed(1))}\n      ></AtSlider>\n    </DocPage>\n  );\n};",b=".taro-hooks-bri-padding {\n  padding: 10px 30px;\n}",A="import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  AtNoticebar,\n  AtButton,\n  AtList,\n  AtListItem,\n  AtFloatLayout,\n  AtTag,\n} from 'taro-ui';\nimport { Camera, Video, CoverView } from '@tarojs/components';\n\nimport DocPage from '@components/DocPage';\n\nimport { useCamera, useEnv, useToast, useImage } from 'taro-hooks';\nimport { ENV_TYPE, CameraContext } from '@tarojs/taro';\n\nimport './index.less';\n\nexport default () => {\n  const env = useEnv();\n  const [show] = useToast({ mask: true });\n  const [\n    cameraContext,\n    { create, startRecord, stopRecord, takePhoto, onCameraFrame },\n  ] = useCamera();\n  const [_, { preview }] = useImage();\n  const [isRecord, changeIsRecord] = useState<boolean>(false);\n  const [cameraContextFrame, setCameraContextFrame] =\n    useState<CameraContext.OnCameraFrameCallbackResult>();\n  const [recordUrl, setRecordUrl] = useState<string>('');\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleTimeoutCallback = useCallback(\n    (info: CameraContext.StartRecordTimeoutCallbackResult) => {\n      show({ title: '\u5f55\u5236\u505c\u6b62' });\n      setRecordUrl(info.tempVideoPath);\n      setOpen(true);\n      changeIsRecord(false);\n    },\n    [show],\n  );\n\n  const handleStartRecord = useCallback(() => {\n    startRecord(handleTimeoutCallback).then(() => {\n      changeIsRecord(true);\n    });\n  }, [startRecord, handleTimeoutCallback]);\n\n  const handleStopRecord = useCallback(() => {\n    stopRecord().then(handleTimeoutCallback);\n  }, [stopRecord, handleTimeoutCallback]);\n\n  const handleTakePhoto = useCallback(() => {\n    takePhoto().then(\n      ({ tempImagePath }: CameraContext.TakePhotoSuccessCallbackResult) => {\n        preview({ urls: [tempImagePath] });\n      },\n    );\n  }, [takePhoto, preview]);\n\n  useEffect(() => {\n    if (cameraContext) {\n      const listener = onCameraFrame(setCameraContextFrame);\n      setTimeout(() => {\n        listener.stop();\n      }, 1000);\n\n      return () => {\n        listener && listener.stop();\n      };\n    }\n  }, [cameraContext, onCameraFrame]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\u5f53\u524dhook\u4e0d\u652f\u6301h5, \u8bf7\u79fb\u6b65\u5c0f\u7a0b\u5e8f\u4f53\u9a8c</AtNoticebar>\n      <DocPage title=\"useCamera \u76f8\u673a\" panelTitle=\"useCamera\">\n        <CoverView className=\"record-tag\">\n          <AtTag circle active={isRecord} type={isRecord ? 'primary' : ''}>\n            {isRecord ? '\u5f55\u5236\u4e2d' : '\u672a\u5f55\u5236'}\n          </AtTag>\n        </CoverView>\n        <Camera className=\"demo\" />\n        {cameraContextFrame && (\n          <AtList>\n            {Object.entries(cameraContextFrame).map(([key, value]) => (\n              <AtListItem\n                key={key}\n                title={key}\n                note={typeof value === 'number' ? value : value.byteLength}\n              />\n            ))}\n          </AtList>\n        )}\n        <AtButton\n          disabled={(cameraContext && isRecord) || env === ENV_TYPE.WEB}\n          className=\"gap\"\n          onClick={handleStartRecord}\n        >\n          \u5f00\u59cb\u5f55\u5236\n        </AtButton>\n        <AtButton\n          disabled={(cameraContext && !isRecord) || env === ENV_TYPE.WEB}\n          onClick={handleStopRecord}\n        >\n          \u505c\u6b62\u5f55\u5236\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={!cameraContext || env === ENV_TYPE.WEB}\n          onClick={handleTakePhoto}\n        >\n          \u62cd\u7167\n        </AtButton>\n        <AtFloatLayout isOpened={open} onClose={() => setOpen(false)}>\n          <Video\n            autoplay={open}\n            className=\"demo\"\n            style={{ height: 257 }}\n            src={recordUrl}\n            onEnded={() => setOpen(false)}\n          />\n        </AtFloatLayout>\n      </DocPage>\n    </>\n  );\n};",P=".record-tag {\n  position: absolute;\n  right: 25px;\n  top: 20px;\n  z-index: 999;\n}",x="import React, { useCallback, useState } from 'react';\nimport { AtButton, AtRadio } from 'taro-ui';\n\nimport DocPage from '@components/DocPage';\n\nimport { useModal, useChooseAddress } from 'taro-hooks';\n\nexport default () => {\n  const [addressInfo, setAddressInfo] = useState({});\n  const [show] = useModal({ mask: true, title: '\u83b7\u53d6\u7ed3\u679c', showCancel: false });\n  const [chooseAddress] = useChooseAddress();\n\n  const handleRequestSubscribeMessage = useCallback(async () => {\n    let content = '\u83b7\u53d6\u6210\u529f!';\n    try {\n      const address = await chooseAddress();\n      if (!address) {\n        content = '\u83b7\u53d6\u5931\u8d25';\n      } else {\n        setAddressInfo(address);\n      }\n    } catch (e) {\n      content = '\u83b7\u53d6\u5931\u8d25';\n    }\n    show({ content });\n  }, [chooseAddress, show]);\n\n  return (\n    <DocPage title=\"useChooseAddress \u6536\u8d27\u5730\u5740\" panelTitle=\"useChooseAddress\">\n      <AtButton onClick={handleRequestSubscribeMessage}>\u83b7\u53d6\u6536\u8d27\u5730\u5740</AtButton>\n      <AtRadio\n        onClick={console.log}\n        value={null}\n        options={Object.entries(addressInfo).map(([key, value]) => ({\n          label: key,\n          value,\n          desc: value as string,\n        }))}\n      />\n    </DocPage>\n  );\n};",y="import React, { useCallback } from 'react';\nimport { View } from '@tarojs/components';\nimport { AtButton } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useClipboardData } from 'taro-hooks';\nimport { showModal } from '@tarojs/taro';\n\nexport default () => {\n  const [clipboardData, { set, get }] = useClipboardData();\n\n  const getClipboardData = useCallback(() => {\n    get().then((data: any) => {\n      showModal({ content: data, title: '\u5f53\u524d\u526a\u8d34\u677f\u5185\u5bb9' });\n    });\n  }, [get]);\n\n  return (\n    <>\n      <DocPage title=\"useClipboardData \u526a\u8d34\u677f\" panelTitle=\"useClipboardData\">\n        <View>\u5f53\u524d\u526a\u8d34\u677f\u5185\u5bb9: {clipboardData}</View>\n        <AtButton\n          customStyle={{ margin: '10px 0' }}\n          onClick={() => set('taro hooks nice!')}\n        >\n          \u8bbe\u7f6e\u526a\u8d34\u677f\n        </AtButton>\n        <AtButton onClick={getClipboardData}>\u83b7\u53d6\u526a\u8d34\u677f</AtButton>\n      </DocPage>\n    </>\n  );\n};",C="import React, { useCallback } from 'react';\nimport { AtRadio, AtMessage } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useEnv } from 'taro-hooks';\nimport Taro, { ENV_TYPE } from '@tarojs/taro';\nimport 'taro-ui/dist/style/components/icon.scss';\n\nconst ENVTYPE = [\n  ['WEAPP', 'WEAPP'],\n  ['WEB', 'WEB'],\n  ['RN', 'RN'],\n  ['SWAN', 'SWAN'],\n  ['ALIPAY', 'ALIPAY'],\n  ['TT ', 'TT'],\n  ['QQ', 'QQ'],\n  ['JD', 'JD'],\n];\nconst radioOptions = (env: ENV_TYPE) =>\n  ENVTYPE.map(([label, value]) => ({\n    label,\n    value,\n    desc: `\u73af\u5883: ${label}`,\n    disabled: value !== env,\n  }));\n\nexport default () => {\n  const env = useEnv();\n\n  const handleRadioClick = useCallback(() => {\n    Taro.atMessage({\n      message: '\u5f53\u524d\u73af\u5883\u7c7b\u578b: ' + env,\n      type: 'info',\n    });\n  }, [env]);\n\n  return (\n    <>\n      <AtMessage />\n      <DocPage title=\"useEnv \u83b7\u53d6\u5f53\u524d\u73af\u5883\u503c\" panelTitle=\"useEnv\">\n        <AtRadio\n          options={radioOptions(env)}\n          value={env}\n          onClick={() => handleRadioClick()}\n        />\n      </DocPage>\n    </>\n  );\n};",B="import React, { useCallback } from 'react';\nimport { AtList, AtListItem, AtMessage, AtDivider, AtCard } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nimport { useEvent } from 'taro-hooks';\nimport Taro, { ENV_TYPE } from '@tarojs/taro';\n\nimport 'taro-ui/dist/style/components/icon.scss';\nimport 'taro-ui/dist/style/components/flex.scss';\n\nconst eventName = 'useEvent';\nexport default () => {\n  const [\n    state,\n    { setListener, emitEvent, setListenerOnce, removeListener, clearListener },\n  ] = useEvent('taro-hooks');\n\n  const handler = useCallback((...args) => {\n    Taro.showModal({ title: '\u76d1\u542c\u4e8b\u4ef6\u6210\u529f', content: JSON.stringify(args) });\n  }, []);\n\n  const handleSetListener = useCallback(() => {\n    setListener(eventName, handler);\n    Taro.atMessage({\n      message: '\u8bbe\u7f6e\u76d1\u542c\u6210\u529f',\n    });\n  }, [setListener, handler]);\n\n  const handleSetListenerOnce = useCallback(() => {\n    setListenerOnce(eventName + '-once', handler);\n    Taro.atMessage({\n      message: '\u8bbe\u7f6e\u76d1\u542c\u6210\u529f(once)',\n    });\n  }, [setListenerOnce, handler]);\n\n  const handleEmitEvent = useCallback(\n    (once) => {\n      emitEvent(eventName + (once ? '-once' : ''), 'taro', 'hooks', once);\n    },\n    [emitEvent],\n  );\n\n  const handleRemoveListener = useCallback(() => {\n    removeListener(eventName, handler);\n  }, [removeListener, handler]);\n\n  const handleClearListener = useCallback(() => {\n    clearListener();\n  }, [clearListener]);\n\n  return (\n    <>\n      <AtMessage />\n      <DocPage title=\"useEvent \u4e8b\u4ef6\u673a\u5236\" panelTitle=\"useEvent\">\n        <AtList>\n          <AtListItem\n            title=\"setListener\"\n            note=\"\u8bbe\u7f6e\u76d1\u542c\"\n            onClick={handleSetListener}\n          />\n          <AtListItem\n            title=\"emitEvent\"\n            note=\"\u89e6\u53d1\u76d1\u542c\"\n            onClick={() => handleEmitEvent()}\n          />\n          <AtListItem\n            title=\"setListenerOnce\"\n            note=\"\u8bbe\u7f6e\u76d1\u542c\u4e00\u6b21\u5e76\u89e3\u9664\"\n            onClick={handleSetListenerOnce}\n          />\n          <AtListItem\n            title=\"emitEvent  once mode\"\n            note=\"\u89e6\u53d1\u76d1\u542conce\"\n            onClick={() => handleEmitEvent(true)}\n          />\n          <AtListItem\n            title=\"removeListener\"\n            note=\"\u79fb\u9664\u76d1\u542c\"\n            onClick={handleRemoveListener}\n          />\n          <AtListItem\n            title=\"clearListener\"\n            note=\"\u79fb\u9664\u6240\u6709\u76d1\u542c\"\n            onClick={handleClearListener}\n          />\n        </AtList>\n        <AtDivider content=\"\u4e0b\u9762\u4e3a\u4e8b\u4ef6\u5c55\u793a\" />\n        <AtCard title=\"\u5f53\u524d\u4e8b\u4ef6\u6808\">\n          <View>\u5f53\u524d\u76d1\u542c\u4e8b\u4ef6\u603b\u6570: {state.eventNameQueue.length}</View>\n          <View>\u5206\u522b\u4e3a: </View>\n          {state.eventNameQueue.map((name: string) => (\n            <View key={name}>\n              {name} - \u76d1\u542c\u51fd\u6570\u4e2a\u6570:{' '}\n              {state.eventQueue[name] ? state.eventQueue[name].length : 0}\n            </View>\n          ))}\n        </AtCard>\n      </DocPage>\n    </>\n  );\n};",D="import React, { useCallback } from 'react';\nimport { AtButton } from 'taro-ui';\n\nimport DocPage from '@components/DocPage';\n\nimport { useFile, useImage, useModal } from 'taro-hooks';\n\nexport default () => {\n  const { download, upload } = useFile();\n  const [, { choose, preview }] = useImage({});\n  const [showModal] = useModal({ mask: true, title: '\u6587\u4ef6\u7ed3\u679c' });\n\n  const handleUpload = useCallback(async () => {\n    const fileInfo = await choose();\n    if (fileInfo?.tempFilePaths?.length) {\n      const uploadFilePath = fileInfo.tempFilePaths[0];\n      const uploadResult = await upload({\n        url: 'https://run.mocky.io/v3/35b34abe-3f7e-4cde-91a8-da02f699bdc0',\n        filePath: uploadFilePath,\n        name: 'chooseImage:file',\n        header: {},\n      });\n      const modalContent =\n        uploadResult?.statusCode === 200 ? uploadResult?.data : '\u4e0a\u4f20\u5931\u8d25';\n      showModal({ content: modalContent });\n    } else {\n      showModal({\n        content: '\u53d6\u6d88\u9009\u62e9',\n      });\n    }\n  }, [choose, upload, showModal]);\n\n  const handleDownload = useCallback(async () => {\n    try {\n      const result = await download({\n        url: 'https://pixabay.com/get/gca7a9aedd24075bee51ccdc9e510d6d78d66b2b607c643e63260d944732a75301e6ce92f56e371d0ea11c55613742929_640.jpg',\n      });\n      if (result.statusCode === 200 && result?.tempFilePath) {\n        preview({\n          urls: [result?.tempFilePath],\n        });\n      } else {\n        throw new Error();\n      }\n    } catch (e) {\n      showModal({\n        content: 'downloadFile: fail',\n      });\n    }\n  }, [download, showModal, preview]);\n\n  return (\n    <>\n      <DocPage title=\"useFile \u4e0a\u4f20\u4e0b\u8f7d\" panelTitle=\"useFile\">\n        <AtButton onClick={handleUpload}>\u9009\u62e9\u56fe\u7247\u4e0a\u4f20</AtButton>\n        <AtButton className=\"gap\" onClick={handleDownload}>\n          \u4e0b\u8f7d\u56fe\u7247\n        </AtButton>\n      </DocPage>\n    </>\n  );\n};",R="import React, { useCallback, useState } from 'react';\nimport { AtButton, AtFloatLayout, AtList, AtListItem } from 'taro-ui';\nimport DocPage from '@components/DocPage';\nimport { Swiper, SwiperItem, Image } from '@tarojs/components';\n\nimport { useImage, useEnv, useToast } from 'taro-hooks';\nimport { ENV_TYPE } from '@tarojs/taro';\n\nimport './index.less';\n\nexport default () => {\n  const [show] = useToast({ mask: true });\n  const [open, changeOpen] = useState<boolean>(false);\n  const [imageInfo, setImageInfo] = useState({});\n  const env = useEnv();\n  const [\n    fileInfo,\n    { choose, chooseMessageFile, preview, save, getInfo, compress },\n  ] = useImage({\n    count: 15,\n  });\n\n  const getImageInfo = useCallback(\n    async (src: string) => {\n      const info = await getInfo(src);\n      setImageInfo(info);\n      changeOpen(true);\n    },\n    [getInfo],\n  );\n\n  const getMessageFileInfo = useCallback(async () => {\n    const info = await chooseMessageFile(1);\n    setImageInfo(info.tempFiles[0]);\n    changeOpen(true);\n  }, [chooseMessageFile]);\n\n  const compressInfo = useCallback(\n    async (src: string) => {\n      const info = await compress(src);\n      setImageInfo(info);\n      changeOpen(true);\n    },\n    [compress],\n  );\n\n  const saveInfo = useCallback(() => {\n    save(fileInfo.tempFilePaths[0])\n      .then(() => {\n        show({\n          title: '\u4fdd\u5b58\u6210\u529f',\n        });\n      })\n      .catch(() => {\n        show({\n          title: '\u4fdd\u5b58\u5931\u8d25',\n        });\n      });\n  }, [save, fileInfo, show]);\n\n  return (\n    <>\n      <DocPage title=\"useImage \u56fe\u7247\" panelTitle=\"useImage\">\n        <Swiper className=\"taro-hooks-swiper\" autoplay>\n          {(fileInfo.tempFilePaths || []).map((v: string) => (\n            <SwiperItem key={v}>\n              <Image className=\"taro-hooks-image\" mode=\"aspectFit\" src={v} />\n            </SwiperItem>\n          ))}\n        </Swiper>\n        <AtButton onClick={() => choose()}>\u9009\u62e9\u56fe\u7247</AtButton>\n        <AtButton\n          disabled={!fileInfo.tempFilePaths}\n          className=\"gap\"\n          onClick={() => preview({ urls: fileInfo.tempFilePaths })}\n        >\n          \u9884\u89c8\u7167\u7247\n        </AtButton>\n        <AtButton disabled={!fileInfo.tempFilePaths} onClick={saveInfo}>\n          \u4fdd\u5b58\u56fe\u7247\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={!fileInfo.tempFilePaths}\n          onClick={() => getImageInfo(fileInfo.tempFilePaths[0])}\n        >\n          \u83b7\u53d6\u56fe\u7247\u4fe1\u606f\n        </AtButton>\n        <AtButton\n          disabled={env !== ENV_TYPE.WEAPP}\n          onClick={getMessageFileInfo}\n        >\n          \u83b7\u53d6\u4f1a\u8bdd\u6587\u4ef6(\u4ec5\u5c0f\u7a0b\u5e8f)\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={!fileInfo.tempFilePaths}\n          onClick={() => compressInfo(fileInfo.tempFilePaths[0])}\n        >\n          \u538b\u7f29\u56fe\u7247\n        </AtButton>\n        <AtFloatLayout isOpened={open} onClose={() => changeOpen(false)}>\n          <AtList>\n            {Object.entries(imageInfo).map(([key, value]) => (\n              <AtListItem key={key} title={key} note={String(value)} />\n            ))}\n          </AtList>\n        </AtFloatLayout>\n      </DocPage>\n    </>\n  );\n};",S=".taro-hooks {\n  &-swiper {\n    width: 100%;\n    height: 300px;\n    margin-bottom: 20px;\n    background-color: #6190e8;\n  }\n\n  &-image {\n    display: block;\n    margin: 0 auto;\n  }\n}",I="import React, { useCallback, useState } from 'react';\nimport { AtButton, AtRadio } from 'taro-ui';\n\nimport DocPage from '@components/DocPage';\n\nimport { useModal, useInvoice } from 'taro-hooks';\n\nexport default () => {\n  const [invoice, setInvoice] = useState<{ [_: string]: string }[]>([]);\n  const [show] = useModal({ mask: true, title: '\u83b7\u53d6\u7ed3\u679c', showCancel: false });\n  const [chooseInvoice, chooseInvoiceTitle] = useInvoice();\n\n  const handleChooseInvoice = useCallback(async () => {\n    let content = '\u83b7\u53d6\u6210\u529f!';\n    try {\n      const invoiceInfo = await chooseInvoice();\n      console.log(invoiceInfo);\n      if (!invoiceInfo) {\n        content = '\u83b7\u53d6\u5931\u8d25';\n      } else {\n        setInvoice(invoiceInfo);\n      }\n    } catch (e) {\n      console.log(e);\n      content = '\u83b7\u53d6\u5931\u8d25';\n    }\n    show({ content });\n  }, [chooseInvoice, show]);\n\n  const handleChooseInvoiceTitle = useCallback(async () => {\n    let content = '\u83b7\u53d6\u6210\u529f!';\n    try {\n      const invoiceTitleInfo = await chooseInvoiceTitle();\n      console.log(invoiceTitleInfo);\n      if (!invoiceTitleInfo) {\n        content = '\u83b7\u53d6\u5931\u8d25';\n      } else {\n        setInvoice([invoiceTitleInfo]);\n      }\n    } catch (e) {\n      content = '\u83b7\u53d6\u5931\u8d25';\n    }\n    show({ content });\n  }, [chooseInvoiceTitle, show]);\n\n  return (\n    <DocPage title=\"useInvoice \u53d1\u7968(\u62ac\u5934)\" panelTitle=\"useInvoice\">\n      <AtButton onClick={handleChooseInvoice}>\u83b7\u53d6\u53d1\u7968\u4fe1\u606f</AtButton>\n      <AtButton className=\"gap\" onClick={handleChooseInvoiceTitle}>\n        \u83b7\u53d6\u53d1\u7968\u62ac\u5934\u4fe1\u606f\n      </AtButton>\n      {invoice.map((item, index) => (\n        <AtRadio\n          key={index + item.title}\n          onClick={console.log}\n          value={null}\n          options={Object.entries(item).map(([key, value]) => ({\n            label: key,\n            value,\n            desc: value as string,\n          }))}\n        />\n      ))}\n    </DocPage>\n  );\n};",T="import React from 'react';\nimport { AtRadio, AtNoticebar } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { General, ENV_TYPE } from '@tarojs/taro';\nimport { useLaunchOptions, useEnv } from 'taro-hooks';\n\nimport 'taro-ui/dist/style/components/icon.scss';\n\nimport { SceneEnum } from '../../constant';\n\nconst MOCK = '1';\n\nconst transferOptions = (launchOptions: General.LaunchOptionsApp) =>\n  Object.keys(launchOptions).map((key: any) => {\n    let desc = JSON.stringify(\n      launchOptions[key as keyof General.LaunchOptionsApp] || '',\n    );\n\n    if (key === 'scene') {\n      desc =\n        desc +\n        ':' +\n        (SceneEnum[launchOptions[key as keyof General.LaunchOptionsApp]] || '');\n    }\n    return {\n      label: key + ':',\n      value: key,\n      desc,\n    };\n  });\n\nexport default () => {\n  const launchOptions = useLaunchOptions();\n  const env = useEnv();\n  return (\n    <>\n      <AtNoticebar marquee>\u8bf7\u5c1d\u8bd5\u4ece\u4e0d\u540c\u573a\u666f\u6253\u5f00\u5c0f\u7a0b\u5e8f\u89c2\u5bdf\u53c2\u6570\u53d8\u5316</AtNoticebar>\n      <DocPage title=\"useLaunchOptions \u542f\u52a8\u53c2\u6570\" panelTitle=\"useLaunchOptions\">\n        {env !== ENV_TYPE.WEAPP && '\u8be5hook\u4ec5\u53ef\u5728\u5c0f\u7a0b\u5e8f\u4e2d\u4f7f\u7528'}\n        <AtRadio\n          options={transferOptions(launchOptions)}\n          value={MOCK}\n          onClick={console.log}\n        />\n      </DocPage>\n    </>\n  );\n};",j="export interface APIListItem {\n  id: string;\n  title: string;\n  content: string;\n  icon: string;\n}\n\nexport type APIList = APIListItem[];\n\nexport const List: APIList = [\n  {\n    id: 'Basic',\n    title: '\u57fa\u7840Hooks',\n    content: '\u5305\u542b\u4e8b\u4ef6\u3001\u8c03\u8bd5\u7b49',\n    icon: 'basic',\n  },\n  {\n    id: 'Layout',\n    title: '\u5e03\u5c40Hooks',\n    content: '\u5305\u542btab\u3001\u80cc\u666f\u7b49',\n    icon: 'layout',\n  },\n  {\n    id: 'Feedback',\n    title: '\u64cd\u4f5c\u53cd\u9988Hooks',\n    content: '\u5305\u542bToast, Modal\u7b49',\n    icon: 'feedback',\n  },\n  {\n    id: 'Network',\n    title: '\u7f51\u7edcHooks',\n    content: '\u5305\u542b\u8bf7\u6c42\u3001\u4e0b\u8f7d\u7b49',\n    icon: 'network',\n  },\n  {\n    id: 'Media',\n    title: '\u5a92\u4f53Hooks',\n    content: '\u5305\u542b\u56fe\u7247\u3001\u97f3\u9891\u7b49',\n    icon: 'media',\n  },\n  {\n    id: 'Device',\n    title: '\u8bbe\u5907Hooks',\n    content: '\u5305\u542b\u5730\u7406\u4f4d\u7f6e\u3001\u7535\u91cf\u7b49',\n    icon: 'device',\n  },\n  {\n    id: 'Wechat',\n    title: '\u5c0f\u7a0b\u5e8fHooks',\n    content: '\u5305\u542b\u7ba1\u7406\u5668\u3001API\u7b49',\n    icon: 'wechat',\n  },\n  {\n    id: 'Environment',\n    title: '\u73af\u5883Hooks',\n    content: '\u5305\u542b\u73af\u5883\u5224\u65ad\u7b49',\n    icon: 'environment',\n  },\n];\n\nexport interface APIChildrenItem {\n  id: string;\n  name: string;\n  tabBar?: boolean;\n}\n\nexport enum APIChildrenName {\n  basic = 'basic',\n  layout = 'layout',\n  environment = 'environment',\n  wechat = 'wechat',\n  network = 'network',\n  feedback = 'feedback',\n  media = 'media',\n  device = 'device',\n}\n\nexport const ChildrenList: { [_: string]: APIChildrenItem[] } = {\n  [APIChildrenName.basic]: [\n    {\n      id: 'useEvent',\n      name: 'useEvent \u4e8b\u4ef6\u4e2d\u5fc3',\n    },\n    {\n      id: 'useRouter',\n      name: 'useRouter \u8def\u7531',\n    },\n    {\n      id: 'useBase64ToArrayBuffer',\n      name: 'useBase64ToArrayBuffer \u8f6c\u6362base64',\n    },\n    {\n      id: 'useArrayBufferToBase64',\n      name: 'useArrayBufferToBase64 \u8f6c\u6362ArrayBuffer',\n    },\n    {\n      id: 'useClipboardData',\n      name: 'useClipboardData \u526a\u8d34\u677f',\n    },\n    {\n      id: 'useSystemInfo',\n      name: 'useSystemInfo \u7cfb\u7edf\u4fe1\u606f',\n    },\n    {\n      id: 'useVisible',\n      name: 'useVisible \u9875\u9762\u72b6\u6001',\n    },\n    {\n      id: 'useSelectorQuery',\n      name: 'useSelectorQuery \u8282\u70b9\u67e5\u8be2',\n    },\n    {\n      id: 'usePromise',\n      name: 'usePromise \u5f02\u6b65',\n    },\n    {\n      id: 'useStorage',\n      name: 'useStorage \u6570\u636e\u7f13\u5b58',\n    },\n  ],\n  [APIChildrenName.layout]: [\n    {\n      id: 'useBackground',\n      name: 'useBackground \u7a97\u53e3\u8bbe\u7f6e',\n    },\n    {\n      id: 'useManualPullDownRefresh',\n      name: 'useManualPullDownRefresh \u624b\u52a8\u4e0b\u62c9\u5237\u65b0',\n    },\n    {\n      id: 'useTabBar',\n      name: 'useTabBar tab\u680f',\n      tabBar: true,\n    },\n  ],\n  [APIChildrenName.feedback]: [\n    {\n      id: 'useToast',\n      name: 'useToast \u6d88\u606f\u63d0\u793a\u6846',\n    },\n    {\n      id: 'useModal',\n      name: 'useModal \u6a21\u6001\u5bf9\u8bdd\u6846',\n    },\n    {\n      id: 'useLoading',\n      name: 'useLoading \u52a0\u8f7d\u63d0\u793a\u6846',\n    },\n    {\n      id: 'useActionSheet',\n      name: 'useActionSheet \u64cd\u4f5c\u83dc\u5355',\n    },\n    {\n      id: 'useNavigationBar',\n      name: 'useNavigationBar \u5bfc\u822a\u6761',\n    },\n  ],\n  [APIChildrenName.environment]: [\n    {\n      id: 'useEnv',\n      name: 'useEnv \u83b7\u53d6\u5f53\u524d\u73af\u5883\u503c',\n    },\n  ],\n  [APIChildrenName.wechat]: [\n    {\n      id: 'useAPICheck',\n      name: 'useAPICheck \u5224\u65ad\u662f\u5426\u53ef\u7528',\n    },\n    {\n      id: 'useUpdateManager',\n      name: 'useUpdateManager \u66f4\u65b0',\n    },\n    {\n      id: 'useLaunchOptions',\n      name: 'useLaunchOptions \u542f\u52a8\u53c2\u6570',\n    },\n    {\n      id: 'useUserInfo',\n      name: 'useUserInfo \u7528\u6237\u4fe1\u606f',\n    },\n    {\n      id: 'useAccountInfo',\n      name: 'useAccountInfo \u8d26\u53f7\u4fe1\u606f',\n    },\n    {\n      id: 'useAuthorize',\n      name: 'useAuthorize \u7528\u6237\u6388\u6743',\n    },\n    {\n      id: 'useRequestSubscribeMessage',\n      name: 'useRequestSubscribeMessage \u8ba2\u9605\u6d88\u606f',\n    },\n    {\n      id: 'useChooseAddress',\n      name: 'useChooseAddress \u6536\u8d27\u5730\u5740',\n    },\n    {\n      id: 'useInvoice',\n      name: 'useInvoice \u53d1\u7968(\u62ac\u5934)',\n    },\n    {\n      id: 'useWeRun',\n      name: 'useWeRun \u5fae\u4fe1\u8fd0\u52a8',\n    },\n    {\n      id: 'useTopBarText',\n      name: 'useTopBarText \u7f6e\u9876\u4fe1\u606f',\n    },\n    {\n      id: 'useMenuButtonBoundingClientRect',\n      name: 'useMenuButtonBoundingClientRect \u80f6\u56ca\u4f4d\u7f6e',\n    },\n  ],\n  [APIChildrenName.media]: [\n    {\n      id: 'useImage',\n      name: 'useImage \u56fe\u7247',\n    },\n    {\n      id: 'useVideo',\n      name: 'useVideo \u89c6\u9891',\n    },\n    {\n      id: 'useAudio',\n      name: 'useRecord \u5f55\u97f3',\n    },\n    {\n      id: 'useAudio',\n      name: 'useAudio \u97f3\u9891',\n    },\n    {\n      id: 'useCamera',\n      name: 'useCamera \u76f8\u673a',\n    },\n    {\n      id: 'useMap',\n      name: 'useMap \u5730\u56fe',\n    },\n  ],\n  [APIChildrenName.device]: [\n    {\n      id: 'useBattery',\n      name: 'useBattery \u7535\u91cf',\n    },\n    {\n      id: 'useVibrate',\n      name: 'useVibrate \u9707\u52a8\u53cd\u9988',\n    },\n    {\n      id: 'useMotion',\n      name: 'useMotion \u8bbe\u5907\u65b9\u5411',\n    },\n    {\n      id: 'useBrightness',\n      name: 'useBrightness \u5c4f\u5e55\u4eae\u5ea6',\n    },\n    {\n      id: 'useLocation',\n      name: 'useLocation \u5730\u7406\u4f4d\u7f6e',\n    },\n    {\n      id: 'useScanCode',\n      name: 'useScanCode \u626b\u7801',\n    },\n  ],\n  [APIChildrenName.network]: [\n    {\n      id: 'useRequest',\n      name: 'useRequest \u8bf7\u6c42',\n    },\n    {\n      id: 'useNetworkType',\n      name: 'useNetworkType \u7f51\u7edc\u7c7b\u578b',\n    },\n    {\n      id: 'useOnline',\n      name: 'useOnline \u7f51\u7edc\u72b6\u6001',\n    },\n    {\n      id: 'useFile',\n      name: 'useFile \u4e0a\u4f20\u4e0b\u8f7d',\n    },\n  ],\n};\n\nexport const SceneEnum: { [_: number]: string } = {\n  1020: '\u516c\u4f17\u53f7 profile \u9875\u76f8\u5173\u5c0f\u7a0b\u5e8f\u5217\u8868',\n  1035: '\u516c\u4f17\u53f7\u81ea\u5b9a\u4e49\u83dc\u5355',\n  1036: 'App \u5206\u4eab\u6d88\u606f\u5361\u7247',\n  1037: '\u5c0f\u7a0b\u5e8f\u6253\u5f00\u5c0f\u7a0b\u5e8f',\n  1038: '\u4ece\u53e6\u4e00\u4e2a\u5c0f\u7a0b\u5e8f\u8fd4\u56de',\n  1043: '\u516c\u4f17\u53f7\u6a21\u677f\u6d88\u606f',\n};\n\nexport const PRODUCTIONDISABLEPANEL: string[] = [\n  'useVideo',\n  'useWeRun',\n  'useInvoice',\n];",V="import React, { useCallback } from 'react';\nimport { AtButton } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useLoading } from 'taro-hooks';\n\nexport default () => {\n  const [show, hide] = useLoading({\n    mask: false,\n    title: 'initial title',\n  });\n\n  const showCustomLoading = useCallback(() => {\n    show({\n      title: '\u70b9\u51fb\u9690\u85cf\u6309\u94ae\u8fdb\u884c\u9690\u85cf',\n    });\n  }, [show]);\n\n  return (\n    <>\n      <DocPage title=\"useLoading \u52a0\u8f7d\u63d0\u793a\u6846\" panelTitle=\"useLoading\">\n        <AtButton onClick={show}>\u5c55\u793a\u5e26\u521d\u59cb\u914d\u7f6eLoading</AtButton>\n        <AtButton className=\"gap\" onClick={showCustomLoading}>\n          \u5c55\u793a\u65b0\u914d\u7f6eLoading\n        </AtButton>\n        <AtButton onClick={hide}>\u9690\u85cfLoading</AtButton>\n      </DocPage>\n    </>\n  );\n};",E="import React, { useCallback, useEffect, useState } from 'react';\nimport { AtNoticebar, AtList, AtListItem, AtButton } from 'taro-ui';\n\nimport DocPage from '@components/DocPage';\n\nimport { useLocation, useEnv, useModal } from 'taro-hooks';\nimport { ENV_TYPE, General } from '@tarojs/taro';\n\nimport './index.less';\n\nexport default () => {\n  const [\n    location,\n    {\n      getLocation,\n      chooseLocation,\n      openLocation,\n      onLocationChange,\n      offLocationChange,\n      startLocationUpdate,\n      startLocationUpdateBackground,\n      stopLocationUpdate,\n    },\n  ] = useLocation({\n    isHighAccuracy: true,\n    altitude: true,\n    type: 'gcj02',\n  });\n  const [listenStatus, changeListenStatus] = useState<boolean>();\n  const [chooseLocationInfo, setChooseLocationInfo] = useState<object>();\n  const env = useEnv();\n  const [show] = useModal({ mask: true, title: '\u5730\u7406\u4fe1\u606f' });\n\n  const handleGetLiocation = useCallback(async () => {\n    const locationInfo = await getLocation();\n    show({ content: JSON.stringify(locationInfo) });\n  }, [getLocation, show]);\n\n  const handleChooseLocation = useCallback(async () => {\n    const chooseInfo = await chooseLocation();\n    setChooseLocationInfo(chooseInfo);\n    show({ content: JSON.stringify(chooseInfo) });\n  }, [chooseLocation, show]);\n\n  const handleStartLocatonUpdate = useCallback(() => {\n    startLocationUpdate().finally((res: General.CallbackResult) => {\n      show({\n        content: res?.errMsg || '\u64cd\u4f5c\u6210\u529f',\n      });\n    });\n  }, [startLocationUpdate, show]);\n\n  const handleStopLocatonUpdate = useCallback(() => {\n    stopLocationUpdate().finally((res: General.CallbackResult) => {\n      show({\n        content: res?.errMsg || '\u64cd\u4f5c\u6210\u529f',\n      });\n    });\n  }, [stopLocationUpdate, show]);\n\n  const handleStartLocationUpdateBackground = useCallback(() => {\n    startLocationUpdateBackground().finally((res: General.CallbackResult) => {\n      show({\n        content: res?.errMsg || '\u64cd\u4f5c\u6210\u529f',\n      });\n    });\n  }, [startLocationUpdateBackground, show]);\n\n  useEffect(() => {\n    if (typeof listenStatus === 'boolean') {\n      if (listenStatus) {\n        onLocationChange(console.log);\n      } else {\n        offLocationChange(console.log);\n      }\n    }\n  }, [listenStatus, onLocationChange, offLocationChange]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\n        \u5f53\u524dhook\u81ea\u52a8\u76d1\u542c\u9875\u9762\u72b6\u6001\u53d8\u5316\u3002\u53ef\u5c1d\u8bd5\u6253\u5f00\u5c0f\u7a0b\u5e8f\u8bbe\u7f6e\u6216\u5207\u6362\u540e\u53f0\u6d4b\u8bd5\u3002\n      </AtNoticebar>\n      <DocPage title=\"useLocation \u5730\u7406\u4f4d\u7f6e\" panelTitle=\"useLocation\">\n        <AtList>\n          {location &&\n            Object.entries(location).map(([key, value]) => (\n              <AtListItem key={key} title={key} note={value as string} />\n            ))}\n        </AtList>\n        <AtButton className=\"gap\" onClick={handleGetLiocation}>\n          \u83b7\u53d6\u5f53\u524d\u5730\u7406\u4fe1\u606f\n        </AtButton>\n        <AtButton onClick={handleChooseLocation}>\u9009\u62e9\u5730\u7406\u4fe1\u606f</AtButton>\n        <AtButton\n          disabled={!location || !chooseLocationInfo}\n          onClick={() => openLocation(chooseLocationInfo)}\n        >\n          \u6253\u5f00\u5730\u56fe\u67e5\u770b\u4fe1\u606f(\u5148\u9009\u62e9)\n        </AtButton>\n        <AtButton className=\"gap\" onClick={() => changeListenStatus(true)}>\n          \u76d1\u542c\u5730\u7406\u4fe1\u606f\u53d8\u5316\n        </AtButton>\n        <AtButton onClick={() => changeListenStatus(false)}>\n          \u53d6\u6d88\u76d1\u542c\u5730\u7406\u4fe1\u606f\u53d8\u5316\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={env === ENV_TYPE.WEB}\n          onClick={handleStartLocatonUpdate}\n        >\n          \u5f00\u542f\u524d\u53f0\u63a5\u6536\u4f4d\u7f6e\n        </AtButton>\n        <AtButton\n          disabled={env === ENV_TYPE.WEB}\n          onClick={handleStopLocatonUpdate}\n        >\n          \u505c\u6b62\u524d\u53f0\u63a5\u6536\u4f4d\u7f6e\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={env === ENV_TYPE.WEB}\n          onClick={handleStartLocationUpdateBackground}\n        >\n          \u5f00\u542f\u540e\u53f0\u63a5\u6536\u4f4d\u7f6e\n        </AtButton>\n      </DocPage>\n    </>\n  );\n};",N=".taro-modal__text {\n  word-break: break-all;\n}\n\n.taro_chooselocation_title {\n  font-size: 0.24rem;\n  line-height: 0.96rem;\n}",L="import React, { useCallback } from 'react';\nimport { AtNoticebar, AtButton } from 'taro-ui';\n\nimport DocPage from '@components/DocPage';\n\nimport { useLogin, useModal } from 'taro-hooks';\n\nexport default () => {\n  const [login, checkSession] = useLogin();\n  const [show] = useModal({ mask: true, title: '\u767b\u5f55\u4fe1\u606f', showCancel: false });\n\n  const handleSession = useCallback(async () => {\n    let message = '\u767b\u5f55\u72b6\u6001\u6b63\u5e38';\n    try {\n      await checkSession();\n    } catch (e) {\n      console.log(e);\n      message = '\u767b\u5f55\u72b6\u6001\u5931\u6548';\n    }\n    show({ content: message });\n  }, [checkSession, show]);\n\n  const handleLogin = useCallback(() => {\n    login(true)\n      .then((code: string) => show({ content: '\u83b7\u53d6\u51ed\u8bc1\u4e3a: ' + code }))\n      .catch(() => {\n        show({ content: '\u83b7\u53d6\u51ed\u8bc1\u5931\u8d25' });\n      });\n  }, [login, show]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\u8be5hook\u4ec5\u5c0f\u7a0b\u5e8f\u53ef\u7528</AtNoticebar>\n      <DocPage title=\"useLogin \u767b\u5f55\" panelTitle=\"useLogin\">\n        <AtButton onClick={handleLogin}>\u83b7\u53d6\u51ed\u8bc1</AtButton>\n        <AtButton className=\"gap\" onClick={handleSession}>\n          \u68c0\u6d4b\u5f53\u524d\u767b\u5f55\u72b6\u6001\n        </AtButton>\n      </DocPage>\n    </>\n  );\n};",M="import React from 'react';\nimport { AtButton, AtNoticebar } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useManualPullDownRefresh, useBackground } from 'taro-hooks';\n\nexport default () => {\n  const [start, stop] = useManualPullDownRefresh();\n  useBackground({ backgroundColor: '#bd5fff', textStyle: 'dark' });\n  return (\n    <>\n      <AtNoticebar marquee>\u8be5hook\u4e0d\u652f\u6301h5\u9884\u89c8</AtNoticebar>\n      <DocPage\n        title=\"useManualPullDownRefresh \u624b\u52a8\u4e0b\u62c9\u5237\u65b0\"\n        panelTitle=\"useManualPullDownRefresh\"\n      >\n        <AtButton onClick={() => start()}>\u5f00\u59cb\u4e0b\u62c9\u5237\u65b0</AtButton>\n        <AtButton className=\"gap\" onClick={() => stop()}>\n          \u7ed3\u675f\u4e0b\u62c9\u5237\u65b0\n        </AtButton>\n        <AtButton onClick={() => start(2000)}>\u5f00\u59cb\u4e0b\u62c9\u5237\u65b02S\u540e\u505c\u6b62</AtButton>\n      </DocPage>\n    </>\n  );\n};",q="import React, { useCallback, useEffect, useState } from 'react';\nimport { AtNoticebar, AtButton } from 'taro-ui';\n\nimport DocPage from '@components/DocPage';\n\nimport { useMap, useLocation, useEnv, useModal } from 'taro-hooks';\nimport { Map, View } from '@tarojs/components';\nimport { ENV_TYPE } from '@tarojs/taro';\n\nconst markers = [\n  {\n    id: 0,\n    latitude: 30.653186,\n    longitude: 104.083735,\n    title: '\u592a\u53e4\u91ccmarker',\n    iconPath: '../../assets/icon/index-select.png',\n  },\n];\n\nexport default () => {\n  const [locationInfo] = useLocation({ type: 'gcj02' });\n  const [\n    mapContext,\n    {\n      getCenterLocation,\n      getRegion,\n      getScale,\n      getRotate,\n      getSkew,\n      includePoints,\n      moveToLocation,\n      translateMarker,\n    },\n  ] = useMap('useMap');\n  const [show] = useModal({ mask: true, title: '\u5730\u56fe\u4fe1\u606f' });\n  const env = useEnv();\n\n  const { longitude, latitude } = locationInfo || {};\n  const supportMap = env && env !== ENV_TYPE.WEB;\n\n  const handleGetCenterPosition = useCallback(async () => {\n    const location = await getCenterLocation();\n    show({ content: JSON.stringify(location) });\n  }, [getCenterLocation, show]);\n\n  const handleGetRegion = useCallback(async () => {\n    const regin = await getRegion();\n    show({ content: JSON.stringify(regin) });\n  }, [getRegion, show]);\n\n  const handleGetScale = useCallback(async () => {\n    const scale = await getScale();\n    show({ content: JSON.stringify(scale) });\n  }, [getScale, show]);\n\n  const handleGetSkew = useCallback(async () => {\n    const skew = await getSkew();\n    show({ content: JSON.stringify(skew) });\n  }, [getSkew, show]);\n\n  const handleGetRotate = useCallback(async () => {\n    const rotate = await getRotate();\n    show({ content: JSON.stringify(rotate) });\n  }, [getRotate, show]);\n\n  const handleIncludePoints = useCallback(async () => {\n    const points = [\n      { latitude: 30.653186, longitude: 104.083735 },\n      { latitude: 30.655546, longitude: 104.0778 },\n    ];\n    const result = await includePoints(points);\n    show({ content: JSON.stringify(result) });\n  }, [includePoints, show]);\n\n  const handleTranslateMarker = useCallback(async () => {\n    await translateMarker({\n      autoRotate: true,\n      markerId: 0,\n      rotate: 0,\n      destination: { latitude: 30.653186, longitude: 104.083735 },\n    });\n    show({ content: 'translateMarker: ok' });\n  }, [translateMarker, show]);\n\n  return (\n    <>\n      <AtNoticebar marquee>useMap \u4ec5\u53ef\u4ee5\u5728\u5c0f\u7a0b\u5e8f\u73af\u5883\u4e2d\u4f7f\u7528</AtNoticebar>\n      <DocPage title=\"useMap \u5730\u56fe\" panelTitle=\"useMap\">\n        {supportMap ? (\n          <Map\n            latitude={latitude}\n            longitude={longitude}\n            showLocation\n            showScale\n            showCompass\n            id=\"useMap\"\n            markers={markers}\n            className=\"demo\"\n            style={{ height: '600rpx' }}\n          />\n        ) : (\n          <View className=\"demo\">\u6682\u4e0d\u652f\u6301Map\u7ec4\u4ef6</View>\n        )}\n        <AtButton\n          className=\"gap\"\n          disabled={!supportMap}\n          onClick={handleGetCenterPosition}\n        >\n          \u83b7\u53d6\u4e2d\u5fc3\u4f4d\u7f6e\n        </AtButton>\n        <AtButton disabled={!supportMap} onClick={handleGetRegion}>\n          \u83b7\u53d6\u89c6\u91ce\u8303\u56f4\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={!supportMap}\n          onClick={handleGetScale}\n        >\n          \u83b7\u53d6\u7f29\u653e\u7ea7\u522b\n        </AtButton>\n        <AtButton disabled={!supportMap} onClick={handleGetRotate}>\n          \u83b7\u53d6\u65cb\u8f6c\u89d2\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={!supportMap}\n          onClick={handleGetSkew}\n        >\n          \u83b7\u53d6\u503e\u659c\u89d2\n        </AtButton>\n        <AtButton disabled={!supportMap} onClick={handleIncludePoints}>\n          \u7f29\u653e\u89c6\u91ce\u5c55\u793a\u6240\u6709\u7ecf\u7eac\u5ea6\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={!supportMap}\n          onClick={() => moveToLocation()}\n        >\n          \u79fb\u81f3\u5f53\u524d\u5b9a\u4f4d\n        </AtButton>\n        <AtButton disabled={!supportMap} onClick={handleTranslateMarker}>\n          \u5e73\u79fbmarker\n        </AtButton>\n      </DocPage>\n    </>\n  );\n};",_="import React from 'react';\nimport { AtNoticebar, AtList, AtListItem } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useMenuButtonBoundingClientRect, useEnv } from 'taro-hooks';\nimport { ENV_TYPE } from '@tarojs/taro';\nimport { Text } from '@tarojs/components';\n\nexport default () => {\n  const env = useEnv();\n  const rect = useMenuButtonBoundingClientRect();\n\n  return (\n    <>\n      <AtNoticebar marquee>\u8be5hook\u4ec5\u5c0f\u7a0b\u5e8f\u4f7f\u7528</AtNoticebar>\n      <DocPage\n        title=\"useMenuButtonBoundingClientRect \u80f6\u56ca\u4f4d\u7f6e\"\n        panelTitle=\"useMenuButtonBoundingClientRect\"\n      >\n        {env === ENV_TYPE.WEAPP ? (\n          <AtList>\n            {Object.entries(rect).map(([key, value]) => (\n              <AtListItem key={key} title={key} note={value as string} />\n            ))}\n          </AtList>\n        ) : (\n          <Text>\u6682\u65e0\u4fe1\u606f</Text>\n        )}\n      </DocPage>\n    </>\n  );\n};",O="import React, { useCallback } from 'react';\nimport { AtButton } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useModal } from 'taro-hooks';\n\nexport default () => {\n  const [show] = useModal({\n    title: 'initial title',\n    content: 'initial content',\n  });\n\n  const showCustomModal = useCallback(() => {\n    show({\n      title: 'taro hooks',\n      content: 'taro hooks \u8fd8\u4e0d\u6233\uff01',\n      showCancel: false,\n      confirmText: '\u786e\u5b9e\uff01',\n      confirmColor: '#4569d4',\n    });\n  }, [show]);\n\n  return (\n    <>\n      <DocPage title=\"useModal \u6a21\u6001\u5bf9\u8bdd\u6846\" panelTitle=\"useModal\">\n        <AtButton onClick={show}>\u5c55\u793a\u5e26\u521d\u59cb\u914d\u7f6eModal</AtButton>\n        <AtButton className=\"gap\" onClick={showCustomModal}>\n          \u5c55\u793a\u65b0\u914d\u7f6eModal\n        </AtButton>\n      </DocPage>\n    </>\n  );\n};",U="import React, { useCallback } from 'react';\nimport { AtButton, AtList, AtListItem } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useMotion, useModal } from 'taro-hooks';\n\nexport default () => {\n  const [motionInfo, { stop, start, addListener, removeListener }] =\n    useMotion(true);\n  const [show] = useModal({\n    title: 'useMotion listen',\n    showCancel: false,\n    confirmText: '\u76d1\u542c\u6210\u529f',\n  });\n\n  const customListen = useCallback(\n    (motion) => {\n      removeListener(customListen);\n      show({\n        content: JSON.stringify(motion),\n      });\n    },\n    [show, removeListener],\n  );\n\n  return (\n    <DocPage title=\"useMotion \u8bbe\u5907\u65b9\u5411\" panelTitle=\"useMotion\">\n      <AtButton onClick={() => addListener(customListen)}>\n        \u589e\u52a0\u4e00\u6b21\u76d1\u542c\u5e76\u53d6\u6d88\n      </AtButton>\n      <AtButton className=\"gap\" onClick={() => stop()}>\n        \u505c\u6b62\u6240\u6709\n      </AtButton>\n      <AtList>\n        {Object.entries(motionInfo).map(([key, value]) => (\n          <AtListItem title={key} key={key} note={value as string} />\n        ))}\n      </AtList>\n    </DocPage>\n  );\n};",Y="import React, { useEffect, useState } from 'react';\n\nimport { AtButton, AtNoticebar } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useNavigationBar, useEnv } from 'taro-hooks';\nimport { ENV_TYPE } from '@tarojs/taro';\nimport Mock from 'mockjs';\n\nexport default () => {\n  const env = useEnv();\n  const [disable, setDisable] = useState<boolean>(true);\n  const [loading, { toggleLoading, setTitle, setColor, hideHomeButton }] =\n    useNavigationBar({\n      loading: true,\n      title: Mock.mock('@name()'),\n      backgroundColor: Mock.mock('@color()'),\n      frontColor: '#ffffff',\n      animation: false,\n    });\n  useEffect(() => {\n    setDisable(env === ENV_TYPE.WEB);\n  }, [env]);\n\n  return (\n    <>\n      {disable && <AtNoticebar marquee>\u8be5Hook\u90e8\u5206\u4e0d\u652f\u6301\u5728h5\u7aef\u4f7f\u7528</AtNoticebar>}\n      <DocPage title=\"useNavigationBar \u5bfc\u822a\u680f\" panelTitle=\"useNavigationBar\">\n        <AtButton disabled={disable} onClick={toggleLoading}>\n          \u5207\u6362\u5bfc\u822a\u680floading\u72b6\u6001\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          onClick={() => setTitle(Mock.mock('@name()'))}\n        >\n          \u8bbe\u7f6e\u5bfc\u822a\u680f\u6807\u9898\n        </AtButton>\n        <AtButton\n          onClick={() =>\n            setColor({\n              backgroundColor: Mock.mock('@color()'),\n              frontColor: '#ffffff',\n              animation: true,\n            })\n          }\n        >\n          \u8bbe\u7f6e\u5bfc\u822a\u680f\u989c\u8272\n        </AtButton>\n        <AtButton disabled={disable} className=\"gap\" onClick={hideHomeButton}>\n          \u9690\u85cf\u8fd4\u56de\u9996\u9875\u6309\u94ae\n        </AtButton>\n      </DocPage>\n    </>\n  );\n};",F="import React, { useCallback, useEffect } from 'react';\nimport { AtMessage, AtRadio, AtNoticebar } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useNetworkType } from 'taro-hooks';\nimport Taro from '@tarojs/taro';\n\nimport 'taro-ui/dist/style/components/icon.scss';\n\nconst networkGroup = ['wifi', '2g', '3g', '4g', '5g', 'unknown', 'none'];\n\nexport default () => {\n  const networkType = useNetworkType();\n\n  const computedNetworkOption = useCallback(() => {\n    return networkGroup.map((type) => ({\n      label: type,\n      value: type,\n      desc: '\u7f51\u7edc\u7c7b\u578b: ' + type,\n      disabled: type !== networkType,\n    }));\n  }, [networkType]);\n\n  const handleRadioClick = useCallback((type) => {\n    Taro.atMessage({\n      message: '\u5f53\u524d\u7f51\u7edc\u7c7b\u578b\u4e3a: ' + type,\n      type: 'info',\n    });\n  }, []);\n\n  useEffect(() => {\n    if (networkType) handleRadioClick(networkType);\n  }, [handleRadioClick, networkType]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\n        \u5f53\u524dhook\u81ea\u52a8\u76d1\u542c\u7f51\u7edc\u7c7b\u578b\u53d8\u5316\u3002\u53ef\u5c1d\u8bd5\u66f4\u6539\u8bbe\u5907\u7f51\u7edc\u7c7b\u578b\u6d4b\u8bd5\u3002\n      </AtNoticebar>\n      <AtMessage />\n      <DocPage title=\"useNetworkType \u7f51\u7edc\u7c7b\u578b\" panelTitle=\"useNetworkType\">\n        <AtRadio\n          options={computedNetworkOption()}\n          value={networkType}\n          onClick={(value) => handleRadioClick(value)}\n        />\n      </DocPage>\n    </>\n  );\n};",W="import React, { useCallback, useEffect } from 'react';\nimport { AtMessage, AtSwitch, AtNoticebar } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useOnline } from 'taro-hooks';\nimport Taro from '@tarojs/taro';\n\nimport 'taro-ui/dist/style/components/icon.scss';\n\nexport default () => {\n  const online = useOnline();\n\n  const handleOnlineStatusChange = useCallback((status) => {\n    Taro.atMessage({\n      message: '\u5f53\u524d\u7f51\u7edc\u72b6\u6001\u4e3a: ' + (status ? '\u5f00\u542f' : '\u5173\u95ed'),\n      type: 'info',\n    });\n  }, []);\n\n  useEffect(() => {\n    if (typeof online === 'boolean') handleOnlineStatusChange(online);\n  }, [online, handleOnlineStatusChange]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\n        \u5f53\u524dhook\u81ea\u52a8\u76d1\u542c\u7f51\u7edc\u72b6\u6001\u53d8\u5316\u3002\u53ef\u5c1d\u8bd5\u66f4\u6539\u8bbe\u5907\u7f51\u7edc\u72b6\u6001\u6d4b\u8bd5\u3002\n      </AtNoticebar>\n      <AtMessage />\n      <DocPage title=\"useOnline \u7f51\u7edc\u72b6\u6001\" panelTitle=\"useOnline\">\n        <AtSwitch title=\"\u5f53\u524d\u7f51\u7edc\u72b6\u6001\" checked={online} disabled />\n      </DocPage>\n    </>\n  );\n};",Z="import React, { useEffect, useState } from 'react';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nimport { usePromise } from 'taro-hooks';\nimport Taro, { General } from '@tarojs/taro';\n\nexport default () => {\n  const makePhoneCallPromise = usePromise(\n    { phoneNumber: '132111' },\n    'makePhoneCall',\n  );\n\n  useEffect(() => {\n    makePhoneCallPromise\n      .then((res: General.CallbackResult) => {\n        Taro.showModal({\n          content: '\u62e8\u53f7\u6210\u529f',\n        });\n      })\n      .catch((e: any) => {\n        Taro.showModal({\n          content: e.errMsg,\n        });\n      })\n      .finally((res: General.CallbackResult) => {\n        console.log(res);\n      });\n  }, [makePhoneCallPromise]);\n\n  return (\n    <>\n      <DocPage title=\"usePromise \u5f02\u6b65\" panelTitle=\"usePromise\">\n        <View>\u8bf7\u89c2\u5bdf\u662f\u5426\u540a\u8d77\u901a\u8bdd</View>\n      </DocPage>\n    </>\n  );\n};",z="import React from 'react';\nimport Mock from 'mockjs';\nimport { useRequest } from 'taro-hooks';\n\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nfunction getUsername(): Promise<string> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      // \u517c\u5bb9\u5c0f\u7a0b\u5e8f\u5199\u6cd5\n      resolve(Mock.mock('@name()'));\n    }, 1000);\n  });\n}\n\nconst DefaultRequest = () => {\n  const { data, error, loading } = useRequest(getUsername);\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u9ed8\u8ba4\u8bf7\u6c42\">\n      {error ? (\n        <View>failed to load</View>\n      ) : loading ? (\n        'loading...'\n      ) : (\n        <View>Username: {data}</View>\n      )}\n    </DocPage>\n  );\n};\n\nexport default DefaultRequest;",G="import React, { useState } from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Taro from '@tarojs/taro';\n\nimport { AtMessage, AtInput, AtButton } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport 'taro-ui/dist/style/components/icon.scss';\n\ntype Result = { success: boolean };\n\nfunction changeUsername(username: string): Promise<Result> {\n  console.log(username);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({ success: true });\n    }, 1000);\n  });\n}\n\nconst ManualRequest = () => {\n  const [state, setState] = useState('');\n\n  const { loading, run } = useRequest(changeUsername, {\n    manual: true,\n    onSuccess: (result: Result, params: string[]) => {\n      if (result.success) {\n        setState('');\n        Taro.atMessage({\n          message: `The username was changed to \"${params[0]}\" !`,\n        });\n      }\n    },\n  });\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u624b\u52a8\u89e6\u53d1\">\n      <AtMessage />\n      <AtInput\n        name=\"username\"\n        onChange={(e) => setState(e as string)}\n        value={state}\n        placeholder=\"Please enter username\"\n      />\n      <AtButton type=\"primary\" loading={loading} onClick={() => run(state)}>\n        {loading ? 'loading' : 'Edit'}\n      </AtButton>\n    </DocPage>\n  );\n};\n\nexport default ManualRequest;",J="import React from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\nimport { AtButton } from 'taro-ui';\n\nfunction getUsername(): Promise<string> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock('@name()'));\n    }, 1000);\n  });\n}\n\nexport default () => {\n  const { data, loading, run, cancel } = useRequest(getUsername, {\n    pollingInterval: 1000,\n    pollingWhenHidden: false,\n  });\n\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u8f6e\u8be2\">\n      <View>Username: {loading ? 'loading' : data}</View>\n      <AtButton type=\"primary\" onClick={run} customStyle={{ margin: '10px 0' }}>\n        start\n      </AtButton>\n      <AtButton type=\"secondary\" onClick={cancel}>\n        stop\n      </AtButton>\n    </DocPage>\n  );\n};",Q="import React from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Taro from '@tarojs/taro';\n\nimport { AtMessage, AtButton } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nimport 'taro-ui/dist/style/components/icon.scss';\n\ntype Result = { success: boolean };\n\nexport function deleteUser(userId: string): Promise<Result> {\n  console.log(userId);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({ success: true });\n    }, 1000);\n  });\n}\n\nconst ConcurrentRequest = () => {\n  const { run, fetches } = useRequest(deleteUser, {\n    manual: true,\n    fetchKey: (id: string) => id,\n    onSuccess: (result: Result, params: string[]) => {\n      if (result.success) {\n        Taro.atMessage({ message: `Disabled user ${params[0]}` });\n      }\n    },\n  });\n\n  const users = [\n    { id: '1', username: 'A' },\n    { id: '2', username: 'B' },\n    { id: '3', username: 'C' },\n  ];\n\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u5e76\u884c\u8bf7\u6c42\">\n      <AtMessage />\n      <View>You can click all buttons, each request has its own status.</View>\n      {users.map(({ id, username }) => (\n        <AtButton\n          key={id}\n          type=\"primary\"\n          loading={fetches[id]?.loading}\n          onClick={() => run(id)}\n          disabled={fetches[id]?.loading}\n          customStyle={{ marginTop: '10px' }}\n        >\n          {fetches[id]?.loading ? 'loading' : `delete ${username}`}\n        </AtButton>\n      ))}\n    </DocPage>\n  );\n};\n\nexport default ConcurrentRequest;",K="import React from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nfunction getUserId(): Promise<number> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1011);\n    }, 1000);\n  });\n}\n\nfunction getUsername(id: number): Promise<string> {\n  console.log('user id:', id);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock('@name()'));\n    }, 1000);\n  });\n}\n\nconst ReadyRequest = () => {\n  const userIdRequest = useRequest(getUserId);\n\n  const usernameRequest = useRequest(() => getUsername(userIdRequest.data), {\n    ready: !!userIdRequest.data,\n  });\n\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u4f9d\u8d56\u8bf7\u6c42\">\n      <View>\n        UserId: {userIdRequest.loading ? 'loading' : userIdRequest.data}\n      </View>\n      <View>\n        Username: {usernameRequest.loading ? 'loading' : usernameRequest.data}\n      </View>\n    </DocPage>\n  );\n};\n\nexport default ReadyRequest;",H="import React, { useEffect, useState } from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nimport { AtInput, AtList, AtListItem } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nasync function getEmail(search: string): Promise<string[]> {\n  console.log(search);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock({ 'data|5': ['@email()'] }).data);\n    }, 300);\n  });\n}\n\nconst DebounceRequest = () => {\n  const { data, loading, run } = useRequest(getEmail, {\n    debounceInterval: 500,\n    manual: true,\n  });\n\n  const [value, setValue] = useState<string>();\n\n  useEffect(() => {\n    value && run(value);\n  }, [value, run]);\n\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u9632\u6296\">\n      <View>Enter quickly to see the effect</View>\n      <AtInput\n        name=\"email\"\n        value={value}\n        onChange={(e) => setValue(e as string)}\n        placeholder=\"Select Emails\"\n      />\n      {loading ? (\n        <View>loading...</View>\n      ) : (\n        <AtList>\n          {data && data.map((i: string) => <AtListItem key={i} title={i} />)}\n        </AtList>\n      )}\n    </DocPage>\n  );\n};\n\nexport default DebounceRequest;",$="import React, { useState, useEffect } from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nimport { AtInput, AtList, AtListItem } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nasync function getEmail(search: string): Promise<string[]> {\n  console.log(search);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock({ 'data|5': ['@email()'] }).data);\n    }, 300);\n  });\n}\n\nconst ThrottleRequest = () => {\n  const { data, loading, run } = useRequest(getEmail, {\n    throttleInterval: 500,\n    manual: true,\n  });\n\n  const [value, setValue] = useState<string>();\n\n  useEffect(() => {\n    value && run(value);\n  }, [value, run]);\n\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u8282\u6d41\">\n      <View>Enter quickly to see the effect</View>\n      <AtInput\n        name=\"email\"\n        value={value}\n        onChange={(e) => setValue(e as string)}\n        placeholder=\"Select Emails\"\n      />\n      {loading ? (\n        <View>loading...</View>\n      ) : (\n        <AtList>\n          {data && data.map((i: string) => <AtListItem key={i} title={i} />)}\n        </AtList>\n      )}\n    </DocPage>\n  );\n};\n\nexport default ThrottleRequest;",X="import React, { useState } from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nimport { AtButton } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nasync function getArticle(): Promise<{ data: string; time: number }> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@cparagraph(10, 20)'),\n        time: new Date().getTime(),\n      });\n    }, 1000);\n  });\n}\n\nconst Article = () => {\n  const { data, loading } = useRequest(getArticle, {\n    cacheKey: 'article',\n  });\n  if (!data && loading) {\n    return <View>loading</View>;\n  }\n  return (\n    <>\n      <View>Latest request time: {data?.time}</View>\n      <View>{data?.data}</View>\n    </>\n  );\n};\n\nconst CacheKeyRequest = () => {\n  const [state, setState] = useState<boolean>(false);\n\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u7f13\u5b58 & SWR\">\n      <View>\n        You can click the button multiple times, the article component will show\n        the cached data first.\n      </View>\n      <AtButton\n        type=\"primary\"\n        onClick={() => setState(!state)}\n        customStyle={{ marginTop: '10px' }}\n      >\n        show/hidden\n      </AtButton>\n      {state && <Article />}\n    </DocPage>\n  );\n};\n\nexport default CacheKeyRequest;",ee="import React, { useEffect, useState } from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nimport { AtButton } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nasync function getArticle(): Promise<{ data: string; time: number }> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@cparagraph(10, 20)'),\n        time: new Date().getTime(),\n      });\n    }, 1000);\n  });\n}\n\nconst Article = () => {\n  const { data, loading } = useRequest(getArticle, {\n    cacheKey: 'article',\n  });\n  if (!data && loading) {\n    return <View>loading</View>;\n  }\n  return (\n    <>\n      <View>Latest request time: {data?.time}</View>\n      <View>{data?.data}</View>\n    </>\n  );\n};\n\nconst PreloadRequest = () => {\n  const [state, setState] = useState<boolean>(false);\n  const { run } = useRequest(getArticle, {\n    cacheKey: 'article',\n    manual: true,\n  });\n\n  useEffect(() => {\n    if (!state) {\n      run();\n    }\n  }, [state, run]);\n\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u9884\u52a0\u8f7d\">\n      <View>When the article hidden, the article data is preloaded.</View>\n      <AtButton\n        type=\"primary\"\n        onClick={() => setState(!state)}\n        customStyle={{ marginTop: '10px' }}\n      >\n        show/hidden\n      </AtButton>\n      {state && <Article />}\n    </DocPage>\n  );\n};\n\nexport default PreloadRequest;",ne="import React from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nimport { View } from '@tarojs/components';\nimport { AtActivityIndicator } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport 'taro-ui/dist/style/components/loading.scss';\n\nfunction getUsername(): Promise<string> {\n  const userInfo = Mock.mock('@name()');\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(userInfo);\n    }, 1000);\n  });\n}\n\nconst RefreshOnWindowFocusRequest = () => {\n  const { data, loading } = useRequest(getUsername, {\n    refreshOnWindowFocus: true,\n  });\n\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u5c4f\u5e55\u805a\u7126\u91cd\u65b0\u8bf7\u6c42\">\n      <View>\n        You can try to click elsewhere and click back to try. (Or hide the page\n        and show it again)\n      </View>\n      <AtActivityIndicator\n        mode=\"center\"\n        isOpened={loading}\n      ></AtActivityIndicator>\n      <View>Username: {data}</View>\n    </DocPage>\n  );\n};\n\nexport default RefreshOnWindowFocusRequest;",te="import React, { useState } from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nimport { AtInput, AtButton } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nimport 'taro-ui/dist/style/components/icon.scss';\n\nfunction getUsername(): Promise<string> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock('@name()'));\n    }, 1000);\n  });\n}\n\nconst MutateRequest = () => {\n  const [state, setState] = useState('');\n  const { data, mutate, loading } = useRequest(getUsername, {\n    onSuccess: (result: string) => {\n      setState(result);\n    },\n  });\n\n  return (\n    <DocPage title=\"useRequest \u8bf7\u6c42\" panelTitle=\"\u7a81\u53d8\">\n      <View>username: {data}</View>\n      <AtInput\n        name=\"username\"\n        onChange={(e) => setState(e as string)}\n        value={state}\n        placeholder=\"Please enter username\"\n      />\n      <AtButton type=\"primary\" loading={loading} onClick={() => mutate(state)}>\n        {loading ? 'loading' : 'Edit'}\n      </AtButton>\n    </DocPage>\n  );\n};\n\nexport default MutateRequest;",oe="import React from 'react';\nimport { useRequest } from 'taro-hooks';\n\nimport { AtButton } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nasync function getCurrentTime(): Promise<number> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(new Date().getTime());\n    }, 100);\n  });\n}\n\nconst LoadingDelayRequest = () => {\n  const getTimeAction = useRequest(getCurrentTime);\n\n  const withLoadingDelayAction = useRequest(getCurrentTime, {\n    loadingDelay: 200,\n  });\n\n  const trigger = () => {\n    getTimeAction.run();\n    withLoadingDelayAction.run();\n  };\n\n  return (\n    <DocPage title=\"useRequest loading Delay\" panelTitle=\"loading Delay\">\n      <View>\n        loadingDelay can set delay loading, which can effectively prevent\n        loading from flickering.\n      </View>\n      <AtButton\n        type=\"primary\"\n        onClick={trigger}\n        customStyle={{ margin: '10px 0' }}\n      >\n        run\n      </AtButton>\n      <View style={{ marginBottom: '10px' }}>\n        Current Time: {getTimeAction.loading ? 'loading' : getTimeAction.data}\n      </View>\n      <View>\n        Current Time:{' '}\n        {withLoadingDelayAction.loading\n          ? 'loading'\n          : withLoadingDelayAction.data}\n      </View>\n    </DocPage>\n  );\n};\n\nexport default LoadingDelayRequest;",re="import React, { useState } from 'react';\nimport { useRequest } from 'taro-hooks';\n\nimport { AtButton, AtActionSheet, AtActionSheetItem } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nconst userSchool = (id: string) => {\n  switch (id) {\n    case '1':\n      return 'Tsinghua University';\n    case '2':\n      return 'Beijing University';\n    case '3':\n      return 'Zhejiang University';\n    default:\n      return '';\n  }\n};\n\nasync function getUserSchool(userId: string): Promise<string> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(userSchool(userId));\n    }, 1000);\n  });\n}\n\nconst RefreshDepsRequest = () => {\n  const [userId, setUserId] = useState('1');\n  const [isOpened, changeIsOpened] = useState<boolean>(false);\n  const { data, loading } = useRequest(() => getUserSchool(userId), {\n    refreshDeps: [userId],\n  });\n\n  return (\n    <DocPage title=\"useRequest refreshDeps\" panelTitle=\"refreshDeps\">\n      <AtButton\n        type=\"primary\"\n        onClick={() => changeIsOpened(true)}\n        customStyle={{ margin: '10px 0' }}\n      >\n        \u70b9\u51fb\u66f4\u6539userId: {userId}\n      </AtButton>\n      <View>School: {loading ? 'loading' : data}</View>\n      <AtActionSheet isOpened={isOpened} onClose={() => changeIsOpened(false)}>\n        {['1', '2', '3'].map((v) => (\n          <AtActionSheetItem\n            onClick={() => {\n              setUserId(v);\n              changeIsOpened(false);\n            }}\n            key={v}\n          >\n            user {v}\n          </AtActionSheetItem>\n        ))}\n      </AtActionSheet>\n    </DocPage>\n  );\n};\n\nexport default RefreshDepsRequest;",se="import React from 'react';\nimport { useRequest } from 'taro-hooks';\n\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nconst FetchRequest = () => {\n  const { data, error, loading } = useRequest(\n    'https://run.mocky.io/v3/cd8e3926-740c-4a2c-ab80-45c0c4fe8dd2',\n  );\n\n  return (\n    <DocPage title=\"useRequest \u9ed8\u8ba4\u8bf7\u6c42\u5e93\" panelTitle=\"\u9ed8\u8ba4\u8bf7\u6c42\u5e93\">\n      <View>\n        {error\n          ? 'failed to load'\n          : loading\n          ? 'loading...'\n          : 'responese:' + JSON.stringify(data?.data)}\n      </View>\n    </DocPage>\n  );\n};\n\nexport default FetchRequest;",ae="import React from 'react';\nimport { useRequest } from 'taro-hooks';\nimport axios from 'axios/dist/axios.min.js';\nimport adapter from 'axios-miniprogram-adapter';\n\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nconst requestMethod = axios.create(\n  process.env.TARO_ENV === 'h5'\n    ? {}\n    : {\n        adapter,\n      },\n);\n\nconst MethodRequest = () => {\n  const { data, error, loading } = useRequest(\n    'https://run.mocky.io/v3/cd8e3926-740c-4a2c-ab80-45c0c4fe8dd2',\n    {\n      requestMethod: (param: any) => requestMethod(param),\n    },\n  );\n\n  return (\n    <DocPage title=\"useRequest requstMethod\" panelTitle=\"requstMethod\">\n      <View>\n        {error\n          ? 'failed to load'\n          : loading\n          ? 'loading...'\n          : 'responese:' + JSON.stringify(data?.data)}\n      </View>\n    </DocPage>\n  );\n};\n\nexport default MethodRequest;",ie="import React from 'react';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nimport { View } from '@tarojs/components';\nimport { AtList, AtListItem, AtPagination } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\ninterface UserListItem {\n  id: string;\n  name: string;\n  gender: 'male' | 'female';\n  email: string;\n  disabled: boolean;\n}\n\nconst userList = (current: number, pageSize: number) =>\n  Mock.mock({\n    total: 55,\n    [`list|${pageSize}`]: [\n      {\n        id: '@guid()',\n        name: '@cname()',\n        'gender|1': ['male', 'female'],\n        email: '@email()',\n        disabled: false,\n      },\n    ],\n  });\n\nasync function getUserList(params: {\n  current: number;\n  pageSize: number;\n  gender?: string;\n}): Promise<{ total: number; list: UserListItem[] }> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(userList(params.current, params.pageSize));\n    }, 1000);\n  });\n}\n\nconst PaginationRequest = () => {\n  const { data, loading, pagination } = useRequest(\n    ({ current, pageSize }: { current: number; pageSize: number }) =>\n      getUserList({ current, pageSize }),\n    {\n      paginated: true,\n    },\n  );\n\n  return (\n    <DocPage title=\"useRequest \u666e\u901a\u5206\u9875\" panelTitle=\"\u666e\u901a\u5206\u9875\">\n      {loading ? (\n        <View>loading...</View>\n      ) : (\n        <AtList>\n          {data?.list?.map(({ email, name }: UserListItem) => (\n            <AtListItem title={name} note={email} key={name} />\n          ))}\n        </AtList>\n      )}\n\n      <AtPagination\n        customStyle={{ marginTop: '10px' }}\n        {...pagination}\n        onPageChange={({\n          type,\n          current,\n        }: {\n          type: string;\n          current: number;\n        }) => {\n          pagination.onChange(current, 10);\n        }}\n      />\n    </DocPage>\n  );\n};\n\nexport default PaginationRequest;",ce="import React, { useState } from 'react';\nimport { useBoolean, useUpdateEffect } from 'ahooks';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nimport { View } from '@tarojs/components';\nimport {\n  AtList,\n  AtListItem,\n  AtPagination,\n  AtActionSheet,\n  AtActionSheetItem,\n  AtButton,\n} from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\ninterface UserListItem {\n  id: string;\n  name: string;\n  gender: 'male' | 'female';\n  email: string;\n  disabled: boolean;\n}\n\nconst userList = (current: number, pageSize: number) =>\n  Mock.mock({\n    total: 55,\n    [`list|${pageSize}`]: [\n      {\n        id: '@guid()',\n        name: '@cname()',\n        'gender|1': ['male', 'female'],\n        email: '@email()',\n        disabled: false,\n      },\n    ],\n  });\n\nasync function getUserList(params: {\n  current: number;\n  pageSize: number;\n  gender?: string;\n}): Promise<{ total: number; list: UserListItem[] }> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(userList(params.current, params.pageSize));\n    }, 1000);\n  });\n}\n\nconst PaginationRequest = () => {\n  const [state, { toggle }] = useBoolean();\n  const [visible, { setFalse, setTrue }] = useBoolean();\n  const { params, run, data, loading, pagination } = useRequest(\n    (paginationObj: any, gender?: string) =>\n      getUserList({ ...paginationObj, gender }),\n    {\n      cacheKey: 'paginationDemo',\n      paginated: true,\n    },\n  );\n\n  const [gender, setGender] = useState<string>(params[1]);\n\n  useUpdateEffect(() => {\n    // reload when gender change\n    run(\n      {\n        current: 1,\n        pageSize: 10,\n      },\n      gender,\n    );\n  }, [gender]);\n\n  return (\n    <DocPage\n      title=\"useRequest \u5e26\u7f13\u5b58\u7684 Pagination\"\n      panelTitle=\"\u5e26\u7f13\u5b58\u7684 Pagination\"\n    >\n      <View>\n        You can click the button multiple times, the conditions of pagination\n        will be cached.\n      </View>\n      <AtButton\n        customStyle={{ margin: '10px 0' }}\n        type=\"primary\"\n        onClick={() => toggle()}\n      >\n        show/hidden\n      </AtButton>\n      {state && (\n        <>\n          <AtButton onClick={setTrue}>{gender || 'male'}</AtButton>\n          {loading ? (\n            <View>loading...</View>\n          ) : (\n            <AtList>\n              {data?.list?.map(({ email, name }: UserListItem) => (\n                <AtListItem title={name} note={email} key={name} />\n              ))}\n            </AtList>\n          )}\n\n          <AtPagination\n            customStyle={{ marginTop: '10px' }}\n            {...pagination}\n            onPageChange={({\n              type,\n              current,\n            }: {\n              type: string;\n              current: number;\n            }) => {\n              pagination.onChange(current, 10);\n            }}\n          />\n        </>\n      )}\n\n      <AtActionSheet isOpened={visible} onClose={setFalse}>\n        {['male', 'female'].map((value) => (\n          <AtActionSheetItem\n            key={value}\n            onClick={() => {\n              setGender(value);\n              setFalse();\n            }}\n          >\n            {value}\n          </AtActionSheetItem>\n        ))}\n      </AtActionSheet>\n    </DocPage>\n  );\n};\n\nexport default PaginationRequest;",ue="import React, { useState } from 'react';\nimport { useRequest } from 'taro-hooks';\n\nimport { View } from '@tarojs/components';\nimport { AtButton, AtList, AtListItem } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\ninterface Item {\n  id?: string;\n  name: string;\n}\n\ninterface Result {\n  list: Item[];\n  nextId: string | undefined;\n}\n\nconst resultData = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nexport async function getLoadMoreList(\n  nextId: any,\n  limit: any,\n): Promise<Result> {\n  let start = 0;\n  if (nextId) {\n    start = resultData.findIndex((i) => i === nextId);\n  }\n  const end = start + limit;\n  const list = resultData.slice(start, end).map((id) => ({\n    id,\n    name: `project ${id} (server time: ${Date.now()})`,\n  }));\n  const nId = resultData.length >= end ? resultData[end] : undefined;\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        list,\n        nextId: nId,\n      });\n    }, 1000);\n  });\n}\n\nconst LoadMoreRequest = () => {\n  const [state, setState] = useState<boolean>(false);\n\n  const { data, loading, loadMore, loadingMore } = useRequest(\n    (d: Result | undefined) => getLoadMoreList(d?.nextId, 3),\n    {\n      loadMore: true,\n      cacheKey: 'loadMoreDemoCacheId',\n    },\n  );\n\n  return (\n    <DocPage title=\"useRequest \u666e\u901a\u52a0\u8f7d\u66f4\u591a\" panelTitle=\"\u666e\u901a\u52a0\u8f7d\u66f4\u591a\">\n      <View>\n        You can click the button multiple times, the loadmore will be cached.\n      </View>\n      <AtButton\n        customStyle={{ margin: '10px 0' }}\n        onClick={() => setState(!state)}\n      >\n        show/hidden\n      </AtButton>\n      {state && (\n        <>\n          {loading ? (\n            <View>loading....</View>\n          ) : (\n            <AtList>\n              {data?.list?.map(({ id, name }: Item) => (\n                <AtListItem key={id} title={id} note={name} />\n              ))}\n            </AtList>\n          )}\n          {loadingMore ? (\n            <View>loading more...</View>\n          ) : (\n            <AtButton onClick={loadMore} disabled={!data?.nextId}>\n              {data?.nextId ? 'click to load more' : 'no more'}\n            </AtButton>\n          )}\n        </>\n      )}\n    </DocPage>\n  );\n};\n\nexport default LoadMoreRequest;",le="import React, { useRef } from 'react';\nimport { useRequest } from 'taro-hooks';\n\nimport { View, ScrollView } from '@tarojs/components';\nimport { AtButton, AtList, AtListItem } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport type { Item, Result } from './type';\nimport dataSource from './data';\n\nconst asyncFn = ({ pageSize, offset }: any): Promise<Result> =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        total: dataSource.length,\n        list: dataSource.slice(offset, offset + pageSize),\n      });\n    }, 1000);\n  });\n\nconst LoadMoreRequest = () => {\n  const containerRef = useRef<HTMLTaroScrollViewCoreElement>(null);\n  const { data, loading, loadingMore, reload, loadMore, noMore } = useRequest(\n    (d: Result | undefined) =>\n      asyncFn({\n        offset: d?.list?.length || 0,\n        pageSize: 3,\n      }),\n    {\n      loadMore: true,\n      ref: containerRef,\n      isNoMore: (d: any) => (d ? d.list.length >= d.total : false),\n    },\n  );\n\n  const { list = [] } = data || {};\n\n  return (\n    <DocPage title=\"useRequest \u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a\" panelTitle=\"\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a\">\n      <ScrollView\n        ref={containerRef}\n        style={{ height: '250px' }}\n        scrollY\n        scrollWithAnimation\n      >\n        <AtButton customStyle={{ margin: '10px 0' }} onClick={reload}>\n          {loading ? 'loading' : 'Reload'}\n        </AtButton>\n\n        <AtList>\n          {list?.map(({ id, title }: Item) => (\n            <AtListItem key={id} title={title} />\n          ))}\n        </AtList>\n        {!noMore && (\n          <AtButton onClick={loadMore} disabled={loadingMore}>\n            {loadingMore ? 'Loading more...' : 'Click to load more'}\n          </AtButton>\n        )}\n        {noMore && <View>No more data</View>}\n        <View style={{ textAlign: 'center', fontSize: 15 }}>\n          total: {data?.total}\n        </View>\n      </ScrollView>\n    </DocPage>\n  );\n};\n\nexport default LoadMoreRequest;",pe="export default [\n  {\n    id: 1,\n    title: 'taro hooks title 1',\n  },\n  {\n    id: 2,\n    title: 'taro hooks title 2',\n  },\n  {\n    id: 3,\n    title: 'taro hooks title 3',\n  },\n  {\n    id: 4,\n    title: 'taro hooks title 4',\n  },\n  {\n    id: 5,\n    title: 'taro hooks title 5',\n  },\n  {\n    id: 6,\n    title: 'taro hooks title 6',\n  },\n  {\n    id: 7,\n    title: 'taro hooks title 7',\n  },\n  {\n    id: 8,\n    title: 'taro hooks title 8',\n  },\n  {\n    id: 9,\n    title: 'taro hooks title 9',\n  },\n  {\n    id: 10,\n    title: 'taro hooks title 10',\n  },\n];",me="import React, { useCallback } from 'react';\nimport { AtNoticebar, AtButton } from 'taro-ui';\n\nimport DocPage from '@components/DocPage';\n\nimport { useModal, useRequestSubscribeMessage } from 'taro-hooks';\n\nexport default () => {\n  const [show] = useModal({ mask: true, title: '\u8ba2\u9605\u6d88\u606f', showCancel: false });\n  const [requestSubscribeMessage] = useRequestSubscribeMessage();\n\n  const handleRequestSubscribeMessage = useCallback(async () => {\n    let content = '\u8ba2\u9605\u6210\u529f!';\n    const subscribeId = 'jeNEwprDztjgwq0BI1raBmcJ7Sw1ldt-8lRi-7jXeyY';\n    try {\n      const { [subscribeId]: result } = await requestSubscribeMessage([\n        subscribeId,\n      ]);\n      if (result !== 'accept') {\n        content = '\u8ba2\u9605\u5931\u8d25';\n      }\n    } catch (e) {\n      content = '\u8ba2\u9605\u5931\u8d25';\n    }\n    show({ content });\n  }, [requestSubscribeMessage, show]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\u8be5hook\u4ec5\u53ef\u5728\u5c0f\u7a0b\u5e8f\u7aef\u4f7f\u7528</AtNoticebar>\n      <DocPage\n        title=\"useRequestSubscribeMessage \u8ba2\u9605\u6d88\u606f\"\n        panelTitle=\"useRequestSubscribeMessage\"\n      >\n        <AtButton onClick={handleRequestSubscribeMessage}>\u8ba2\u9605\u6d88\u606f</AtButton>\n      </DocPage>\n    </>\n  );\n};",de="import React from 'react';\nimport { AtButton, AtNoticebar, AtCard } from 'taro-ui';\nimport DocPage from '@components/DocPage';\nimport { View } from '@tarojs/components';\n\nimport { useRouter, useEnv } from 'taro-hooks';\nimport { ENV_TYPE } from '@tarojs/taro';\n\nexport default () => {\n  const env = useEnv();\n  const [\n    routeInfo,\n    { switchTab, relaunch, redirectTo, navigateTo, navigateBack },\n  ] = useRouter();\n\n  return (\n    <>\n      <AtNoticebar marquee>\n        \u7531\u4e8e\u6587\u6863\u65e0\u8def\u7531\u8f93\u51fa\u3002\u6545\u79fb\u6b65\u5c0f\u7a0b\u5e8f\u4f53\u9a8c\u6216\u4e0b\u8f7d\u5305\u8fdb\u884c\u4f53\u9a8c\u3002\n      </AtNoticebar>\n      <DocPage title=\"useRouter \u8def\u7531\" panelTitle=\"useRouter\">\n        <AtButton\n          disabled={env === ENV_TYPE.WEB}\n          onClick={() => switchTab('/pages/about/index')}\n        >\n          \u8df3\u8f6cTabBar\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={env === ENV_TYPE.WEB}\n          onClick={() => relaunch('/pages/useRequest/index')}\n        >\n          \u91cd\u65b0\u6253\u5f00\u4e00\u4e2a\u9875\u9762\n        </AtButton>\n        <AtButton\n          disabled={env === ENV_TYPE.WEB}\n          onClick={() => redirectTo('/pages/useOnline/index')}\n        >\n          \u91cd\u5b9a\u5411\u9875\u9762\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={env === ENV_TYPE.WEB}\n          onClick={() =>\n            navigateTo('/pages/useLaunchOptions/index', { from: 'useRoute' })\n          }\n        >\n          \u8df3\u8f6c\u9875\u9762\n        </AtButton>\n        <AtButton\n          disabled={env === ENV_TYPE.WEB}\n          onClick={() => navigateBack()}\n        >\n          \u8fd4\u56de\u4e0a\u4e00\u9875\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={env === ENV_TYPE.WEB}\n          onClick={() => navigateTo(true, { appId: 'wxce815e33b0e06cf5' })}\n        >\n          \u8df3\u8f6c\u5c0f\u7a0b\u5e8f\n        </AtButton>\n        <AtButton\n          disabled={env === ENV_TYPE.WEB}\n          onClick={() => navigateBack(true)}\n        >\n          \u8fd4\u56de\u5c0f\u7a0b\u5e8f\n        </AtButton>\n        {env !== ENV_TYPE.WEB && (\n          <View>\n            routeInfo:\n            <View style={{ wordBreak: 'break-all' }}>\n              {JSON.stringify(routeInfo)}\n            </View>\n          </View>\n        )}\n      </DocPage>\n    </>\n  );\n};",fe="import React, { useCallback } from 'react';\nimport { AtButton, AtNoticebar } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { scanCode } from '@tarojs/taro';\nimport { useScanCode, useModal } from 'taro-hooks';\n\nexport default () => {\n  const [show] = useModal({ mask: true, title: '\u626b\u7801\u7ed3\u679c', showCancel: false });\n  const [scan, cameraScan] = useScanCode();\n\n  const handleScan = useCallback(\n    (scanType?: keyof scanCode.ScanType) => {\n      scan({ scanType }).then((res: scanCode.SuccessCallbackResult) => {\n        show({ content: JSON.stringify(res) });\n      });\n    },\n    [scan, show],\n  );\n\n  const handleCameraScan = useCallback(() => {\n    cameraScan().then((res: scanCode.SuccessCallbackResult) => {\n      show({ content: JSON.stringify(res) });\n    });\n  }, [cameraScan, show]);\n\n  return (\n    <>\n      <AtNoticebar marquee>h5\u7aef\u626b\u7801\u4ec5\u5728\u5fae\u4fe1\u516c\u4f17\u53f7\u5185\u53ef\u7528</AtNoticebar>\n      <DocPage title=\"useScanCode \u626b\u7801\" panelTitle=\"useScanCode\">\n        <AtButton onClick={() => handleScan()}>\u666e\u901a\u626b\u7801</AtButton>\n        <AtButton className=\"gap\" onClick={handleCameraScan}>\n          \u76f8\u673a\u626b\u7801\n        </AtButton>\n        <AtButton onClick={() => handleScan('qrCode')}>\u626b\u4e8c\u7ef4\u7801</AtButton>\n      </DocPage>\n    </>\n  );\n};",he="import React, { useCallback } from 'react';\nimport { AtList, AtListItem } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useEnv } from 'taro-hooks';\nimport { navigateTo, ENV_TYPE } from '@tarojs/taro';\n\nconst renderList = [\n  'getBoundingClientRect',\n  'getContext',\n  'getFields',\n  'getNode',\n  'getScrollOffset',\n];\n\nexport default () => {\n  const env = useEnv();\n  const navigate = useCallback(\n    (route) => {\n      env === ENV_TYPE.WEAPP &&\n        navigateTo({\n          url: `${route}/index`,\n        });\n    },\n    [env],\n  );\n\n  return (\n    <>\n      <DocPage title=\"useSelectorQuery \u8282\u70b9\u67e5\u8be2\">\n        <AtList>\n          {renderList.map((v) => (\n            <AtListItem\n              disabled={\n                ['getContext', 'getNode'].includes(v) && env !== ENV_TYPE.WEAPP\n              }\n              title={v}\n              key={v}\n              onClick={() => navigate(v)}\n            />\n          ))}\n        </AtList>\n      </DocPage>\n    </>\n  );\n};",ge="import React, { useEffect, useState } from 'react';\nimport { AtDivider, AtList, AtListItem } from 'taro-ui';\nimport DocPage from '@components/DocPage';\nimport { View } from '@tarojs/components';\n\nimport { useSelectorQuery, useEnv } from 'taro-hooks';\nimport { useReady, ENV_TYPE, General } from '@tarojs/taro';\n\nconst Query = () => {\n  const env = useEnv();\n  const [query, { getBoundingClientRect }] = useSelectorQuery();\n  const [rect, setRect] = useState<General.IAnyObject>({});\n\n  useEffect(() => {\n    if (env !== ENV_TYPE.WEAPP) {\n      getBoundingClientRect('.demo').then(setRect);\n    }\n  }, [getBoundingClientRect, env]);\n\n  useReady(() => {\n    if (env === ENV_TYPE.WEAPP) {\n      getBoundingClientRect('.demo').then(setRect);\n    }\n  });\n\n  return (\n    <>\n      <DocPage title=\"useSelectorQuery boundingClientRect\">\n        <View className=\"demo\"></View>\n        <AtDivider content=\"\u5c5e\u6027\" />\n        <AtList>\n          {rect &&\n            Object.entries(rect).map(([key, value]) => (\n              <AtListItem key={key} title={key} note={JSON.stringify(value)} />\n            ))}\n        </AtList>\n      </DocPage>\n    </>\n  );\n};\n\nexport default Query;",ve="import React, { useEffect, useState } from 'react';\nimport { AtDivider, AtList, AtListItem } from 'taro-ui';\nimport DocPage from '@components/DocPage';\nimport { View } from '@tarojs/components';\n\nimport { useSelectorQuery, useEnv } from 'taro-hooks';\nimport { useReady, ENV_TYPE, General } from '@tarojs/taro';\n\nconst fields = {\n  dataset: true,\n  size: true,\n  mark: true,\n  rect: true,\n  scrollOffset: true,\n  properties: ['scrollX', 'scrollY'],\n  computedStyle: ['margin', 'backgroundColor'],\n  context: true,\n};\n\nconst Query = () => {\n  const env = useEnv();\n  const [query, { getFields }] = useSelectorQuery();\n  const [rect, setRect] = useState<General.IAnyObject>({});\n\n  useEffect(() => {\n    if (env !== ENV_TYPE.WEAPP) {\n      getFields('.demo', fields).then(setRect);\n    }\n  }, [getFields, env]);\n\n  useReady(() => {\n    if (env === ENV_TYPE.WEAPP) {\n      getFields('.demo', fields).then(setRect);\n    }\n  });\n  return (\n    <>\n      <DocPage title=\"useSelectorQuery fields\">\n        <View src=\"\" className=\"demo\" />\n        <AtDivider content=\"\u5c5e\u6027\" />\n        <AtList>\n          {rect &&\n            Object.entries(rect).map(([key, value]) => (\n              <AtListItem key={key} title={key} note={JSON.stringify(value)} />\n            ))}\n        </AtList>\n      </DocPage>\n    </>\n  );\n};\n\nexport default Query;",ke="import React, { useState, useEffect } from 'react';\nimport { AtDivider, AtList, AtListItem } from 'taro-ui';\nimport DocPage from '@components/DocPage';\nimport { ScrollView, View } from '@tarojs/components';\n\nimport { useSelectorQuery, useEnv } from 'taro-hooks';\nimport { useReady, ENV_TYPE, General } from '@tarojs/taro';\n\nconst Query = () => {\n  const env = useEnv();\n  const [query, { getScrollOffset }] = useSelectorQuery();\n  const [rect, setRect] = useState<General.IAnyObject>({});\n\n  useEffect(() => {\n    if (env !== ENV_TYPE.WEAPP) {\n      getScrollOffset('.demo').then(setRect);\n    }\n  }, [getScrollOffset, env]);\n\n  useReady(() => {\n    if (env === ENV_TYPE.WEAPP) {\n      getScrollOffset('.demo').then(setRect);\n    }\n  });\n\n  return (\n    <>\n      <DocPage title=\"useSelectorQuery getScrollOffset\">\n        <ScrollView scrollY scrollTop={100} className=\"demo\">\n          <View style={{ height: '400px', backgroundColor: 'white' }}></View>\n        </ScrollView>\n        <AtDivider content=\"\u5c5e\u6027\" />\n        <AtList>\n          {rect &&\n            Object.entries(rect).map(([key, value]) => (\n              <AtListItem key={key} title={key} note={JSON.stringify(value)} />\n            ))}\n        </AtList>\n      </DocPage>\n    </>\n  );\n};\n\nexport default Query;",we="import React, { useCallback, useEffect } from 'react';\nimport { AtList, AtListItem, AtMessage, AtDivider, AtCard } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nimport { useStorage } from 'taro-hooks';\nimport Taro from '@tarojs/taro';\nimport Mock from 'mockjs';\n\nimport 'taro-ui/dist/style/components/icon.scss';\nimport 'taro-ui/dist/style/components/flex.scss';\n\nexport default () => {\n  const [storageInfo, { set, get, remove }] = useStorage();\n\n  useEffect(() => {\n    // remove for web detail error\n    remove();\n  }, [remove]);\n\n  const handleSetStorage = useCallback(() => {\n    set(Mock.mock('@name()'), Mock.mock('@name()')).then((res: boolean) => {\n      Taro.atMessage({\n        message: '\u8bbe\u7f6e\u7f13\u5b58' + res ? '\u6210\u529f' : '\u5931\u8d25',\n      });\n    });\n  }, [set]);\n\n  const handleGetStorage = useCallback(async () => {\n    const { keys } = storageInfo;\n    let message = '\u83b7\u53d6\u7f13\u5b58';\n    if (!keys.length) {\n      message = '\u6682\u65e0\u7f13\u5b58\u53ef\u83b7\u53d6';\n    } else {\n      const randomIndex = Math.ceil(Math.random() * keys.length);\n      const data = await get(keys[randomIndex]);\n      if (data) {\n        message += `: ${data}`;\n      } else {\n        message += '\u5931\u8d25';\n      }\n    }\n    Taro.atMessage({\n      message,\n    });\n  }, [storageInfo, get]);\n\n  const handleRemoveStorage = useCallback(\n    async (all?: boolean) => {\n      const { keys } = storageInfo;\n      if (keys.length && !all) {\n        const result = await remove(keys[0]);\n        Taro.atMessage({\n          message: '\u79fb\u9664\u5355\u4e2a\u7f13\u5b58' + result ? '\u6210\u529f' : '\u5931\u8d25',\n        });\n      } else {\n        const result = await remove();\n        Taro.atMessage({\n          message: '\u79fb\u9664\u7f13\u5b58' + result ? '\u6210\u529f' : '\u5931\u8d25',\n        });\n      }\n    },\n    [storageInfo, remove],\n  );\n\n  return (\n    <>\n      <AtMessage />\n      <DocPage title=\"useStorage \u6570\u636e\u7f13\u5b58\" panelTitle=\"useStorage\">\n        <AtList>\n          <AtListItem title=\"set\" note=\"\u8bbe\u7f6e\u7f13\u5b58\" onClick={handleSetStorage} />\n          <AtListItem title=\"get\" note=\"\u83b7\u53d6\u7f13\u5b58\" onClick={handleGetStorage} />\n          <AtListItem\n            title=\"remove\"\n            note=\"\u79fb\u9664\u4e00\u4e2a\u7f13\u5b58\"\n            onClick={() => handleRemoveStorage()}\n          />\n          <AtListItem\n            title=\"remove\"\n            note=\"\u79fb\u9664\u6240\u6709\u7f13\u5b58\"\n            onClick={() => handleRemoveStorage(true)}\n          />\n        </AtList>\n        <AtDivider content=\"\u4e0b\u9762\u4e3a\u7f13\u5b58\u5c55\u793a\" />\n        <AtCard title=\"\u5f53\u524d\u7f13\u5b58\u4e2a\u6570\">\n          <View>\u7f13\u5b58\u5360\u7528: {storageInfo.currentSize}</View>\n          <View>\u7f13\u5b58\u9650\u5236: {storageInfo.limitSize}</View>\n          <View>\u5f53\u524d\u7f13\u5b58\u6570\u91cf: {storageInfo.keys.length}</View>\n          <View>\u5206\u522b\u4e3a: </View>\n          {Object.entries(storageInfo.storage).map(([key, value]) => (\n            <View key={key}>\n              {key} - {JSON.stringify(value)}\n            </View>\n          ))}\n        </AtCard>\n      </DocPage>\n    </>\n  );\n};",be="import React from 'react';\nimport { AtRadio } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useSystemInfo } from 'taro-hooks';\nimport { getSystemInfoSync } from '@tarojs/taro';\n\nimport 'taro-ui/dist/style/components/icon.scss';\n\nconst MOCK = '1';\n\nconst transferOptions = (systemInfo: getSystemInfoSync.Result) =>\n  Object.keys(systemInfo).map((key: any) => ({\n    label: key + ':',\n    value: key,\n    desc: JSON.stringify(\n      systemInfo[key as keyof getSystemInfoSync.Result] || '',\n    ),\n  }));\n\nexport default () => {\n  const systemInfo = useSystemInfo();\n\n  return (\n    <>\n      <DocPage title=\"useSystemInfo \u7cfb\u7edf\u4fe1\u606f\" panelTitle=\"useSystemInfo\">\n        <AtRadio\n          options={transferOptions(systemInfo)}\n          value={MOCK}\n          onClick={console.log}\n        />\n      </DocPage>\n    </>\n  );\n};",Ae="import React, { useCallback } from 'react';\nimport { AtButton, AtNoticebar } from 'taro-ui';\nimport DocPage from '@components/DocPage';\nimport Mock from 'mockjs';\n\nimport { useTabBar, useModal } from 'taro-hooks';\n\nexport default () => {\n  const {\n    setTabBarVisible,\n    setRedDotVisible,\n    setBadgeVisible,\n    setTabBarItem,\n    setTabBarStyle,\n  } = useTabBar();\n  const [show] = useModal({ mask: true, title: '\u8bbe\u7f6e\u7ed3\u679c' });\n\n  const handleRedDot = useCallback(\n    async (mult: boolean, setOrRemove: boolean) => {\n      let indexList = [1];\n      if (mult) {\n        indexList = [1, 2];\n      }\n      const res = await setRedDotVisible(setOrRemove, indexList);\n      show({ content: '\u6210\u529f\u8bbe\u7f6e: ' + JSON.stringify(res.data) });\n    },\n    [setRedDotVisible, show],\n  );\n\n  const handleBadge = useCallback(\n    async (mult: boolean, setOrRemove: boolean) => {\n      let indexList = setOrRemove ? [{ index: 1, text: 'useTabBar' }] : [1];\n      if (mult) {\n        indexList = setOrRemove\n          ? [\n              { index: 1, text: 'useTabBar' },\n              { index: 2, text: '\u5173\u4e8e' },\n            ]\n          : [1, 2];\n      }\n      const res = await setBadgeVisible(indexList);\n      show({ content: '\u6210\u529f\u8bbe\u7f6e: ' + JSON.stringify(res.data) });\n    },\n    [setBadgeVisible, show],\n  );\n\n  const handleItem = useCallback(\n    async (mult: boolean) => {\n      let indexList = [\n        {\n          index: 1,\n          iconPath: '/assets/icon/about.png',\n          selectedIconPath: '/assets/icon/about-select.png',\n          text: 'useTabBar-1',\n        },\n      ];\n      if (mult) {\n        indexList = [\n          {\n            index: 1,\n            iconPath: '/assets/icon/about.png',\n            selectedIconPath: '/assets/icon/about-select.png',\n            text: 'useTabBar-1',\n          },\n          {\n            index: 2,\n            iconPath: '/assets/icon/tabbar.png',\n            selectedIconPath: '/assets/icon/tabbar-select.png',\n            text: '\u5173\u4e8e-1',\n          },\n        ];\n      }\n      const res = await setTabBarItem(indexList);\n      show({ content: '\u6210\u529f\u8bbe\u7f6e: ' + JSON.stringify(res.data) });\n    },\n    [setTabBarItem, show],\n  );\n\n  const handleTabBarStyle = useCallback(() => {\n    const payload = {\n      backgroundColor: Mock.mock('@color()'),\n      borderStyle: Math.ceil(Math.random()) > 0.5 ? 'black' : 'white',\n      color: Mock.mock('@color()'),\n      selectedColor: Mock.mock('@color()'),\n    };\n    setTabBarStyle(payload);\n    show({ content: '\u6210\u529f\u8bbe\u7f6e: ' + JSON.stringify(payload) });\n  }, [setTabBarStyle, show]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\n        \u6ce8\u610f:\n        \u7531\u4e8e\u8be5hook\u9700\u5728tabbar\u9875\u9762\u9884\u89c8\u3002\u6545\u76f4\u63a5\u5c55\u793a\u5728\u6839\u76ee\u5f55\u91cc\u3002h5\u7aef\u8bf7\u81f3\u5b8c\u6574h5\u793a\u4f8b\u67e5\u770b\n      </AtNoticebar>\n      <DocPage title=\"useTabBar tabBar\" panelTitle=\"useTabBar\">\n        <AtButton onClick={() => setTabBarVisible(false, true)}>\n          \u9690\u85cfTabBar\n        </AtButton>\n        <AtButton className=\"gap\" onClick={() => setTabBarVisible(true, true)}>\n          \u663e\u793aTabBar\n        </AtButton>\n        <AtButton onClick={() => handleRedDot(false, true)}>\n          \u8bbe\u7f6e\u5355\u4e2a\u7ea2\u70b9\n        </AtButton>\n        <AtButton className=\"gap\" onClick={() => handleRedDot(true, true)}>\n          \u8bbe\u7f6e\u591a\u4e2a\u7ea2\u70b9\n        </AtButton>\n        <AtButton onClick={() => handleRedDot(true, false)}>\u79fb\u9664\u7ea2\u70b9</AtButton>\n        <AtButton className=\"gap\" onClick={() => handleBadge(false, true)}>\n          \u8bbe\u7f6e\u5355\u4e2abadge\n        </AtButton>\n        <AtButton onClick={() => handleBadge(true, true)}>\n          \u8bbe\u7f6e\u591a\u4e2abadge\n        </AtButton>\n        <AtButton className=\"gap\" onClick={() => handleBadge(true, false)}>\n          \u79fb\u9664badge\n        </AtButton>\n        <AtButton onClick={() => handleItem(false)}>\n          \u52a8\u6001\u8bbe\u7f6e\u5355\u4e2aTabBar\n        </AtButton>\n        <AtButton className=\"gap\" onClick={() => handleItem(true)}>\n          \u52a8\u6001\u8bbe\u7f6e\u591a\u4e2aTabBar\n        </AtButton>\n        <AtButton onClick={handleTabBarStyle}>\u52a8\u6001\u8bbe\u7f6eTabBar\u6837\u5f0f</AtButton>\n      </DocPage>\n    </>\n  );\n};",Pe="import React, { useCallback } from 'react';\nimport { AtButton } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useToast } from 'taro-hooks';\nimport image from '../../assets/icon/about-select.png';\n\nexport default () => {\n  const [show, hide] = useToast({\n    mask: true,\n    duration: 1000,\n    title: 'initial title',\n    icon: 'success',\n  });\n\n  const showCustomToast = useCallback(() => {\n    show({\n      title: '\u70b9\u51fb\u9690\u85cf\u6309\u94ae\u8fdb\u884c\u9690\u85cf',\n      image,\n      duration: 3000000,\n      mask: false,\n    });\n  }, [show]);\n\n  return (\n    <>\n      <DocPage title=\"useToast \u6d88\u606f\u63d0\u793a\u6846\" panelTitle=\"useToast\">\n        <AtButton onClick={show}>\u5c55\u793a\u5e26\u521d\u59cb\u914d\u7f6eToast</AtButton>\n        <AtButton className=\"gap\" onClick={showCustomToast}>\n          \u5c55\u793a\u65b0\u914d\u7f6eToast\n        </AtButton>\n        <AtButton onClick={hide}>\u9690\u85cf\u65b0\u914d\u7f6eToast</AtButton>\n      </DocPage>\n    </>\n  );\n};",xe="import React, { useCallback } from 'react';\nimport { AtNoticebar, AtButton } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport Mock from 'mockjs';\nimport { useTopBarText, useModal } from 'taro-hooks';\nimport { General } from '@tarojs/taro';\n\nexport default () => {\n  const [show] = useModal({ mask: true, title: '\u8bbe\u7f6e\u7ed3\u679c', showCancel: false });\n  const [set] = useTopBarText('taro-hooks');\n\n  const handleSetTopBarText = useCallback(async () => {\n    try {\n      const result = await set(Mock.mock('@name()'));\n      show({ content: result.errMsg });\n    } catch (e) {\n      show({ content: (e as General.CallbackResult).errMsg });\n    }\n  }, [show, set]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\n        \u8be5hook\u4ec5\u5c0f\u7a0b\u5e8f\u4f7f\u7528. \u8bf7\u5c06\u5c0f\u7a0b\u5e8f\u7f6e\u9876\u67e5\u770b\u6548\u679c\n      </AtNoticebar>\n      <DocPage title=\"useTopBarText \u7f6e\u9876\u6587\u5b57\" panelTitle=\"useTopBarText\">\n        <AtButton onClick={handleSetTopBarText}>\u8bbe\u7f6e\u7f6e\u9876\u680f\u6587\u5b57\u5185\u5bb9</AtButton>\n      </DocPage>\n    </>\n  );\n};",ye="import React, { useCallback } from 'react';\nimport { AtMessage, AtNoticebar } from 'taro-ui';\nimport { View } from '@tarojs/components';\nimport DocPage from '@components/DocPage';\n\nimport { useEnv, useUpdateManager } from 'taro-hooks';\nimport Taro, { ENV_TYPE } from '@tarojs/taro';\n\nimport 'taro-ui/dist/style/components/icon.scss';\n\nexport default () => {\n  const env = useEnv();\n\n  const onCheckForUpdate = useCallback((manager, res) => {\n    Taro.atMessage({\n      message: res.hasUpdate ? '\u6709\u65b0\u7248\u672c' : '\u65e0\u65b0\u7248\u672c',\n    });\n  }, []);\n\n  const onUpdateReady = useCallback(() => {\n    Taro.atMessage({\n      message: '\u68c0\u67e5\u66f4\u65b0\u6210\u529f',\n    });\n  }, []);\n\n  const onUpdateFailed = useCallback(() => {\n    Taro.atMessage({\n      message: '\u68c0\u67e5\u66f4\u65b0\u5931\u8d25',\n    });\n  }, []);\n\n  const updateManager = useUpdateManager({\n    onCheckForUpdate,\n    onUpdateReady,\n    onUpdateFailed,\n  });\n\n  return (\n    <>\n      {env !== ENV_TYPE.WEAPP && (\n        <AtNoticebar marquee>\n          useUpdateManager \u4ec5\u53ef\u4ee5\u5728\u5c0f\u7a0b\u5e8f\u73af\u5883\u4e2d\u4f7f\u7528\n        </AtNoticebar>\n      )}\n      <AtMessage />\n      <DocPage title=\"useUpdateManager \u66f4\u65b0\" panelTitle=\"useUpdateManager\">\n        <View>\u68c0\u67e5\u66f4\u65b0\u4e2d....</View>\n      </DocPage>\n    </>\n  );\n};",Ce="import React, { useCallback } from 'react';\nimport { AtRadio, AtAvatar, AtButton, AtNoticebar } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useUserInfo, useLogin } from 'taro-hooks';\nimport { UserInfo } from '@tarojs/taro';\nimport { View, Text } from '@tarojs/components';\n\nimport 'taro-ui/dist/style/components/flex.scss';\nimport './index.less';\n\nconst MOCK = '1';\n\nconst transferOptions = (userInfo: UserInfo) =>\n  Object.entries(userInfo).map(([key, value]) => ({\n    label: key + ':',\n    value: key,\n    desc: JSON.stringify(value),\n  }));\n\nexport default () => {\n  const [userInfo, { getUserInfo, getUserProfile }] = useUserInfo();\n  const [login] = useLogin();\n\n  const handleGetUserInfo = useCallback(() => {\n    login(true).then(() => {\n      getUserInfo({ lang: 'zh_CN', withCredentials: true });\n    });\n  }, [login, getUserInfo]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\u8be5hook\u4ec5\u5728\u5c0f\u7a0b\u5e8f\u4e2d\u4f7f\u7528</AtNoticebar>\n      <DocPage title=\"useUserInfo \u7528\u6237\u4fe1\u606f\" panelTitle=\"useUserInfo\">\n        <View className=\"at-row at-row__align--center  at-row__justify--between userinfo\">\n          <View className=\"at-col-1 at-col--auto\">\n            <AtAvatar size=\"large\" image={userInfo.avatarUrl} />\n          </View>\n          <View className=\"at-col-9 at-row at-row--wrap\">\n            <Text className=\"at-col-12 ellipsis\">\n              \u6635\u79f0: {userInfo.nickName}\n            </Text>\n            <Text className=\"at-col-12\">\n              \u6027\u522b:{' '}\n              {!userInfo.gender\n                ? '\u672a\u77e5'\n                : userInfo.gender === 1\n                ? '\u7537\u6027'\n                : '\u5973\u6027'}\n            </Text>\n          </View>\n        </View>\n        <AtButton onClick={handleGetUserInfo}>\u83b7\u53d6\u7528\u6237\u4fe1\u606f</AtButton>\n        <AtButton\n          className=\"gap\"\n          onClick={() =>\n            getUserProfile({ lang: 'zh_CN', desc: '\u4ec5\u4f5c\u4e3a\u5c0f\u7a0b\u5e8f\u5c55\u793a\u4f7f\u7528' })\n          }\n        >\n          \u83b7\u53d6\u7528\u6237\u4fe1\u606f(\u5305\u542b\u654f\u611f)\n        </AtButton>\n        <AtRadio\n          options={transferOptions(userInfo)}\n          value={MOCK}\n          onClick={console.log}\n        />\n      </DocPage>\n    </>\n  );\n};",Be=".userinfo {\n  margin-bottom: 10px;\n}",De="import React from 'react';\nimport { AtButton } from 'taro-ui';\nimport DocPage from '@components/DocPage';\n\nimport { useVibrate } from 'taro-hooks';\n\nexport default () => {\n  const [vibrateAction] = useVibrate();\n  const [vibrateIntervalAction, stopVibrateAction] = useVibrate(true);\n\n  return (\n    <DocPage title=\"useVibrate \u9707\u52a8\u53cd\u9988\" panelTitle=\"useVibrate\">\n      <AtButton onClick={() => vibrateAction()}>\u77ed\u9707\u52a8\u89e6\u611f\u6309\u94ae</AtButton>\n      <AtButton className=\"gap\" onClick={() => vibrateAction(true)}>\n        \u957f\u9707\u52a8\u89e6\u611f\u6309\u94ae\n      </AtButton>\n      <AtButton onClick={() => vibrateIntervalAction()}>\n        \u6301\u7eed\u77ed\u9707\u52a8\u89e6\u611f\u6309\u94ae\n      </AtButton>\n      <AtButton\n        className=\"gap\"\n        onClick={() => {\n          stopVibrateAction();\n          vibrateIntervalAction(true);\n        }}\n      >\n        \u6301\u7eed\u957f\u9707\u52a8\u89e6\u611f\u6309\u94ae\n      </AtButton>\n      <AtButton onClick={() => stopVibrateAction()}>\u5173\u95ed\u6301\u7eed\u9707\u52a8</AtButton>\n    </DocPage>\n  );\n};",Re="import React, { useCallback, useState } from 'react';\nimport { AtNoticebar, AtButton } from 'taro-ui';\nimport { Video } from '@tarojs/components';\n\nimport DocPage from '@components/DocPage';\n\nimport { useVideo, useEnv, useToast } from 'taro-hooks';\nimport { chooseVideo, ENV_TYPE, useReady } from '@tarojs/taro';\n\nexport default () => {\n  const env = useEnv();\n  const [show] = useToast({ mask: true });\n  const [videoContext, { choose, save, create }] = useVideo({\n    camera: 'back',\n    sourceType: ['camera', 'album'],\n  });\n  const [videoResult, setVideoResult] =\n    useState<chooseVideo.SuccessCallbackResult>();\n\n  useReady(() => {\n    if (env && env !== ENV_TYPE.WEB) {\n      create('useVideoContext');\n    }\n  });\n\n  const handleChooseVideo = useCallback(() => {\n    choose({ maxDuration: 10 }).then(setVideoResult);\n  }, [choose]);\n\n  const handleSaveVideo = useCallback(\n    (filePath) => {\n      save(filePath)\n        .then(() => {\n          show({\n            title: '\u4fdd\u5b58\u6210\u529f',\n          });\n        })\n        .catch(() => {\n          show({\n            icon: 'none',\n            title: '\u4fdd\u5b58\u5931\u8d25',\n          });\n        });\n    },\n    [save, show],\n  );\n\n  return (\n    <>\n      <AtNoticebar marquee>\u5f53\u524dhook\u4e0d\u652f\u6301h5, \u8bf7\u79fb\u6b65\u5c0f\u7a0b\u5e8f\u4f53\u9a8c</AtNoticebar>\n      <DocPage title=\"useVideo \u89c6\u9891\" panelTitle=\"useVideo\">\n        <Video\n          id=\"useVideoContext\"\n          className=\"demo\"\n          src={videoResult?.tempFilePath || ''}\n        />\n        <AtButton\n          disabled={env === ENV_TYPE.WEB}\n          className=\"gap\"\n          onClick={handleChooseVideo}\n        >\n          \u9009\u62e9\u89c6\u9891\n        </AtButton>\n        <AtButton\n          disabled={!videoContext || !videoResult?.tempFilePath}\n          onClick={() => videoContext.play()}\n        >\n          \u64ad\u653e\u89c6\u9891\n        </AtButton>\n        <AtButton\n          className=\"gap\"\n          disabled={!videoContext || !videoResult?.tempFilePath}\n          onClick={() => videoContext.pause()}\n        >\n          \u6682\u505c\u89c6\u9891\n        </AtButton>\n        <AtButton\n          disabled={env === ENV_TYPE.WEB || !videoResult?.tempFilePath}\n          onClick={() => handleSaveVideo(videoResult?.tempFilePath)}\n        >\n          \u4fdd\u5b58\u89c6\u9891\n        </AtButton>\n      </DocPage>\n    </>\n  );\n};",Se="import React, { useEffect, useState, useContext } from 'react';\nimport { AtNoticebar, AtTimeline } from 'taro-ui';\nimport { AtTimelineProps } from 'taro-ui/types/timeline';\n\nimport DocPage from '@components/DocPage';\n\nimport { useVisible } from 'taro-hooks';\n\nimport 'taro-ui/dist/style/components/icon.scss';\n\nexport default () => {\n  const visible = useVisible();\n  const [statusStack, setStatusStack] = useState<AtTimelineProps['items']>([]);\n\n  useEffect(() => {\n    setStatusStack((prevStack) => [\n      ...prevStack,\n      {\n        title: visible ? '\u9875\u9762\u663e\u793a' : '\u9875\u9762\u9690\u85cf',\n        content: ['\u65f6\u95f4: ' + Date.now()],\n        color: visible ? 'green' : 'red',\n        icon: visible ? 'clock' : 'blocked',\n      },\n    ]);\n  }, [visible]);\n\n  return (\n    <>\n      <AtNoticebar marquee>\n        \u5f53\u524dhook\u81ea\u52a8\u76d1\u542c\u9875\u9762\u72b6\u6001\u53d8\u5316\u3002\u53ef\u5c1d\u8bd5\u6253\u5f00\u5c0f\u7a0b\u5e8f\u8bbe\u7f6e\u6216\u5207\u6362\u540e\u53f0\u6d4b\u8bd5\u3002\n      </AtNoticebar>\n      <DocPage title=\"useVisible \u9875\u9762\u72b6\u6001\" panelTitle=\"useVisible\">\n        <AtTimeline items={statusStack} />\n      </DocPage>\n    </>\n  );\n};",Ie="import React, { useCallback } from 'react';\nimport { AtButton } from 'taro-ui';\n\nimport DocPage from '@components/DocPage';\n\nimport { useModal, useWeRun, useLogin } from 'taro-hooks';\n\nexport default () => {\n  const [show] = useModal({ mask: true, title: '\u83b7\u53d6\u7ed3\u679c', showCancel: false });\n  const [getWeRunData, shareToWeRun] = useWeRun();\n  const [login] = useLogin();\n\n  const handleGetWeRunData = useCallback(async () => {\n    let content = '\u83b7\u53d6\u6210\u529f!';\n    try {\n      await login(true);\n      const data = await getWeRunData();\n      if (!data) {\n        content = '\u83b7\u53d6\u5931\u8d25';\n      } else {\n        content = JSON.stringify(data);\n      }\n    } catch (e) {\n      content = '\u83b7\u53d6\u5931\u8d25';\n    }\n    show({ content });\n  }, [getWeRunData, show, login]);\n\n  const handleShareToWeRun = useCallback(async () => {\n    let content = '\u83b7\u53d6\u6210\u529f!';\n    try {\n      await login(true);\n      const recordList = [\n        { typeId: 1003, time: 200, calorie: 100 },\n        { typeId: 3005, time: 300, calorie: 1000, distance: 1000 },\n        { typeId: 4003, calorie: 1000, number: 100 },\n      ];\n      const data = await shareToWeRun(recordList);\n      if (!data) {\n        content = '\u83b7\u53d6\u5931\u8d25';\n      }\n    } catch (e) {\n      console.log(e);\n      content = '\u83b7\u53d6\u5931\u8d25';\n    }\n    show({ content });\n  }, [shareToWeRun, show, login]);\n\n  return (\n    <DocPage title=\"useWeRun \u5fae\u4fe1\u8fd0\u52a8\" panelTitle=\"useWeRun\">\n      <AtButton onClick={handleGetWeRunData}>\u83b7\u53d6\u5fae\u4fe1\u8fd0\u52a8\u6b65\u6570</AtButton>\n      <AtButton className=\"gap\" onClick={handleShareToWeRun}>\n        \u5206\u4eab\u6570\u636e\u81f3\u5fae\u4fe1\u8fd0\u52a8\n      </AtButton>\n    </DocPage>\n  );\n};",Te="import React, { useCallback } from 'react';\nimport { AtIcon } from 'taro-ui';\nimport { Image, View } from '@tarojs/components';\n\nimport { ENV_TYPE, useShareAppMessage } from '@tarojs/taro';\nimport { useEnv, useRouter, useModal, useUpdateManager } from 'taro-hooks';\n\nimport './index.less';\n\nimport logoImg from '../../../../../public/image/hook.png';\n\nimport { List } from '../../constant';\n\nconst Index = () => {\n  const env = useEnv();\n  const [routerInfo, { navigateTo }] = useRouter();\n  const [show] = useModal({ mask: true, title: '\u6e29\u99a8\u63d0\u793a', showCancel: false });\n\n  const onUpdateReady = useCallback(\n    (manager) => {\n      show({\n        title: '\u66f4\u65b0\u63d0\u793a',\n        content: '\u65b0\u7248\u672c\u5df2\u7ecf\u51c6\u5907\u597d\uff0c\u8bf7\u91cd\u542f\u5e94\u7528\u66f4\u65b0',\n      }).then(() => {\n        manager.applyUpdate();\n      });\n    },\n    [show],\n  );\n\n  useUpdateManager({\n    onUpdateReady,\n  });\n\n  useShareAppMessage(() => {\n    return {\n      title: 'Taro Hooks: \u4e3aTaro\u800c\u8bbe\u8ba1\u7684Hooks Library',\n      path: '/pages/index/index',\n      imageUrl: require('../../../../../public/image/hook.png'),\n    };\n  });\n\n  const handleLocation = useCallback(\n    (route: string) => {\n      if (!routerInfo && env === ENV_TYPE.WEB) {\n        show({\n          content: 'web|h5\u6682\u4e0d\u5168\u4f53\u9884\u89c8, \u8bf7\u70b9\u51fb\u5bf9\u5e94hooks\u67e5\u770b\u793a\u4f8b',\n        });\n      } else {\n        navigateTo('/pages/panel/index?id=' + route.toLowerCase());\n      }\n    },\n    [env, routerInfo, navigateTo, show],\n  );\n\n  return (\n    <View className=\"page page-index\">\n      <View className=\"logo\">\n        <Image src={logoImg} className=\"img\" mode=\"widthFix\" />\n      </View>\n      <View className=\"module-list\">\n        {List.map((item, index) => (\n          <View\n            className=\"module-list__item\"\n            key={index}\n            data-id={item.id}\n            data-name={item.title}\n            onClick={() => handleLocation(item.id)}\n          >\n            <AtIcon\n              prefixClass=\"iconfont\"\n              value={item.icon}\n              className=\"module-list__icon\"\n            />\n            <View className=\"module-list__info\">\n              <View className=\"title\">{item.title}</View>\n              <View className=\"content\">{item.content}</View>\n            </View>\n            <View className=\"module-list__arrow\">\n              <AtIcon value=\"chevron-right\" />\n            </View>\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Index;",je="@import '../../app.less';\n@import '../../assets/style/icon.less';\n\n.page-index {\n  padding-top: 60px;\n  padding-bottom: 100px;\n  min-height: 100vh;\n  box-sizing: border-box;\n\n  .logo {\n    margin: 0 auto;\n    margin-top: 60px;\n    font-size: 0;\n    text-align: center;\n\n    .img {\n      width: 270px;\n      height: 270px;\n    }\n  }\n\n  .page-title {\n    margin-top: 24px;\n    color: #333;\n    font-size: 36px;\n    text-align: center;\n  }\n\n  .module-list {\n    margin-top: 72px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    &__item {\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-bottom: 40px;\n      padding: 0 30px;\n      width: 90%;\n      height: 144px;\n      background: #fff;\n      box-shadow: 0 8px 40px 0 rgba(0, 0, 0, 0.04);\n      border-radius: 10px;\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    &__icon {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 70px;\n      height: 70px;\n      color: #78a4fa;\n      text-align: center;\n      border: 5px solid rgba(120, 164, 250, 0.16);\n      border-radius: 50%;\n\n      .img {\n        width: 30px;\n        height: 30px;\n      }\n    }\n\n    &__info {\n      flex: 1;\n      text-align: left;\n      margin-left: 24px;\n\n      .title {\n        color: #6a6a77;\n        font-size: 28px;\n        font-weight: bold;\n      }\n\n      .content {\n        color: #88889c;\n        font-size: 22px;\n      }\n    }\n\n    &__arrow {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 62px;\n      height: 62px;\n      color: #fff;\n      text-align: center;\n      background: #78a4fa;\n      box-shadow: 4px 10px 30px 0 rgba(120, 164, 250, 0.3);\n      border-radius: 50%;\n    }\n  }\n}\n\n.page-body {\n  padding: 40px;\n}\n\n.component-group {\n  font-size: 32px;\n}\n\n.group-item {\n  padding: 0 30px;\n  margin: 20px 0;\n  background-color: #fff;\n  border-radius: 4px;\n  overflow: hidden;\n\n  &:first-child {\n    margin-top: 0;\n  }\n}\n\n.group-info {\n  padding: 30px 0;\n  display: flex;\n  align-items: center;\n  transition: opacity 0.3s;\n\n  &-title {\n    opacity: 0.5;\n  }\n}\n\n.group-list {\n  font-size: 28px;\n\n  .list-component {\n    padding: 20px 0;\n    position: relative;\n    align-items: center;\n\n    &::before {\n      content: ' ';\n      position: absolute;\n      left: 0;\n      top: 0;\n      right: 0;\n      height: 1px;\n      border-top: 1px solid #d8d8d8;\n      color: #d8d8d8;\n    }\n\n    &:first-child::before {\n      display: none;\n    }\n\n    &-info {\n      width: 100%;\n    }\n\n    &-arrow {\n      display: inline-block;\n      height: 18px;\n      width: 18px;\n      border-width: 2px 2px 0 0;\n      border-color: #888;\n      border-style: solid;\n      transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0) translate(-50%);\n      position: absolute;\n      top: 50%;\n      right: 0;\n    }\n  }\n}",Ve={"pages-useapicheck":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,61977));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:i}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useapicheck"}},"pages-useaccountinfo":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,49322));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:c}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useaccountinfo"}},"pages-useactionsheet":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,21596));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:u}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useactionsheet"}},"pages-usearraybuffertobase64":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,55381));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:l},"index.less":{import:"./index.less",content:p}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usearraybuffertobase64"}},"pages-useaudio":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,6694));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:m},"index.less":{import:"./index.less",content:d}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useaudio"}},"pages-useauthorize":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,18177));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:f}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useauthorize"}},"pages-usebackground":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,75104));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:h}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usebackground"}},"pages-usebase64toarraybuffer":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,56343));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:g},"index.less":{import:"./index.less",content:v}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"base-64":{version:"1.0.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usebase64toarraybuffer"}},"pages-usebattery":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,82065));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:k}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usebattery"}},"pages-usebrightness":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,35807));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:w},"index.less":{import:"./index.less",content:b}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usebrightness"}},"pages-usecamera":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,84118));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:A},"index.less":{import:"./index.less",content:P}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usecamera"}},"pages-usechooseaddress":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,34912));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:x}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usechooseaddress"}},"pages-useclipboarddata":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,45521));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:y}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useclipboarddata"}},"pages-useenv":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,54534));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:C}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useenv"}},"pages-useevent":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,25776));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:B}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useevent"}},"pages-usefile":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,92447));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:D}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usefile"}},"pages-useimage":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,62983));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:R},"index.less":{import:"./index.less",content:S}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useimage"}},"pages-useinvoice":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,68792));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:I}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useinvoice"}},"pages-uselaunchoptions":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,79456));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:T},"constant/index.ts":{import:"../../constant",content:j}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-uselaunchoptions"}},"pages-useloading":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,33711));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:V}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useloading"}},"pages-uselocation":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,48838));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:E},"index.less":{import:"./index.less",content:N}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-uselocation"}},"pages-uselogin":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,43220));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:L}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-uselogin"}},"pages-usemanualpulldownrefresh":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,12152));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:M}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usemanualpulldownrefresh"}},"pages-usemap":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,16524));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:q}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usemap"}},"pages-usemenubuttonboundingclientrect":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,53447));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:_}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usemenubuttonboundingclientrect"}},"pages-usemodal":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,31862));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:O}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usemodal"}},"pages-usemotion":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,80390));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:U}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usemotion"}},"pages-usenavigationbar":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,60711));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:Y}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/taro-h5":{version:"3.3.6"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usenavigationbar"}},"pages-usenetworktype":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,42710));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:F}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usenetworktype"}},"pages-useonline":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,12082));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:W}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useonline"}},"pages-usepromise":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,62662));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:Z}},dependencies:{"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:"3.3.6"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usepromise"}},"userequest-defaultrequest":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,68013));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:z}},dependencies:{"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:"3.3.6"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c useRequest \u63a5\u6536\u4e86\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570 <code>getUsername</code> \uff0c\u5728\u7ec4\u4ef6\u521d\u6b21\u52a0\u8f7d\u65f6\uff0c \u81ea\u52a8\u89e6\u53d1\u8be5\u51fd\u6570\u6267\u884c\u3002\u540c\u65f6 useRequest \u4f1a\u81ea\u52a8\u7ba1\u7406\u5f02\u6b65\u8bf7\u6c42\u7684 <code>loading</code> , <code>data</code> , <code>error</code> \u7b49\u72b6\u6001\u3002</p></div>',identifier:"userequest-defaultrequest"}},"userequest-manual":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,42429));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:G}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u901a\u8fc7\u8bbe\u7f6e <code>options.manual = true</code> , \u5219\u9700\u8981\u624b\u52a8\u8c03\u7528 <code>run</code> \u65f6\u624d\u4f1a\u89e6\u53d1\u6267\u884c\u5f02\u6b65\u51fd\u6570\u3002</p></div>',identifier:"userequest-manual"}},"userequest-polling":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,59291));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:J}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u901a\u8fc7\u8bbe\u7f6e <code>options.pollingInterval</code> \uff0c\u8fdb\u5165\u8f6e\u8be2\u6a21\u5f0f\uff0c\u5b9a\u65f6\u89e6\u53d1\u51fd\u6570\u6267\u884c\u3002</p>\n<ul>\n<li>\u901a\u8fc7\u8bbe\u7f6e <code>options.pollingWhenHidden=false</code> \uff0c\u5728\u5c4f\u5e55\u4e0d\u53ef\u89c1\u65f6\uff0c\u6682\u65f6\u6682\u505c\u5b9a\u65f6\u4efb\u52a1\u3002</li>\n<li>\u901a\u8fc7 <code>run</code> / <code>cancel</code> \u6765 \u5f00\u542f/\u505c\u6b62 \u8f6e\u8be2\u3002</li>\n<li>\u5728 <code>options.manual=true</code> \u65f6\uff0c\u9700\u8981\u7b2c\u4e00\u6b21\u6267\u884c <code>run</code> \u540e\uff0c\u624d\u5f00\u59cb\u8f6e\u8be2\u3002</li>\n</ul></div>',identifier:"userequest-polling"}},"userequest-concurrent":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,43911));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:Q}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u901a\u8fc7 <code>options.fetchKey</code> \uff0c\u53ef\u4ee5\u5c06\u8bf7\u6c42\u8fdb\u884c\u5206\u7c7b\uff0c\u6bcf\u4e00\u7c7b\u7684\u8bf7\u6c42\u90fd\u6709\u72ec\u7acb\u7684\u72b6\u6001\uff0c\u4f60\u53ef\u4ee5\u5728 <code>fetches</code> \u4e2d\u627e\u5230\u6240\u6709\u7684\u8bf7\u6c42\u3002</p></div>',identifier:"userequest-concurrent"}},"userequest-ready":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,87446));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:K}},dependencies:{"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:"3.3.6"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u53ea\u6709\u5f53 <code>options.ready</code> \u53d8\u4e3a true \u65f6, \u624d\u4f1a\u53d1\u8d77\u8bf7\u6c42\uff0c\u57fa\u4e8e\u8be5\u7279\u6027\u53ef\u4ee5\u5b9e\u73b0\u4e32\u884c\u8bf7\u6c42\uff0c\u4f9d\u8d56\u8bf7\u6c42\u7b49\u3002</p></div>',identifier:"userequest-ready"}},"userequest-debounce":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,25769));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:H}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u901a\u8fc7\u8bbe\u7f6e <code>options.debounceInterval</code> \uff0c\u5219\u8fdb\u5165\u9632\u6296\u6a21\u5f0f\u3002\u6b64\u65f6\u5982\u679c\u9891\u7e41\u89e6\u53d1 <code>run</code> \uff0c\u5219\u4f1a\u4ee5\u9632\u6296\u7b56\u7565\u8fdb\u884c\u8bf7\u6c42\u3002</p></div>',identifier:"userequest-debounce"}},"userequest-throttle":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,12784));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:$}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u901a\u8fc7\u8bbe\u7f6e <code>options.throttleInterval</code> \uff0c\u5219\u8fdb\u5165\u8282\u6d41\u6a21\u5f0f\u3002\u6b64\u65f6\u5982\u679c\u9891\u7e41\u89e6\u53d1 <code>run</code> \uff0c\u5219\u4f1a\u4ee5\u8282\u6d41\u7b56\u7565\u8fdb\u884c\u8bf7\u6c42\u3002</p></div>',identifier:"userequest-throttle"}},"userequest-cachekey":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,37124));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:X}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u901a\u8fc7 <code>options.fetchKey</code> \uff0c\u53ef\u4ee5\u5c06\u8bf7\u6c42\u8fdb\u884c\u5206\u7c7b\uff0c\u6bcf\u4e00\u7c7b\u7684\u8bf7\u6c42\u90fd\u6709\u72ec\u7acb\u7684\u72b6\u6001\uff0c\u4f60\u53ef\u4ee5\u5728 <code>fetches</code> \u4e2d\u627e\u5230\u6240\u6709\u7684\u8bf7\u6c42\u3002</p></div>',identifier:"userequest-cachekey"}},"userequest-preload":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,87534));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:ee}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u540c\u4e00\u4e2a <code>cacheKey</code> \u7684\u8bf7\u6c42\uff0c\u662f\u5168\u5c40\u5171\u4eab\u7684\uff0c\u4e5f\u5c31\u662f\u4f60\u53ef\u4ee5\u63d0\u524d\u52a0\u8f7d\u6570\u636e\u3002\u5229\u7528\u8be5\u7279\u6027\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0\u9884\u52a0\u8f7d\u3002</p></div>',identifier:"userequest-preload"}},"userequest-refreshonwindowfocus":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,10051));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:ne}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u53ea\u6709\u5f53 <code>options.ready</code> \u53d8\u4e3a true \u65f6, \u624d\u4f1a\u53d1\u8d77\u8bf7\u6c42\uff0c\u57fa\u4e8e\u8be5\u7279\u6027\u53ef\u4ee5\u5b9e\u73b0\u4e32\u884c\u8bf7\u6c42\uff0c\u4f9d\u8d56\u8bf7\u6c42\u7b49\u3002</p></div>',identifier:"userequest-refreshonwindowfocus"}},"userequest-mutate":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,25488));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:te}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u4f60\u53ef\u4ee5\u901a\u8fc7 <code>mutate</code> \uff0c\u76f4\u63a5\u4fee\u6539 <code>data</code> \u3002 <code>mutate</code> \u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u4e3a <code>newData</code> \u6216 <code>(oldData)=> newData</code> \u3002</p></div>',identifier:"userequest-mutate"}},"userequest-loadingdelay":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,21595));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:oe}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u901a\u8fc7\u8bbe\u7f6e <code>options.loadingDelay</code> \uff0c\u53ef\u4ee5\u5ef6\u8fdf <code>loading</code> \u53d8\u6210 <code>true</code> \u7684\u65f6\u95f4\uff0c\u6709\u6548\u9632\u6b62\u95ea\u70c1\u3002</p></div>',identifier:"userequest-loadingdelay"}},"userequest-refreshdeps":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,49866));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:re}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u5f53 <code>options.refreshDeps</code> \u53d8\u5316\u65f6\uff0cuseRequest \u4f1a\u4f7f\u7528\u4e4b\u524d\u7684\u53c2\u6570\u91cd\u65b0\u6267\u884c service\u3002</p></div>',identifier:"userequest-refreshdeps"}},"userequest-fetch":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,32275));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:se}},dependencies:{"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:"3.3.6"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u5982\u679c useRequest \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f <code>string</code>\u3001<code>object</code> \u6216 <code>()=> string|object</code>\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528 Taro.request \u53d1\u9001\u7f51\u7edc\u8bf7\u6c42</p></div>',identifier:"userequest-fetch"}},"userequest-axios":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,7549));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:ae}},dependencies:{"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},axios:{version:"0.21.4"},"axios-miniprogram-adapter":{version:"0.3.2"},"@tarojs/components":{version:"3.3.6"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u901a\u8fc7\u8bbe\u7f6e <code>requstMethod</code>, \u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bf7\u6c42\u5e93\u3002</p></div>',identifier:"userequest-axios"}},"userequest-pagination":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,40388));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:ie}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u666e\u901a\u7684\u5206\u9875\u573a\u666f\uff0c\u6211\u4eec\u4f1a\u81ea\u52a8\u7ba1\u7406 <code>current</code> \u548c <code>pageSize</code>\u3002</p></div>',identifier:"userequest-pagination"}},"userequest-paginationcache":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,3843));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:ce}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},ahooks:{version:"2.10.11"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u5728 <code>cacheKey</code> \u573a\u666f\u4e0b\uff0c <code>run</code> \u7684\u53c2\u6570 <code>params</code> \u662f\u53ef\u4ee5\u7f13\u5b58\u7684\uff0c\u5229\u7528\u8fd9\u4e2a\u7279\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0 pagination \u76f8\u5173\u6761\u4ef6\u7684\u7f13\u5b58\u3002</p></div>',identifier:"userequest-paginationcache"}},"userequest-loadmore":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,87374));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:ue}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u901a\u8fc7\u8bbe\u7f6e cacheKey\uff0c\u53ef\u4ee5\u7f13\u5b58\u6240\u6709 list \u6570\u636e\u3002</p></div>',identifier:"userequest-loadmore"}},"userequest-loadmoreref":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,10130));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:le},"data.ts":{import:"./data",content:pe}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},description:'<div class="markdown"><p>\u5982\u679c options \u4e2d\u5b58\u5728 <code>ref</code>\uff0c\u5219\u5728\u6eda\u52a8\u5230\u5e95\u90e8\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1 loadMore\u3002\u5f53\u7136\u6b64\u65f6\u4f60\u5fc5\u987b\u8bbe\u7f6e <code>isNoMore</code>, \u4ee5\u4fbf\u8ba9 <code>useRequest</code> \u77e5\u9053\u4f55\u65f6\u505c\u6b62\u3002</p></div>',identifier:"userequest-loadmoreref"}},"pages-userequestsubscribemessage":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,83013));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:me}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-userequestsubscribemessage"}},"pages-userouter":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,82235));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:de}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-userouter"}},"pages-usescancode":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,63570));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:fe}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usescancode"}},"pages-useselectorquery":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,44597));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:he}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useselectorquery"}},"useselectorquery-getboundingclientrect":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,38740));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:ge}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"useselectorquery-getboundingclientrect"}},"useselectorquery-getfields":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,17255));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:ve}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"useselectorquery-getfields"}},"useselectorquery-getscrolloffset":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,26995));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:ke}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"useselectorquery-getscrolloffset"}},"pages-usestorage":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,48817));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:we}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},mockjs:{version:"1.1.0"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usestorage"}},"pages-usesysteminfo":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,87310));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:be}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usesysteminfo"}},"pages-usetabbar":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,92537));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:Ae}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usetabbar"}},"pages-usetoast":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,97307));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:Pe}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usetoast"}},"pages-usetopbartext":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,75507));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:xe}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},mockjs:{version:"1.1.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usetopbartext"}},"pages-useupdatemanager":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,24947));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:ye}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useupdatemanager"}},"pages-useuserinfo":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,16651));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:Ce},"index.less":{import:"./index.less",content:Be}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-useuserinfo"}},"pages-usevibrate":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,78170));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:De}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usevibrate"}},"pages-usevideo":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,29049));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:Re}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usevideo"}},"pages-usevisible":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,92804));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:Se}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.13.0"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usevisible"}},"pages-usewerun":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,98162));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:Ie}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},identifier:"pages-usewerun"}},"pages-index":{component:(0,a.D8)({loader:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1598),t.e(6050)]).then(t.bind(t,18756));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:Te},"index.less":{import:"./index.less",content:je},"constant/index.ts":{import:"../../constant",content:j}},dependencies:{"taro-ui":{version:"3.0.0-alpha.10"},"taro-hooks":{version:"1.4.4"},react:{version:">=16.9"},"@tarojs/components":{version:">=3"},"@tarojs/taro-h5":{version:"3.3.6"},"@tarojs/react":{version:">=3"},"react-dom":{version:">=16.13.0"},"@tarojs/taro":{version:">= 3.x"}},hidden:"1",identifier:"pages-index"}}}}}]);